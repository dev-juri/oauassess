var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.763,1,2.297]],["body/guards/AccessTokenGuard.html",[1,2.695,2,2.236,3,0.213,4,0.192,5,0.192,6,4.709,7,2.517,8,0.213,9,1.294,10,1.696,11,4.709,12,2.331,13,4.268,14,1.702,15,2.517,16,5.378,17,4.293,18,4.709,19,0.732,20,2.943,21,1.607,22,0.021,23,1.165,24,0.476,25,1.369,26,3.649,27,4.183,28,2.943,29,2.517,30,1.227,31,2.493,32,4.268,33,5.213,34,2.943,35,0.663,36,2.938,37,0.676,38,3.456,39,1.045,40,3.456,41,0.612,42,2.026,43,3.242,44,2.517,45,1.859,46,1.859,47,2.236,48,2.517,49,0.213,50,0.024,51,2.236,52,1.366,53,2.517,54,1.349,55,2.943,56,2.517,57,6.096,58,2.943,59,2.943,60,1.913,61,1.702,62,1.719,63,3.649,64,1.109,65,2.943,66,2.943,67,2.517,68,1.6,69,1.496,70,0.887,71,1.174,72,2.943,73,2.943,74,0.012,75,0.012]],["title/interfaces/ActiveAdminData.html",[76,1.733,77,2.504]],["body/interfaces/ActiveAdminData.html",[3,0.345,4,0.312,5,0.312,8,0.345,22,0.02,23,1.556,24,0.609,35,1.126,49,0.345,74,0.017,75,0.017,76,2.272,77,4.066,78,3.011,79,4.077,80,2.592,81,4.077,82,1.526,83,3.918,84,5.735]],["title/classes/Admin.html",[50,0.029,80,1.977]],["body/classes/Admin.html",[3,0.232,4,0.209,5,0.209,8,0.232,10,1.082,19,0.767,22,0.021,23,1.221,24,0.543,35,0.974,37,0.67,41,0.666,49,0.381,50,0.036,54,1.111,60,1.436,61,1.277,62,1.871,64,1.709,68,1.741,69,1.628,70,0.943,71,2.671,74,0.013,75,0.013,80,2.465,82,1.172,83,3.075,85,1.025,86,2.205,87,3.615,88,1.684,89,3.624,90,3.445,91,3.203,92,3.203,93,3.203,94,3.203,95,3.343,96,2.161,97,1.871,98,0.921,99,2.465,100,3.203,101,1.142,102,3.445,103,2.434,104,4.534,105,2.434,106,2.205,107,1.871,108,1.871,109,1.871,110,1.741,111,1.871,112,2.649,113,1.871,114,2.649,115,1.628,116,3.624,117,2.205,118,2.739,119,3.203,120,2.739,121,3.203,122,4.534,123,3.203,124,3.203,125,3.203,126,3.203,127,3.203]],["title/controllers/AdminController.html",[128,1.536,129,2.504]],["body/controllers/AdminController.html",[3,0.36,4,0.325,5,0.325,22,0.02,37,0.672,41,1.034,49,0.36,50,0.04,52,1.591,74,0.017,75,0.017,80,2.703,115,2.526,128,2.1,129,4.172,130,2.228,131,4.251,132,3.423,133,4.251,134,4.251,135,3.423,136,3.553,137,4.251,138,4.972,139,3.423]],["title/modules/AdminModule.html",[140,1.733,141,2.297]],["body/modules/AdminModule.html",[1,2.962,3,0.244,4,0.22,5,0.22,22,0.021,23,0.78,37,0.786,41,0.699,42,2.314,43,2.553,45,2.122,49,0.244,50,0.027,74,0.013,75,0.013,80,1.827,96,1.602,98,0.966,117,3.229,129,3.719,130,2.102,136,3.462,137,2.874,140,2.574,141,4.211,142,1.827,143,1.827,144,2.122,145,2.122,146,1.827,147,3.412,148,2.122,149,2.874,150,2.874,151,3.721,152,2.962,153,2.122,154,1.827,155,3.361,156,3.719,157,3.361,158,3.361,159,3.361,160,2.314,161,2.874,162,2.962,163,3.361,164,2.874,165,3.361,166,3.361,167,2.874,168,3.361,169,2.874,170,4.69,171,2.553,172,3.229,173,3.361,174,2.314,175,2.553,176,3.361,177,3.361,178,3.361,179,2.874,180,3.361]],["title/injectables/AdminService.html",[39,0.891,136,1.977]],["body/injectables/AdminService.html",[3,0.249,4,0.225,5,0.225,8,0.249,9,1.446,10,2.167,12,1.372,14,1.901,19,0.797,21,1.75,22,0.021,23,1.269,24,0.519,25,1.491,30,1.371,31,3.45,35,0.849,37,0.687,39,1.168,41,0.715,49,0.249,50,0.027,52,1.101,54,0.843,61,1.372,64,1.797,70,1.137,74,0.013,75,0.013,80,1.87,83,2.785,98,0.989,101,1.227,106,2.369,136,2.591,161,2.942,181,1.542,182,2.942,183,2.558,184,4.767,185,4.767,186,3.44,187,3.21,188,3.44,189,4.767,190,4.767,191,4.269,192,3.44,193,4.767,194,3.44,195,1.87,196,2.369,197,3.44,198,3.44,199,4.156,200,3.44,201,2.942,202,3.44,203,3.44,204,3.44]],["title/controllers/AppController.html",[128,1.536,205,2.504]],["body/controllers/AppController.html",[3,0.341,4,0.308,5,0.308,8,0.341,9,1.778,19,0.687,22,0.021,30,1.354,35,0.91,37,0.65,41,0.979,49,0.341,50,0.038,52,1.507,70,0.979,74,0.016,75,0.016,88,1.507,128,2.476,130,2.111,139,3.242,205,4.035,206,4.027,207,5.71,208,4.71,209,3.728,210,4.027,211,4.71]],["title/modules/AppModule.html",[140,1.733,212,2.504]],["body/modules/AppModule.html",[3,0.237,4,0.214,5,0.214,22,0.021,37,0.764,38,2.249,41,0.679,45,2.063,49,0.237,50,0.026,54,0.8,71,1.302,74,0.013,75,0.013,98,0.939,130,2.06,140,2.535,141,3.986,142,1.775,143,1.775,144,2.063,145,2.063,146,1.775,147,3.36,148,2.063,152,2.903,153,2.063,154,1.775,160,2.249,167,3.931,174,3.662,205,3.662,209,3.687,210,2.793,212,4.792,213,2.793,214,2.793,215,2.793,216,3.986,217,3.687,218,2.481,219,3.266,220,3.266,221,5.773,222,3.266,223,3.266,224,4.597,225,3.266,226,4.597,227,3.266,228,4.597,229,3.266,230,4.041,231,2.793,232,3.266,233,3.266,234,3.266,235,3.266,236,3.266,237,3.266,238,3.266,239,3.266,240,3.266,241,3.266,242,3.266]],["title/injectables/AppService.html",[39,0.891,209,2.124]],["body/injectables/AppService.html",[3,0.357,4,0.322,5,0.322,8,0.357,9,1.829,19,0.719,22,0.02,30,1.418,35,0.936,37,0.546,39,1.477,41,1.025,49,0.357,50,0.039,70,1.025,74,0.017,75,0.017,181,2.209,207,5.802,209,3.522,243,4.215,244,4.929,245,4.929,246,4.929]],["title/controllers/AuthController.html",[128,1.536,156,2.504]],["body/controllers/AuthController.html",[3,0.293,4,0.264,5,0.264,8,0.293,9,1.611,10,2.005,19,0.589,21,1.292,22,0.021,23,0.937,24,0.383,25,1.101,30,1.161,37,0.726,41,0.84,49,0.293,50,0.032,52,1.292,64,1.522,70,0.84,74,0.015,75,0.015,88,1.292,128,1.706,130,1.81,132,2.78,135,3.657,139,2.78,151,3.467,156,3.657,183,2.367,247,3.453,248,3.355,249,3.657,250,3.453,251,4.248,252,4.038,253,4.038,254,1.925,255,3.068,256,4.038,257,3.453,258,4.038,259,3.453,260,4.038,261,2.359,262,3.453,263,1.925,264,4.038,265,3.068,266,4.038,267,3.453,268,4.038]],["title/injectables/AuthService.html",[39,0.891,151,2.124]],["body/injectables/AuthService.html",[3,0.241,4,0.218,5,0.218,8,0.241,9,1.414,10,1.816,12,1.859,14,1.859,19,0.68,21,1.492,22,0.021,23,1.248,24,0.442,25,1.271,30,0.958,31,2.723,37,0.704,39,1.142,40,2.294,41,0.693,49,0.241,50,0.027,52,1.492,54,0.816,60,2.089,61,1.859,64,2.027,70,0.693,74,0.013,75,0.013,83,1.946,102,3.542,136,3.453,151,2.723,162,4.118,164,2.849,181,1.493,183,2.144,199,3.542,249,3.702,250,3.986,251,3.871,259,2.849,269,2.849,270,3.332,271,3.332,272,3.332,273,2.104,274,2.369,275,1.693,276,1.946,277,3.332,278,3.332,279,3.332,280,3.332,281,2.104,282,4.662,283,3.332,284,3.332,285,3.332,286,3.332,287,3.332,288,4.662,289,3.332,290,3.332,291,3.332,292,1.407,293,2.849,294,2.104]],["title/guards/AuthenticationGuard.html",[0,2.763,172,2.504]],["body/guards/AuthenticationGuard.html",[1,3.975,2,4.446,3,0.214,4,0.193,5,0.193,8,0.214,9,1.297,10,1.698,11,5.512,12,2.433,14,1.705,19,0.623,21,1.368,22,0.021,23,0.992,24,0.406,25,1.166,26,3.656,27,4.188,29,2.523,30,0.849,31,2.498,37,0.676,39,1.047,40,2.944,41,0.614,48,2.523,49,0.214,50,0.024,51,2.242,52,1.953,54,1.433,60,1.323,61,1.177,64,1.112,69,2.555,70,0.614,71,1.705,74,0.012,75,0.012,82,0.763,169,2.523,171,2.242,172,2.944,261,1.724,262,2.523,263,1.406,295,2.523,296,4.276,297,4.276,298,4.276,299,2.951,300,6.293,301,2.951,302,2.951,303,2.951,304,2.523,305,2.951,306,2.242,307,4.276,308,2.951,309,2.951,310,2.951,311,3.656,312,2.951,313,2.951,314,2.951,315,2.951,316,2.032,317,2.951,318,2.951,319,2.951,320,2.523,321,2.523,322,2.951,323,2.951,324,2.951,325,2.951,326,2.951,327,2.951,328,2.951]],["title/classes/CreateAdminDto.html",[50,0.029,191,2.504]],["body/classes/CreateAdminDto.html",[3,0.274,4,0.248,5,0.248,8,0.274,19,0.838,22,0.02,23,1.334,24,0.545,35,1.025,37,0.42,49,0.274,50,0.041,74,0.014,75,0.014,82,1.316,83,3.359,85,1.212,87,3.631,88,1.84,191,3.505,292,2.15,329,5.257,330,3.239,331,3.239,332,3.788,333,3.788,334,3.788,335,3.239,336,5.257,337,5.091,338,5.091,339,4.353,340,4.353,341,4.353,342,5.648,343,4.353,344,3.215,345,4.353,346,4.353,347,3.788,348,4.353,349,3.591,350,3.591,351,3.239,352,2.878,353,2.059,354,3.788,355,3.239,356,3.239]],["title/classes/CreateExamAssignmentDto.html",[50,0.029,357,2.504]],["body/classes/CreateExamAssignmentDto.html",[3,0.269,4,0.243,5,0.243,8,0.269,19,0.929,22,0.02,24,0.604,25,1.663,35,0.947,37,0.557,49,0.269,50,0.04,74,0.014,75,0.014,82,1.299,85,1.189,88,2.039,349,3.563,350,3.563,353,2.02,357,3.459,358,4.989,359,2.619,360,3.177,361,4.868,362,2.893,363,2.893,364,4.868,365,4.325,366,5.215,367,6.371,368,3.715,369,3.919,370,3.715,371,3.919,372,3.715,373,3.715,374,3.715,375,2.02,376,2.823]],["title/classes/CreateExamDto.html",[50,0.029,377,2.124]],["body/classes/CreateExamDto.html",[3,0.256,4,0.231,5,0.231,8,0.256,19,0.913,22,0.021,24,0.594,35,0.927,37,0.538,49,0.256,50,0.039,74,0.014,75,0.014,82,1.255,85,1.131,88,2.004,263,1.684,292,2.051,344,3.773,349,3.779,350,3.241,352,2.685,353,1.921,358,4.915,369,2.433,375,1.921,377,2.837,378,2.733,379,3.023,380,4.744,381,4.744,382,4.744,383,3.943,384,4.744,385,3.535,386,3.535,387,3.535,388,3.535,389,3.535,390,4.856,391,2.468,392,3.535,393,3.535,394,3.535,395,3.535,396,3.535,397,5.548,398,3.535,399,3.535,400,3.535,401,3.535,402,3.535,403,1.921]],["title/injectables/CreateExamProvider.html",[39,0.891,404,2.124]],["body/injectables/CreateExamProvider.html",[3,0.174,4,0.157,5,0.157,8,0.174,9,1.111,10,1.501,12,1.984,14,1.46,19,0.534,21,1.172,22,0.021,23,0.85,24,0.347,25,0.998,30,0.689,37,0.715,38,2.521,39,0.897,41,0.498,49,0.174,50,0.019,52,1.592,54,1.219,60,1.641,61,1.46,62,1.4,64,2.13,68,1.303,69,1.218,70,0.498,71,0.956,74,0.01,75,0.01,98,0.689,101,0.855,181,1.074,183,1.772,187,3.196,195,1.303,196,2.521,254,1.142,263,1.142,274,1.861,275,1.218,276,1.4,281,1.514,292,1.012,294,1.514,316,1.65,357,2.521,359,2.344,362,1.861,363,1.218,365,2.782,371,1.65,375,1.991,376,1.821,377,3.301,378,1.012,383,1.4,404,2.139,405,3.801,406,1.65,407,3.376,408,2.397,409,3.569,410,3.196,411,4.444,412,4.444,413,2.397,414,1.821,415,2.807,416,2.416,417,2.397,418,1.65,419,1.821,420,1.303,421,1.514,422,2.397,423,2.521,424,2.397,425,1.514,426,1.65,427,2.05,428,2.05,429,1.65,430,2.397,431,3.06,432,1.65,433,1.65,434,1.821,435,4.255,436,3.662,437,2.397,438,2.397,439,1.65,440,2.397,441,2.05,442,2.05,443,2.397,444,2.05,445,1.65,446,2.397,447,1.821,448,1.821,449,2.397,450,1.745,451,1.514,452,1.821,453,2.397,454,2.397,455,2.05,456,2.397,457,2.397,458,1.821,459,2.397,460,1.65,461,2.397,462,1.821,463,2.397,464,1.65,465,2.397,466,2.397,467,1.65,468,1.65]],["title/classes/Exam.html",[50,0.029,359,1.45]],["body/classes/Exam.html",[3,0.225,4,0.203,5,0.203,8,0.225,19,0.905,22,0.021,24,0.631,25,1.208,35,0.876,36,2.135,37,0.573,49,0.375,50,0.025,54,0.759,70,0.645,71,2.689,74,0.012,75,0.012,82,1.145,85,0.992,88,1.986,89,3.883,95,3.731,96,2.111,97,1.811,98,0.892,99,2.408,101,1.58,107,1.811,108,1.811,109,1.811,110,1.685,111,1.811,112,2.588,113,1.811,114,2.588,115,1.575,116,3.883,263,1.478,344,3.562,359,1.767,363,1.575,375,1.685,380,4.421,381,4.421,382,4.421,383,3.884,384,4.421,420,1.685,469,2.135,470,3.265,471,3.101,472,3.101,473,3.101,474,3.101,475,3.101,476,3.101,477,4.43,478,2.356,479,3.101,480,3.101,481,2.651,482,2.651,483,2.651]],["title/classes/ExamAssignment.html",[50,0.029,425,2.297]],["body/classes/ExamAssignment.html",[3,0.233,4,0.211,5,0.211,8,0.439,19,0.836,22,0.021,24,0.613,25,1.564,36,3.134,37,0.671,49,0.383,50,0.026,54,0.789,70,0.67,71,2.413,74,0.013,75,0.013,82,1.176,85,1.031,88,1.836,95,3.773,96,2.169,97,1.882,98,0.926,99,2.474,101,1.623,107,1.882,108,1.882,109,1.882,110,1.751,111,1.882,112,2.659,113,1.882,114,2.659,115,1.637,359,2.413,361,4.514,362,2.682,364,4.514,365,4.011,366,4.906,371,2.217,375,1.751,376,2.447,425,2.875,426,2.217,450,2.885,478,3.458,481,3.893,482,3.893,484,4.167,485,2.217,486,3.221,487,3.221,488,3.221,489,4.552,490,3.221,491,3.221,492,3.221,493,2.754,494,2.217,495,2.754]],["title/controllers/ExamController.html",[128,1.536,496,2.504]],["body/controllers/ExamController.html",[3,0.188,4,0.17,5,0.17,8,0.188,9,1.182,10,2.249,19,0.756,21,1.66,22,0.021,23,1.204,24,0.492,25,1.414,30,1.492,35,0.725,37,0.67,41,0.541,46,1.643,49,0.188,50,0.021,52,0.832,70,1.078,74,0.011,75,0.011,88,1.66,115,1.321,128,1.099,130,1.166,132,1.79,133,3.994,134,2.224,135,2.682,139,1.79,183,2.655,196,1.79,248,1.643,254,2.472,255,2.96,257,2.224,261,1.519,263,1.239,265,1.976,359,1.553,362,1.979,377,3.406,378,1.645,407,3.548,414,1.976,415,3.276,416,3.456,419,1.976,496,2.682,497,2.224,498,3.331,499,3.548,500,3.548,501,2.601,502,2.601,503,2.224,504,2.601,505,2.601,506,2.601,507,4.162,508,3.94,509,2.601,510,2.601,511,5.187,512,2.601,513,4.435,514,2.601,515,2.601,516,4.671,517,3.896,518,2.224,519,2.601,520,2.601,521,2.601,522,2.729,523,2.224,524,2.601,525,2.601,526,2.224,527,2.224,528,1.976,529,2.601,530,2.601,531,2.601,532,2.601,533,4.671,534,2.601,535,2.601,536,2.601,537,2.601,538,2.601,539,2.601,540,2.601,541,2.601,542,2.224,543,2.601]],["title/modules/ExamModule.html",[140,1.733,216,2.297]],["body/modules/ExamModule.html",[3,0.223,4,0.202,5,0.202,22,0.021,23,1.306,37,0.763,41,0.641,49,0.223,50,0.025,74,0.012,75,0.012,96,2.681,98,0.887,130,1.978,140,2.456,142,1.677,143,1.677,144,1.948,145,1.948,146,1.677,147,3.255,148,1.948,152,2.787,153,1.948,154,1.677,160,2.123,174,3.039,175,2.343,216,4.421,217,3.618,359,1.23,363,2.243,378,1.303,391,1.567,403,1.677,404,3.618,421,1.948,425,1.948,427,2.637,428,2.637,494,3.039,496,3.548,522,3.618,523,2.637,544,2.637,545,3.084,546,2.637,547,3.618,548,3.618,549,3.084,550,3.084,551,3.084,552,3.084,553,4.408,554,4.414,555,3.039,556,2.343,557,3.039,558,1.948,559,3.039,560,2.637,561,3.084,562,3.084,563,3.084,564,3.084]],["title/injectables/ExamService.html",[39,0.891,522,2.124]],["body/injectables/ExamService.html",[3,0.14,4,0.126,5,0.126,8,0.14,9,0.938,10,2.094,12,1.929,14,1.233,19,0.705,21,1.548,22,0.021,23,1.123,24,0.459,25,1.319,30,1.272,35,0.902,37,0.661,39,0.757,41,0.401,49,0.14,50,0.015,52,1.548,54,0.757,60,2.313,61,2.058,64,1.458,70,0.919,74,0.009,75,0.009,98,0.555,101,0.689,179,3.307,181,0.865,183,2.472,187,2.947,195,1.05,196,1.329,254,2.107,273,1.219,274,1.571,275,0.981,276,1.128,281,1.219,292,0.816,316,1.329,359,1.929,362,1.965,377,3.015,378,1.306,391,0.981,404,3.015,407,2.938,414,1.467,415,3.055,416,3.309,418,3.044,419,1.467,420,1.05,421,1.219,429,1.329,451,2.442,470,1.953,498,2.644,499,2.349,500,2.349,503,2.644,508,3.675,513,4.414,522,1.806,547,3.167,548,3.167,553,3.307,556,1.467,557,1.329,558,1.219,565,1.651,566,1.931,567,3.867,568,3.307,569,1.931,570,1.931,571,1.931,572,2.644,573,1.931,574,2.644,575,1.931,576,1.651,577,1.931,578,4.422,579,3.867,580,3.092,581,3.307,582,2.644,583,3.092,584,1.931,585,1.931,586,1.931,587,1.931,588,1.467,589,1.931,590,1.931,591,1.651,592,1.931,593,1.931,594,1.931,595,1.931,596,4.422,597,3.781,598,1.651,599,2.442,600,3.867,601,1.931,602,1.931,603,2.644,604,1.931,605,1.931,606,1.931,607,1.931,608,3.092,609,1.931]],["title/classes/GenerateTokenProvider.html",[50,0.029,162,2.297]],["body/classes/GenerateTokenProvider.html",[3,0.267,4,0.241,5,0.241,8,0.267,9,1.514,10,1.913,12,1.991,14,1.991,15,3.147,16,5.6,17,4.845,18,5.195,19,0.728,21,1.813,22,0.021,23,1.158,24,0.537,25,1.361,30,1.058,35,0.879,37,0.673,38,2.534,41,0.765,42,2.534,43,2.796,44,3.147,45,2.324,49,0.267,50,0.029,52,1.598,53,3.147,63,5.195,64,1.387,70,0.765,74,0.014,75,0.014,84,3.147,85,1.178,162,3.153,183,2.259,254,1.754,610,4.845,611,3.147,612,4.992,613,3.68,614,4.992,615,6.075,616,3.68,617,4.992,618,3.68,619,3.68,620,3.68,621,3.68,622,3.68,623,3.68]],["title/classes/GlobalHttpExceptionFilter.html",[50,0.029,624,2.763]],["body/classes/GlobalHttpExceptionFilter.html",[3,0.263,4,0.238,5,0.238,8,0.263,9,1.501,19,0.53,21,1.163,22,0.021,23,0.843,24,0.345,25,0.991,30,1.045,35,0.564,37,0.549,41,0.756,46,2.295,49,0.263,50,0.029,51,3.76,54,1.549,68,3.285,69,2.515,70,0.756,74,0.014,75,0.014,85,1.163,292,2.553,493,3.108,518,3.108,624,3.76,625,4.233,626,4.233,627,3.108,628,5.629,629,4.95,630,5.629,631,6.043,632,3.634,633,5.629,634,5.629,635,4.95,636,3.108,637,3.634,638,3.634,639,3.634,640,4.95,641,3.634,642,3.634,643,5.629,644,3.634,645,3.634,646,3.634,647,3.108,648,3.634,649,3.634,650,3.634,651,3.634,652,3.634,653,3.634,654,3.634]],["title/interfaces/IMcqQuestion.html",[76,1.733,655,2.504]],["body/interfaces/IMcqQuestion.html",[3,0.296,4,0.267,5,0.267,8,0.296,22,0.02,24,0.64,35,1.147,49,0.388,54,1,74,0.015,75,0.015,76,1.945,78,2.577,82,1.382,655,4.107,656,2.809,657,2.809,658,5.621,659,4.994,660,5.621,661,4.151,662,5.621,663,3.34,664,2.809,665,2.809]],["title/interfaces/IOeQuestion.html",[76,1.733,666,2.504]],["body/interfaces/IOeQuestion.html",[3,0.362,4,0.326,5,0.326,8,0.362,22,0.02,24,0.474,35,1.017,49,0.44,54,1.223,74,0.017,75,0.017,76,2.379,78,3.153,82,1.57,657,3.437,663,3.549,665,3.437,666,4.509,667,3.437,668,3.437]],["title/interfaces/IStudent.html",[76,1.733,669,2.504]],["body/interfaces/IStudent.html",[3,0.347,4,0.313,5,0.313,8,0.347,22,0.02,24,0.562,35,1.091,49,0.429,54,1.173,74,0.017,75,0.017,76,2.281,78,3.023,82,1.53,665,3.296,669,4.426,670,3.637,671,4.751,672,5.243,673,3.296]],["title/injectables/InsertStudentProvider.html",[39,0.891,674,2.124]],["body/injectables/InsertStudentProvider.html",[3,0.191,4,0.173,5,0.173,8,0.191,9,1.196,10,1.592,12,1.572,14,1.054,19,0.575,21,1.261,22,0.021,23,0.915,24,0.374,25,1.075,30,0.76,31,2.303,35,0.41,37,0.65,39,0.966,41,0.549,49,0.191,50,0.021,52,1.261,54,1.437,56,2.259,60,1.184,61,1.054,62,1.543,64,2.291,68,1.436,69,1.342,70,0.82,71,1.054,74,0.011,75,0.011,98,0.76,101,0.942,103,2.995,181,1.184,183,1.88,187,2.842,195,1.436,294,1.669,409,3.838,415,2.978,416,2.563,423,2.714,431,3.246,432,1.819,433,1.819,434,2.007,435,4.032,441,2.259,442,2.259,445,1.819,447,2.007,448,2.007,450,2.247,451,1.669,452,2.007,458,2.007,460,1.819,464,1.819,467,1.819,468,1.819,591,2.259,599,1.669,669,1.819,671,1.819,673,2.714,674,2.303,675,4.032,676,2.259,677,4.032,678,2.259,679,2.642,680,3.371,681,2.259,682,2.642,683,1.669,684,2.007,685,2.489,686,1.669,687,2.007,688,2.642,689,2.642,690,4.715,691,2.642,692,3.942,693,2.642,694,3.942,695,3.246,696,2.642,697,2.642,698,3.942,699,2.642,700,2.642,701,2.642,702,3.942,703,2.642,704,2.642,705,2.642,706,2.642,707,2.642,708,2.642,709,2.642,710,2.642,711,2.007,712,2.007]],["title/classes/LoginDto.html",[50,0.029,251,2.297]],["body/classes/LoginDto.html",[3,0.293,4,0.264,5,0.264,8,0.293,19,0.774,22,0.02,24,0.504,35,0.979,37,0.448,49,0.293,50,0.042,74,0.015,75,0.015,82,1.373,83,3.467,85,1.292,87,3.749,88,1.7,251,3.355,292,2.244,331,3.453,335,3.453,336,5.392,339,4.542,340,4.542,341,4.542,342,5.751,343,4.542,344,3.355,345,4.542,346,4.542,348,4.542,349,3.467,350,3.467,351,3.453,352,3.068,353,2.195,355,3.453,356,3.453,713,3.453,714,4.038,715,5.312,716,5.312,717,4.038]],["title/classes/LoginStudentDto.html",[50,0.029,718,2.297]],["body/classes/LoginStudentDto.html",[3,0.317,4,0.286,5,0.286,8,0.317,19,0.815,22,0.021,24,0.531,35,1.009,37,0.62,49,0.317,50,0.049,74,0.016,75,0.016,82,1.446,85,1.399,87,3.895,88,1.79,105,3.322,110,3.04,349,3.602,350,3.602,353,2.377,369,3.01,695,4.245,718,3.532,719,5.273,720,3.739,721,4.373,722,4.373,723,4.373,724,3.322,725,4.373]],["title/classes/Mcq.html",[50,0.029,378,1.536]],["body/classes/Mcq.html",[3,0.348,4,0.314,5,0.314,8,0.348,19,0.939,22,0.02,24,0.611,35,1.093,49,0.348,50,0.038,74,0.017,75,0.017,82,1.534,85,1.538,378,2.507,661,4.067,663,3.272,726,4.111,727,4.893,728,4.807,729,4.807,730,4.807]],["title/classes/McqQuestion.html",[50,0.029,391,1.848]],["body/classes/McqQuestion.html",[3,0.262,4,0.236,5,0.236,8,0.262,19,0.818,22,0.021,24,0.598,35,1.035,36,2.486,37,0.546,49,0.407,50,0.029,54,0.885,70,0.751,71,2.775,74,0.014,75,0.014,82,1.274,85,1.156,88,1.795,89,3.393,90,3.744,95,3.521,96,2.349,97,2.11,98,1.039,99,2.679,101,1.288,107,2.11,108,2.11,109,2.11,110,1.963,111,2.11,112,2.879,113,2.11,114,2.879,115,1.835,116,4.15,391,2.504,478,2.744,555,2.486,661,3.543,663,2.851,727,4.263,731,4.15,732,2.281,733,3.611,734,3.611,735,3.088,736,2.486,737,3.088]],["title/classes/OeQuestion.html",[50,0.029,403,1.977]],["body/classes/OeQuestion.html",[3,0.308,4,0.277,5,0.277,8,0.308,19,0.619,22,0.021,24,0.521,35,0.852,37,0.608,49,0.441,50,0.034,54,1.04,70,0.883,71,2.188,74,0.015,75,0.015,82,1.418,85,1.358,88,1.358,95,3.552,96,2.615,97,2.48,98,1.221,99,2.983,101,1.514,107,2.48,108,2.48,109,2.48,110,2.308,111,2.48,112,3.206,113,2.48,114,3.206,115,2.157,403,2.983,559,2.922,663,3.09,732,2.681,735,3.63,738,3.778,739,2.922,740,3.63]],["title/classes/Student.html",[50,0.029,450,1.733]],["body/classes/Student.html",[3,0.28,4,0.253,5,0.253,8,0.421,19,0.752,22,0.021,24,0.551,35,0.962,37,0.572,49,0.421,50,0.031,54,0.946,70,0.803,71,2.81,74,0.014,75,0.014,82,1.333,85,1.236,88,1.651,89,3.551,90,3.919,95,3.392,96,2.458,97,2.257,98,1.111,99,2.804,101,1.378,107,2.257,108,2.257,109,2.257,110,2.1,111,2.257,112,3.013,113,2.257,114,3.013,115,1.963,116,3.551,450,2.458,671,3.998,683,2.44,695,3.998,741,2.66,742,3.864,743,3.864,744,2.66,745,3.304]],["title/controllers/StudentController.html",[128,1.536,746,2.504]],["body/controllers/StudentController.html",[3,0.293,4,0.264,5,0.264,8,0.293,9,1.611,10,2.005,12,1.61,14,1.61,19,0.589,21,1.292,22,0.021,23,0.937,24,0.383,25,1.101,30,1.161,37,0.726,41,0.84,49,0.293,50,0.032,52,1.292,70,0.84,74,0.015,75,0.015,88,1.292,128,1.706,130,1.81,132,2.78,135,2.78,183,2.367,248,2.55,249,3.657,254,1.925,255,3.068,261,2.359,263,1.925,265,3.068,267,3.453,410,3.227,450,1.925,527,3.453,528,3.068,718,4.248,746,3.657,747,3.453,748,4.038,749,4.038,750,4.038,751,3.453,752,3.453,753,3.453,754,4.038,755,4.038,756,4.038]],["title/modules/StudentModule.html",[140,1.733,217,2.124]],["body/modules/StudentModule.html",[3,0.277,4,0.25,5,0.25,22,0.021,23,0.888,37,0.734,41,0.795,49,0.277,50,0.031,74,0.014,75,0.014,96,1.823,98,1.1,130,2.297,140,2.754,142,2.08,143,2.08,144,2.416,145,2.416,146,2.08,147,3.649,148,3.649,152,3.236,153,2.416,154,2.08,160,2.634,174,2.634,175,2.906,217,4.067,410,3.884,450,1.823,674,3.869,684,2.906,744,3.528,746,3.978,753,3.271,757,3.271,758,3.271,759,3.271,760,3.826,761,3.826,762,3.826,763,3.271,764,3.826]],["title/injectables/StudentService.html",[39,0.891,410,1.977]],["body/injectables/StudentService.html",[3,0.223,4,0.202,5,0.202,8,0.223,9,1.339,10,2.092,12,1.76,14,1.76,19,0.751,21,1.649,22,0.021,23,1.196,24,0.489,25,1.405,30,1.269,31,2.578,37,0.707,39,1.081,40,2.123,41,0.641,49,0.223,50,0.025,52,1.412,60,1.978,61,1.76,64,1.162,70,0.918,74,0.012,75,0.012,87,1.948,98,0.887,101,1.1,181,1.382,183,2.47,187,3.058,195,1.677,249,2.123,254,1.47,273,1.948,274,2.243,275,1.567,276,1.802,292,1.303,293,2.637,294,1.948,344,1.948,410,2.399,415,2.787,416,2.802,434,2.343,450,2.681,672,2.343,674,3.725,677,4.408,678,2.637,680,3.774,681,2.637,683,1.948,684,2.343,695,2.123,718,3.76,751,2.637,752,2.637,763,2.637,765,2.637,766,4.414,767,3.084,768,3.084,769,4.414,770,3.084,771,3.084,772,3.084,773,3.084,774,3.084,775,3.084,776,3.084,777,3.084,778,3.084,779,3.084,780,3.084]],["title/classes/UpdateMcqExamParamDto.html",[50,0.029,507,2.504]],["body/classes/UpdateMcqExamParamDto.html",[3,0.348,4,0.314,5,0.314,8,0.348,19,0.701,22,0.02,24,0.456,35,0.922,37,0.533,49,0.348,50,0.047,74,0.017,75,0.017,82,1.534,85,1.538,88,1.538,349,3.468,350,3.468,353,2.613,359,2.367,362,3.272,369,3.309,378,2.507,507,4.087,781,5.076,782,4.111,783,4.807]],["title/injectables/UpdateMcqExamProvider.html",[39,0.891,547,2.124]],["body/injectables/UpdateMcqExamProvider.html",[3,0.164,4,0.148,5,0.148,8,0.164,9,1.064,10,1.449,12,2.203,14,1.399,19,0.626,21,1.373,22,0.021,23,0.996,24,0.407,25,1.17,30,1.009,35,0.666,37,0.677,39,0.859,41,0.471,49,0.164,50,0.018,52,1.373,54,1.412,60,2.165,61,1.926,62,1.324,64,2.172,68,1.232,69,1.151,70,0.729,71,0.904,74,0.01,75,0.01,98,0.652,101,0.808,103,1.721,181,1.016,183,1.711,187,3.133,195,1.232,254,1.08,263,1.08,273,1.431,274,1.782,275,1.151,276,1.324,281,1.431,292,0.957,359,2.083,362,1.151,363,2.18,375,1.232,378,2.207,383,1.324,391,1.151,406,1.56,409,3.639,416,2.333,418,2.415,420,1.232,421,1.431,423,2.415,429,1.56,431,2.415,432,1.56,433,1.56,439,1.56,445,2.954,447,1.721,448,1.721,451,1.431,452,1.721,455,1.938,458,1.721,460,1.56,462,1.721,464,1.56,467,1.56,468,1.56,470,1.431,499,2.665,508,3.67,547,2.049,556,1.721,557,1.56,568,2.999,572,2.999,576,1.938,588,1.721,599,1.431,655,3.326,656,1.56,661,2.215,663,1.782,664,2.415,685,2.215,686,1.431,687,1.721,711,1.721,712,1.721,727,1.721,736,1.56,784,3.67,785,3.507,786,2.266,787,2.266,788,3.507,789,2.266,790,3.507,791,2.266,792,1.938,793,1.938,794,1.938,795,1.938,796,1.721,797,2.266,798,2.266,799,1.938,800,2.266,801,1.938,802,2.266,803,1.938,804,2.266,805,1.938,806,2.266,807,1.938,808,1.938,809,2.266,810,2.266,811,2.266,812,2.266,813,2.266,814,2.266,815,2.266,816,2.266,817,2.266,818,2.266,819,2.266]],["title/injectables/UpdateOeExamProvider.html",[39,0.891,548,2.124]],["body/injectables/UpdateOeExamProvider.html",[3,0.178,4,0.16,5,0.16,8,0.178,9,1.13,10,1.522,12,1.797,14,1.486,19,0.543,21,1.193,22,0.021,23,0.865,24,0.354,25,1.016,30,0.705,35,0.7,37,0.693,39,0.913,41,0.51,49,0.178,50,0.02,52,1.442,54,1.326,60,2.257,61,2.008,62,1.433,64,2.234,68,1.333,69,1.246,70,0.51,74,0.01,75,0.01,98,0.705,101,0.875,181,1.099,183,1.797,187,3.222,195,1.333,254,1.169,263,1.169,273,1.549,274,1.894,275,1.246,276,1.433,281,1.549,292,1.036,316,1.688,359,2.274,362,1.894,363,2.29,375,1.333,383,1.433,403,1.333,406,1.688,409,3.743,416,3.1,418,2.566,420,1.333,421,1.549,423,2.566,429,1.688,431,3.103,432,1.688,433,1.688,439,1.688,444,2.097,445,1.688,451,1.549,460,1.688,462,1.863,464,1.688,467,1.688,468,1.688,470,1.549,500,3.425,548,2.177,557,1.688,558,3.18,560,2.097,574,2.097,588,1.863,597,3.855,599,1.549,663,1.246,666,1.688,667,1.688,668,2.566,685,1.549,686,1.549,687,1.863,711,1.863,712,1.863,739,1.688,784,3.425,792,2.097,793,2.097,794,2.097,795,2.097,796,1.863,799,2.097,801,2.097,803,2.097,805,2.097,807,2.097,808,2.097,820,2.452,821,2.452,822,3.727,823,4.508,824,2.452,825,2.452,826,2.452,827,2.452,828,2.452,829,2.452,830,2.452,831,2.452,832,2.452,833,2.452,834,2.452,835,2.452,836,2.452,837,2.452,838,2.452,839,2.452,840,2.452]],["title/coverage.html",[841,3.762]],["body/coverage.html",[0,2.352,1,1.221,5,0.126,6,1.654,7,1.654,22,0.021,24,0.515,39,1.424,47,1.469,50,0.052,61,0.771,74,0.009,75,0.009,76,2.109,77,1.331,79,1.654,80,1.683,81,1.654,86,2.665,106,1.331,117,1.331,120,3.311,128,2.045,129,1.331,131,1.654,136,1.051,146,1.051,151,1.13,156,1.331,162,1.221,172,1.331,182,1.654,191,1.331,205,1.331,206,1.654,209,1.13,218,1.469,230,1.469,243,1.654,247,1.654,248,1.221,251,1.221,269,1.654,274,0.983,275,0.983,295,1.654,306,1.469,329,1.654,330,1.654,357,1.331,358,2.352,359,1.544,360,1.654,363,0.983,377,1.13,378,1.869,379,1.654,391,0.983,403,1.051,404,1.13,405,1.654,406,2.665,410,1.051,420,1.051,425,1.221,426,1.331,439,5.077,450,0.922,469,2.665,484,2.665,485,2.665,494,1.331,496,1.331,497,1.654,507,1.331,522,1.13,547,1.13,548,1.13,555,1.331,558,1.221,559,1.331,565,1.654,610,1.654,611,1.654,624,1.469,625,1.654,626,1.654,627,1.654,655,1.331,656,2.132,657,3.047,664,1.331,666,1.331,667,2.132,668,1.331,669,1.331,670,2.352,673,1.331,674,1.13,675,1.654,676,1.654,683,1.221,685,1.221,686,1.221,713,1.654,718,1.221,719,1.654,720,1.654,726,1.654,731,2.665,732,3.262,736,1.331,738,2.665,739,1.331,741,2.665,744,1.331,746,1.331,747,1.654,765,1.654,781,1.654,782,1.654,784,2.352,841,1.469,842,1.469,843,1.934,844,1.934,845,6.893,846,5.636,847,2.648,848,6.385,849,1.654,850,1.654,851,1.654,852,1.654,853,5.813,854,5.813,855,3.872,856,5.165,857,3.872,858,3.096,859,1.654,860,1.654,861,1.654,862,1.934,863,1.934]],["title/dependencies.html",[143,2.376,864,2.602]],["body/dependencies.html",[22,0.021,41,0.964,42,3.191,45,2.927,46,2.927,50,0.046,74,0.016,75,0.016,98,1.333,101,1.653,102,3.521,105,3.521,143,2.519,171,3.521,304,3.963,353,2.519,526,3.963,581,3.963,865,6.335,866,4.634,867,4.634,868,4.634,869,4.634,870,4.634,871,4.634,872,4.634,873,4.634,874,4.634,875,4.634,876,4.634,877,4.634,878,4.634,879,4.634,880,4.634,881,4.634]],["title/miscellaneous/enumerations.html",[882,1.546,883,3.738]],["body/miscellaneous/enumerations.html",[8,0.351,22,0.02,74,0.017,75,0.017,261,3.485,371,4.108,378,2.047,383,3.485,391,2.463,403,2.635,528,3.682,558,3.061,724,5.125,882,2.463,883,4.145,884,4.847,885,6.745,886,4.533,887,5.966,888,4.847,889,4.847,890,5.966,891,5.966,892,5.966]],["title/miscellaneous/functions.html",[882,1.546,893,3.738]],["body/miscellaneous/functions.html",[8,0.343,21,1.88,22,0.02,23,1.364,24,0.449,25,1.602,30,1.36,35,0.912,74,0.016,75,0.016,146,3.475,201,4.044,274,2.986,275,2.403,292,2.482,294,3.711,599,2.986,685,3.711,686,2.986,859,4.044,860,5.025,861,5.025,882,2.403,893,4.044,894,4.729,895,4.729,896,4.729,897,4.729,898,5.876,899,4.729]],["title/index.html",[8,0.22,900,2.602,901,2.602]],["body/index.html",[4,0.207,22,0.02,74,0.013,75,0.013,154,3.092,321,2.702,470,1.995,598,2.702,603,3.84,647,2.702,796,3.411,841,2.4,842,2.4,902,3.16,903,3.16,904,5.224,905,3.16,906,3.16,907,3.16,908,3.16,909,3.16,910,2.702,911,5.224,912,3.16,913,3.16,914,3.16,915,5.688,916,3.16,917,5.224,918,6.423,919,3.16,920,6.423,921,3.16,922,3.16,923,3.16,924,3.16,925,3.16,926,3.16,927,5.224,928,3.16,929,4.49,930,3.16,931,3.16,932,3.16,933,5.688,934,3.16,935,3.16,936,3.16,937,3.16,938,3.16,939,5.688,940,4.49,941,3.16,942,5.224,943,4.864,944,3.16,945,3.16,946,3.16,947,3.16,948,3.16,949,3.16,950,5.224,951,3.16,952,3.16,953,3.16,954,4.49,955,3.16,956,3.16,957,3.16,958,5.224,959,3.16,960,3.16,961,3.16,962,3.16,963,3.16,964,3.16,965,4.49,966,3.16,967,3.16,968,3.16,969,3.16,970,3.16,971,4.49,972,3.16,973,3.16,974,3.16,975,3.84,976,4.49,977,3.16,978,3.16,979,3.16,980,3.16,981,3.16,982,3.16,983,3.16,984,3.16,985,3.16,986,3.16,987,3.16,988,2.702,989,3.16,990,3.16,991,3.16,992,3.16,993,3.16,994,3.16,995,2.175]],["title/license.html",[900,2.602,901,2.602,995,2.095]],["body/license.html",[22,0.015,46,2.498,74,0.015,75,0.015,154,2.15,409,2.498,582,3.383,659,3.005,842,3.005,975,3.383,995,2.723,996,5.876,997,3.956,998,3.956,999,3.956,1000,5.24,1001,3.956,1002,3.956,1003,3.956,1004,3.956,1005,3.956,1006,3.956,1007,5.24,1008,7.009,1009,3.956,1010,3.956,1011,5.876,1012,3.956,1013,5.24,1014,3.956,1015,3.956,1016,5.24,1017,3.956,1018,3.956,1019,3.956,1020,3.956,1021,3.956,1022,3.956,1023,3.956,1024,5.24,1025,3.956,1026,3.956,1027,3.956,1028,3.956,1029,3.956,1030,3.956,1031,3.956,1032,5.24,1033,5.24,1034,3.956,1035,3.956,1036,3.956,1037,3.956,1038,3.956,1039,3.956,1040,3.956,1041,3.956,1042,3.956,1043,3.956,1044,3.956,1045,3.956,1046,3.956,1047,3.956,1048,3.956,1049,3.956,1050,3.956,1051,3.956,1052,3.956,1053,3.956,1054,3.956,1055,3.956,1056,3.956,1057,3.956,1058,3.956,1059,3.956,1060,3.956,1061,3.956]],["title/modules.html",[142,2.692]],["body/modules.html",[22,0.017,74,0.017,75,0.017,141,3.31,142,2.849,212,3.608,216,3.31,217,3.062,943,5.923,1062,6.926,1063,6.926,1064,6.926]],["title/overview.html",[1065,4.235]],["body/overview.html",[2,2.77,22,0.02,74,0.014,75,0.014,78,2.302,85,1.167,130,1.634,136,3.065,140,1.737,141,4.22,142,1.982,143,1.982,144,2.302,145,2.302,146,1.982,147,2.302,148,2.302,149,3.117,150,3.117,151,3.294,152,3.133,153,2.302,154,1.982,181,1.634,209,3.294,212,4.8,213,3.117,214,3.117,215,3.117,216,4.508,217,4.027,404,3.294,410,3.632,522,3.294,542,3.117,544,3.117,546,3.117,547,3.294,548,3.294,674,3.294,757,3.117,758,3.117,759,3.117,1065,3.117,1066,4.96,1067,3.645,1068,3.645,1069,3.645]],["title/properties.html",[82,1.13,864,2.602]],["body/properties.html",[22,0.02,74,0.018,75,0.018,82,1.418,910,4.693,988,4.693,995,3.779,1070,5.488,1071,5.488,1072,5.488]],["title/miscellaneous/typealiases.html",[882,1.546,1073,4.371]],["body/miscellaneous/typealiases.html",[8,0.35,22,0.017,24,0.458,74,0.017,75,0.017,86,3.323,99,3.83,106,4.097,420,3.235,426,4.097,469,3.323,484,3.323,485,4.097,683,3.758,731,3.323,732,4.254,736,4.097,738,3.323,739,4.097,741,3.323,882,2.453,886,3.667,1074,4.827,1075,4.128,1076,4.128,1077,4.128,1078,4.128,1079,4.128]],["title/miscellaneous/variables.html",[882,1.546,1080,3.738]],["body/miscellaneous/variables.html",[8,0.222,22,0.021,24,0.563,27,2.325,33,2.616,35,0.681,47,3.334,54,1.075,67,2.616,70,0.636,74,0.012,75,0.012,77,3.021,86,2.106,117,3.021,118,2.616,199,3.899,218,2.325,230,3.334,231,2.616,248,2.772,261,2.564,306,3.334,311,3.753,320,5.978,363,2.23,469,2.106,483,2.616,484,2.106,485,3.021,494,3.021,495,2.616,555,3.021,559,3.021,636,2.616,656,2.106,657,3.859,658,2.616,659,2.325,660,2.616,661,1.932,662,2.616,663,2.23,664,3.021,665,2.106,667,2.106,668,3.021,670,2.325,671,2.106,672,2.325,673,3.021,724,5.311,731,2.106,732,3.54,737,2.616,738,2.106,740,2.616,741,2.106,744,3.021,745,2.616,847,2.616,849,2.616,850,3.753,851,3.753,852,2.616,882,1.555,886,2.325,1075,2.616,1076,2.616,1077,3.753,1078,3.753,1079,2.616,1080,2.616,1081,3.06,1082,3.06,1083,4.389,1084,3.06,1085,3.06,1086,3.06,1087,4.389,1088,3.06,1089,3.06,1090,3.06]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":439,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1071,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["0.18.5",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0].tolowercase",{"_index":777,"title":{},"body":{"injectables/StudentService.html":{}}}],["10.0.0",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1069,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":542,"title":{},"body":{"controllers/ExamController.html":{},"overview.html":{}}}],["2025",{"_index":997,"title":{},"body":{"license.html":{}}}],["4",{"_index":1066,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["8.13.2",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1068,"title":{},"body":{"overview.html":{}}}],["_",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["_id",{"_index":591,"title":{},"body":{"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{}}}],["above",{"_index":1031,"title":{},"body":{"license.html":{}}}],["access",{"_index":305,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["accesstoken",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["action",{"_index":1056,"title":{},"body":{"license.html":{}}}],["activeadmin",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeadmindata",{"_index":77,"title":{"interfaces/ActiveAdminData.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin",{"_index":80,"title":{"classes/Admin.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["admin.controller",{"_index":157,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.decorator.ts",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin.dto",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["admin.dto.ts:13",{"_index":334,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:18",{"_index":332,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:27",{"_index":347,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.name",{"_index":176,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["admincontroller",{"_index":129,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["admindocument",{"_index":106,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["adminid",{"_index":617,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["adminmodel",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminmodule",{"_index":141,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminschema",{"_index":117,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminschema.pre('save",{"_index":119,"title":{},"body":{"classes/Admin.html":{}}}],["adminservice",{"_index":136,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["affected",{"_index":700,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["affectedmatricnos",{"_index":702,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["affectedstudents",{"_index":705,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["affectedstudents.map((s",{"_index":709,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["alias",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1074,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":583,"title":{},"body":{"injectables/ExamService.html":{}}}],["amazing",{"_index":981,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1022,"title":{},"body":{"license.html":{}}}],["answer",{"_index":661,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":170,"title":{},"body":{"modules/AdminModule.html":{}}}],["appconfig",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":205,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":954,"title":{},"body":{"index.html":{}}}],["application/pdf",{"_index":602,"title":{},"body":{"injectables/ExamService.html":{}}}],["application/vnd.openxmlformats",{"_index":578,"title":{},"body":{"injectables/ExamService.html":{}}}],["applications",{"_index":909,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":212,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":209,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":631,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["arising",{"_index":1060,"title":{},"body":{"license.html":{}}}],["array",{"_index":317,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["array.isarray(exceptionresponse?.message",{"_index":649,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["assigment.schema",{"_index":428,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{}}}],["assigment.schema.ts",{"_index":485,"title":{},"body":{"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["assigment.schema.ts:23",{"_index":487,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:26",{"_index":490,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:29",{"_index":488,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:32",{"_index":486,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assignment.dto",{"_index":424,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["assignment.dto.ts",{"_index":360,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"coverage.html":{}}}],["assignment.dto.ts:11",{"_index":374,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:15",{"_index":372,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:18",{"_index":373,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:21",{"_index":368,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:7",{"_index":370,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assistant",{"_index":839,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["assistantid",{"_index":840,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["associated",{"_index":1009,"title":{},"body":{"license.html":{}}}],["async",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["auth",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["auth(authtype.none)@post('auth",{"_index":749,"title":{},"body":{"controllers/StudentController.html":{}}}],["auth/auth.controller",{"_index":158,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/config/jwt.config",{"_index":166,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/guards/access",{"_index":168,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/guards/authentication.guard",{"_index":173,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/providers/auth.service",{"_index":159,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/providers/generate",{"_index":163,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth_type_key",{"_index":306,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":156,"title":{"controllers/AuthController.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["authenticationguard",{"_index":172,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":315,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["author",{"_index":988,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":1049,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":151,"title":{"injectables/AuthService.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":307,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":310,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguidemap",{"_index":296,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":311,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":318,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["await",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["b",{"_index":658,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":982,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":418,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["badrequestexception('error",{"_index":465,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["badrequestexception('exam",{"_index":795,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["badrequestexception('no",{"_index":440,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["badrequestexception('only",{"_index":580,"title":{},"body":{"injectables/ExamService.html":{}}}],["badrequestexception('question",{"_index":830,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["badrequestexception('questions",{"_index":798,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["bcrypt",{"_index":102,"title":{},"body":{"classes/Admin.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt(10",{"_index":123,"title":{},"body":{"classes/Admin.html":{}}}],["bcrypt.hash(this.password",{"_index":125,"title":{},"body":{"classes/Admin.html":{}}}],["bearer",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["board",{"_index":974,"title":{},"body":{"index.html":{}}}],["body",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1064,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1062,"title":{},"body":{"modules.html":{}}}],["building",{"_index":905,"title":{},"body":{"index.html":{}}}],["c",{"_index":659,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/CreateExamProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["catch((err",{"_index":327,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["catch(exception",{"_index":629,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["channel",{"_index":945,"title":{},"body":{"index.html":{}}}],["character",{"_index":346,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["characters",{"_index":341,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["charge",{"_index":1004,"title":{},"body":{"license.html":{}}}],["check",{"_index":933,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1052,"title":{},"body":{"license.html":{}}}],["class",{"_index":50,"title":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_adminmodule",{"_index":149,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":150,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_exammodule",{"_index":544,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_exammodule_imports",{"_index":545,"title":{},"body":{"modules/ExamModule.html":{}}}],["cluster_exammodule_providers",{"_index":546,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_studentmodule",{"_index":757,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_exports",{"_index":758,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_providers",{"_index":759,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["collapsemcqlist",{"_index":809,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["collapsemcqlist.map((item",{"_index":817,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["come",{"_index":936,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1030,"title":{},"body":{"license.html":{}}}],["config/app.config",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["config/environment.validation",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["configmodule",{"_index":167,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":177,"title":{},"body":{"modules/AdminModule.html":{}}}],["configmodule.forroot",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.uri",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["connection",{"_index":409,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"license.html":{}}}],["console.error(error",{"_index":463,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["console.log(env",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(insertedquestionids",{"_index":837,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["const",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/variables.html":{}}}],["constants/auth.constants",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["constructor(@injectmodel(student.name",{"_index":689,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["constructor(adminmodel",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(connection",{"_index":408,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["constructor(createexamprovider",{"_index":566,"title":{},"body":{"injectables/ExamService.html":{}}}],["constructor(jwtservice",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["constructor(mcqquestionmodel",{"_index":786,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["constructor(oequestionmodel",{"_index":820,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["constructor(reflector",{"_index":299,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(studentmodel",{"_index":678,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["context",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":314,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":313,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["contract",{"_index":1057,"title":{},"body":{"license.html":{}}}],["controller",{"_index":128,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('exam",{"_index":529,"title":{},"body":{"controllers/ExamController.html":{}}}],["controller('student",{"_index":754,"title":{},"body":{"controllers/StudentController.html":{}}}],["controllers",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["copies",{"_index":1024,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1007,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":996,"title":{},"body":{"license.html":{}}}],["correct",{"_index":660,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["coursecode",{"_index":380,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["coursename",{"_index":381,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["courses",{"_index":952,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":841,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":316,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["createadmin",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(createadmindto",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmindto",{"_index":191,"title":{"classes/CreateAdminDto.html":{}},"body":{"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["created",{"_index":461,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["createexam",{"_index":407,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["createexam(createexamdto",{"_index":414,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["createexamassignmentdto",{"_index":357,"title":{"classes/CreateExamAssignmentDto.html":{}},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"coverage.html":{}}}],["createexamdto",{"_index":377,"title":{"classes/CreateExamDto.html":{}},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"coverage.html":{}}}],["createexamdto.examtype",{"_index":454,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["createexamprovider",{"_index":404,"title":{"injectables/CreateExamProvider.html":{}},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"coverage.html":{},"overview.html":{}}}],["createparamdecorator",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":466,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["credentials",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":636,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":638,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":662,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1053,"title":{},"body":{"license.html":{}}}],["data",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{}}}],["data.interface.ts",{"_index":81,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{}}}],["database",{"_index":436,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["databaseconfig",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":366,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["deal",{"_index":1010,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1061,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["decorators",{"_index":88,"title":{},"body":{"classes/Admin.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["decorators/auth.decorator",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":947,"title":{},"body":{"index.html":{}}}],["default",{"_index":320,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":298,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["delete",{"_index":115,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["delete('mcq/:examid",{"_index":537,"title":{},"body":{"controllers/ExamController.html":{}}}],["deleted",{"_index":595,"title":{},"body":{"injectables/ExamService.html":{}}}],["deletemcqexam",{"_index":498,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["deletemcqexam(@param('examid",{"_index":538,"title":{},"body":{"controllers/ExamController.html":{}}}],["deletemcqexam(examid",{"_index":503,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["dependencies",{"_index":143,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":910,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":921,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":960,"title":{},"body":{"index.html":{}}}],["discord",{"_index":944,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1020,"title":{},"body":{"license.html":{}}}],["dive",{"_index":946,"title":{},"body":{"index.html":{}}}],["doc",{"_index":111,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["document",{"_index":833,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["documentation",{"_index":842,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["docx",{"_index":606,"title":{},"body":{"injectables/ExamService.html":{}}}],["dtos/create",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["dtos/login",{"_index":751,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["dtos/login.dto",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/update",{"_index":520,"title":{},"body":{"controllers/ExamController.html":{}}}],["duration",{"_index":382,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["e2e",{"_index":930,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":906,"title":{},"body":{"index.html":{}}}],["eight",{"_index":340,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["email",{"_index":83,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["empty",{"_index":799,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["endtime",{"_index":361,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["enterprise",{"_index":964,"title":{},"body":{"index.html":{}}}],["enum",{"_index":480,"title":{},"body":{"classes/Exam.html":{}}}],["enumerations",{"_index":883,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/auth",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["enums/exam",{"_index":375,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["env",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["environmentvalidation",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":328,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["error",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["error.message",{"_index":711,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["event",{"_index":1048,"title":{},"body":{"license.html":{}}}],["exam",{"_index":359,"title":{"classes/Exam.html":{}},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["exam._id",{"_index":449,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam._id.tostring",{"_index":453,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.controller",{"_index":550,"title":{},"body":{"modules/ExamModule.html":{}}}],["exam.dto",{"_index":419,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["exam.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateExamDto.html":{},"coverage.html":{}}}],["exam.dto.ts:14",{"_index":387,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:19",{"_index":386,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:24",{"_index":389,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:29",{"_index":395,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:35",{"_index":393,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.examtype",{"_index":794,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exam.name",{"_index":561,"title":{},"body":{"modules/ExamModule.html":{}}}],["exam.provider",{"_index":553,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{}}}],["exam.provider.ts",{"_index":406,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["exam.provider.ts:17",{"_index":413,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.provider.ts:22",{"_index":821,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["exam.provider.ts:23",{"_index":787,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.provider.ts:32",{"_index":417,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.provider.ts:34",{"_index":824,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["exam.provider.ts:35",{"_index":791,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.provider.ts:84",{"_index":789,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.questions",{"_index":592,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.questions.push(...insertedquestionids",{"_index":805,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exam.questions?.length",{"_index":589,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.save",{"_index":444,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exam.save({session",{"_index":806,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.schema",{"_index":492,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["exam/exam.module",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["examassignment",{"_index":425,"title":{"classes/ExamAssignment.html":{}},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examassignment.name",{"_index":562,"title":{},"body":{"modules/ExamModule.html":{}}}],["examassignmentdocument",{"_index":426,"title":{},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["examassignmentmodel",{"_index":412,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examassignmentschema",{"_index":494,"title":{},"body":{"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examcontroller",{"_index":496,"title":{"controllers/ExamController.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examdocument",{"_index":420,"title":{},"body":{"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["examid",{"_index":362,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exammodel",{"_index":567,"title":{},"body":{"injectables/ExamService.html":{}}}],["exammodule",{"_index":216,"title":{"modules/ExamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules.html":{},"overview.html":{}}}],["example",{"_index":917,"title":{},"body":{"index.html":{}}}],["examschema",{"_index":363,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"modules/ExamModule.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examschemaenum",{"_index":371,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"miscellaneous/enumerations.html":{}}}],["examschemaenum.mcqexam",{"_index":456,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examschemaenum.theoryexam",{"_index":457,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examservice",{"_index":522,"title":{"injectables/ExamService.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"coverage.html":{},"overview.html":{}}}],["examtype",{"_index":383,"title":{},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/enumerations.html":{}}}],["examtype.mcq",{"_index":455,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["examtype.oe",{"_index":826,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["exception",{"_index":633,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":627,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":632,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":644,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":641,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.message",{"_index":645,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":628,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse",{"_index":643,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse.message[0",{"_index":650,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse?.message",{"_index":651,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exclude",{"_index":104,"title":{},"body":{"classes/Admin.html":{}}}],["executioncontext",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":775,"title":{},"body":{"injectables/StudentService.html":{}}}],["expectedkeys",{"_index":898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["experience",{"_index":949,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":622,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["export",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["express",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ExamController.html":{},"classes/GlobalHttpExceptionFilter.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":416,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["extract",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/InsertStudentProvider.html":{}}}],["extractrequestfromheader",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":712,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["false",{"_index":493,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["fetch",{"_index":699,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["few",{"_index":934,"title":{},"body":{"index.html":{}}}],["field",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":524,"title":{},"body":{"controllers/ExamController.html":{}}}],["files",{"_index":582,"title":{},"body":{"injectables/ExamService.html":{},"license.html":{}}}],["filesinterceptor",{"_index":525,"title":{},"body":{"controllers/ExamController.html":{}}}],["filter",{"_index":448,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["filter((student",{"_index":691,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["finally",{"_index":467,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["find",{"_index":707,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["finduserbyemail",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["finduserbyemail(email",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{}}}],["fire",{"_index":323,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["fitness",{"_index":1044,"title":{},"body":{"license.html":{}}}],["follow",{"_index":967,"title":{},"body":{"index.html":{}}}],["following",{"_index":1029,"title":{},"body":{"license.html":{}}}],["format",{"_index":608,"title":{},"body":{"injectables/ExamService.html":{}}}],["found",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["framework",{"_index":904,"title":{},"body":{"index.html":{}}}],["free",{"_index":1003,"title":{},"body":{"license.html":{}}}],["full",{"_index":963,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":671,"title":{},"body":{"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":120,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{}}}],["functions",{"_index":893,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1027,"title":{},"body":{"license.html":{}}}],["generate",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokenprovider",{"_index":162,"title":{"classes/GenerateTokenProvider.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["gethello",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":900,"title":{"index.html":{},"license.html":{}},"body":{}}],["globalhttpexceptionfilter",{"_index":624,"title":{"classes/GlobalHttpExceptionFilter.html":{}},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["granted",{"_index":1002,"title":{},"body":{"license.html":{}}}],["graph",{"_index":955,"title":{},"body":{"index.html":{}}}],["grow",{"_index":978,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["guide",{"_index":605,"title":{},"body":{"injectables/ExamService.html":{}}}],["hands",{"_index":948,"title":{},"body":{"index.html":{}}}],["handy",{"_index":937,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":127,"title":{},"body":{"classes/Admin.html":{}}}],["header",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["hello",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":961,"title":{},"body":{"index.html":{}}}],["here",{"_index":986,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1001,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1050,"title":{},"body":{"license.html":{}}}],["host",{"_index":630,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":637,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["http",{"_index":626,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["httpcode",{"_index":519,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.created",{"_index":530,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.created)@auth(authtype.none)@post()@useinterceptors(undefined",{"_index":501,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok",{"_index":533,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@delete('mcq/:examid",{"_index":504,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@patch('mcq/:examid')@useinterceptors(undefined",{"_index":509,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@patch('oe/:examid')@useinterceptors(undefined",{"_index":514,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpexception",{"_index":634,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":992,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":518,"title":{},"body":{"controllers/ExamController.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":642,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["hydrateddocument",{"_index":99,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":701,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["imcqquestion",{"_index":655,"title":{"interfaces/IMcqQuestion.html":{}},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["imcqquestionexpectedkeys",{"_index":664,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["implied",{"_index":1040,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["imports",{"_index":174,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["included",{"_index":1034,"title":{},"body":{"license.html":{}}}],["including",{"_index":1013,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["inject",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateExamProvider.html":{},"classes/GenerateTokenProvider.html":{}}}],["inject(jwtconfig.key",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"overview.html":{}}}],["injectconnection",{"_index":423,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel(admin.name",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel(exam.name",{"_index":429,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel(examassignment.name",{"_index":430,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["injectmodel(mcqquestion.name",{"_index":576,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["injectmodel(oequestion.name",{"_index":825,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel(student.name",{"_index":771,"title":{},"body":{"injectables/StudentService.html":{}}}],["insert",{"_index":434,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["insertedquestionids",{"_index":803,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["insertedstudentids",{"_index":690,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["insertone",{"_index":832,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["insertstudentprovider",{"_index":674,"title":{"injectables/InsertStudentProvider.html":{}},"body":{"injectables/InsertStudentProvider.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["insertstudents",{"_index":677,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["insertstudents(tutoriallist",{"_index":681,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["installcompile",{"_index":919,"title":{},"body":{"index.html":{}}}],["instance",{"_index":324,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instance.canactivate(context",{"_index":326,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instanceof",{"_index":640,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["interact",{"_index":956,"title":{},"body":{"index.html":{}}}],["interface",{"_index":76,"title":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"coverage.html":{}}}],["interfaces",{"_index":78,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"overview.html":{}}}],["internal",{"_index":646,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["internalservererrorexception",{"_index":103,"title":{},"body":{"classes/Admin.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["internalservererrorexception('error",{"_index":126,"title":{},"body":{"classes/Admin.html":{}}}],["ioeexpectedkeys",{"_index":668,"title":{},"body":{"interfaces/IOeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ioequestion",{"_index":666,"title":{"interfaces/IOeQuestion.html":{}},"body":{"interfaces/IOeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["isdate",{"_index":367,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["isemail",{"_index":348,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isnotempty()@isstring",{"_index":331,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isenum",{"_index":396,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isenum(examtype",{"_index":390,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isglobal",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":397,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":394,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isint()@isnotempty()@min(10",{"_index":388,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isnotempty",{"_index":349,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["ispasswordvalid",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":350,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["isstring()@isnotempty",{"_index":369,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginStudentDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["isstring()@isnotempty()@minlength(3",{"_index":333,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["isstring()@isnotempty()@minlength(6",{"_index":385,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":335,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@transform",{"_index":721,"title":{},"body":{"classes/LoginStudentDto.html":{}}}],["istudent",{"_index":669,"title":{"interfaces/IStudent.html":{}},"body":{"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"coverage.html":{}}}],["istudentexpectedkeys",{"_index":673,"title":{},"body":{"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":819,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["item.question",{"_index":818,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["job",{"_index":971,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":973,"title":{},"body":{"index.html":{}}}],["joi",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":984,"title":{},"body":{"index.html":{}}}],["jwtconfig",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"classes/GenerateTokenProvider.html":{}}}],["jwtconfiguration",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["jwtmodule",{"_index":165,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":178,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtservice",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["kamil",{"_index":989,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":665,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1039,"title":{},"body":{"license.html":{}}}],["learn",{"_index":941,"title":{},"body":{"index.html":{}}}],["legend",{"_index":144,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["letter",{"_index":343,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["liability",{"_index":1054,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1051,"title":{},"body":{"license.html":{}}}],["license",{"_index":995,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":976,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1014,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1041,"title":{},"body":{"license.html":{}}}],["linkedin",{"_index":969,"title":{},"body":{"index.html":{}}}],["list",{"_index":442,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{}}}],["load",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["login(@body",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"controllers/StudentController.html":{}}}],["login(logindto",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(loginstudentdto",{"_index":748,"title":{},"body":{"controllers/StudentController.html":{}}}],["logindto",{"_index":251,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginstudent",{"_index":766,"title":{},"body":{"injectables/StudentService.html":{}}}],["loginstudent(loginstudentdto",{"_index":769,"title":{},"body":{"injectables/StudentService.html":{}}}],["loginstudentdto",{"_index":718,"title":{"classes/LoginStudentDto.html":{}},"body":{"classes/LoginStudentDto.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["loginstudentdto.matricno",{"_index":773,"title":{},"body":{"injectables/StudentService.html":{}}}],["loginstudentdto.password.tolowercase",{"_index":778,"title":{},"body":{"injectables/StudentService.html":{}}}],["looking",{"_index":970,"title":{},"body":{"index.html":{}}}],["loop",{"_index":321,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["map((student",{"_index":693,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["mappedstudent",{"_index":694,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["mappedstudent.matricno",{"_index":697,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["marking",{"_index":604,"title":{},"body":{"injectables/ExamService.html":{}}}],["markingguide",{"_index":823,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["matches",{"_index":351,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["matches(/^(?=.*[a",{"_index":356,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["matching",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matric",{"_index":672,"title":{},"body":{"interfaces/IStudent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{}}}],["matricno",{"_index":695,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"classes/LoginStudentDto.html":{},"classes/Student.html":{},"injectables/StudentService.html":{}}}],["mcq",{"_index":378,"title":{"classes/Mcq.html":{}},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/Mcq.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mcq.a",{"_index":812,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.b",{"_index":813,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.c",{"_index":814,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.d",{"_index":815,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.question",{"_index":811,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq['correct",{"_index":816,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqexam",{"_index":891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mcqexammodel",{"_index":411,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["mcqlist",{"_index":790,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqlist.length",{"_index":797,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqlist.map((mcq",{"_index":810,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqquestion",{"_index":391,"title":{"classes/McqQuestion.html":{}},"body":{"classes/CreateExamDto.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mcqquestion.name",{"_index":563,"title":{},"body":{"modules/ExamModule.html":{}}}],["mcqquestiondocument",{"_index":736,"title":{},"body":{"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mcqquestionmodel",{"_index":568,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["mcqquestionschema",{"_index":555,"title":{},"body":{"modules/ExamModule.html":{},"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mcqtemplate",{"_index":508,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["mcqtemplate.mimetype",{"_index":585,"title":{},"body":{"injectables/ExamService.html":{}}}],["merchantability",{"_index":1043,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1018,"title":{},"body":{"license.html":{}}}],["message",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["mguide",{"_index":596,"title":{},"body":{"injectables/ExamService.html":{}}}],["min",{"_index":398,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["min(1",{"_index":402,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["min(10",{"_index":400,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["minimum",{"_index":339,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["minlength",{"_index":352,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{}}}],["minlength(3",{"_index":354,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["minlength(6",{"_index":399,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["minlength(8",{"_index":355,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["minutes",{"_index":401,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["miscellaneous",{"_index":882,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":975,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":796,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"index.html":{}}}],["model",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["modify",{"_index":1017,"title":{},"body":{"license.html":{}}}],["module",{"_index":140,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["modules",{"_index":142,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":101,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":481,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAssignment.html":{}}}],["mongoose.types.objectid",{"_index":477,"title":{},"body":{"classes/Exam.html":{}}}],["mongoosemodule",{"_index":160,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["mongoosemodule.forfeature",{"_index":175,"title":{},"body":{"modules/AdminModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":942,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":990,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":598,"title":{},"body":{"injectables/ExamService.html":{},"index.html":{}}}],["nest",{"_index":911,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":994,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":939,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/GenerateTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":171,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"classes/GenerateTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":98,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":526,"title":{},"body":{"controllers/ExamController.html":{},"dependencies.html":{}}}],["new",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["newadmin",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{}}}],["newadmin.save",{"_index":204,"title":{},"body":{"injectables/AdminService.html":{}}}],["node.js",{"_index":903,"title":{},"body":{"index.html":{}}}],["none",{"_index":889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":1047,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["notfoundexception('exam",{"_index":588,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["notfoundexception('student",{"_index":774,"title":{},"body":{"injectables/StudentService.html":{}}}],["notfoundexception('user",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["notice",{"_index":1032,"title":{},"body":{"license.html":{}}}],["npm",{"_index":918,"title":{},"body":{"index.html":{}}}],["null",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":344,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/LoginDto.html":{},"injectables/StudentService.html":{}}}],["object.values(result.insertedids",{"_index":836,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["object.values(result.upsertedids",{"_index":804,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["observable",{"_index":303,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["obtaining",{"_index":1006,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":652,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["oe",{"_index":558,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["oeq.question",{"_index":834,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oeqlist",{"_index":827,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oeqlist.length",{"_index":829,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oeqlist.map((oeq",{"_index":831,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oequestion",{"_index":403,"title":{"classes/OeQuestion.html":{}},"body":{"classes/CreateExamDto.html":{},"modules/ExamModule.html":{},"classes/OeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["oequestion'})@isnotempty",{"_index":392,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["oequestion.name",{"_index":564,"title":{},"body":{"modules/ExamModule.html":{}}}],["oequestiondocument",{"_index":739,"title":{},"body":{"classes/OeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["oequestionmodel",{"_index":822,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oequestionschema",{"_index":559,"title":{},"body":{"modules/ExamModule.html":{},"classes/OeQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oetemplate",{"_index":597,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["offer",{"_index":972,"title":{},"body":{"index.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":579,"title":{},"body":{"injectables/ExamService.html":{}}}],["officedocument.wordprocessingml.document",{"_index":601,"title":{},"body":{"injectables/ExamService.html":{}}}],["official",{"_index":950,"title":{},"body":{"index.html":{}}}],["ojuri",{"_index":999,"title":{},"body":{"license.html":{}}}],["oluwafemi",{"_index":998,"title":{},"body":{"license.html":{}}}],["one",{"_index":342,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["open",{"_index":977,"title":{},"body":{"index.html":{}}}],["operations",{"_index":445,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["optional",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":727,"title":{},"body":{"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["otherwise",{"_index":1059,"title":{},"body":{"license.html":{}}}],["out",{"_index":154,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1065,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":864,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ExamController.html":{}}}],["param.dto",{"_index":521,"title":{},"body":{"controllers/ExamController.html":{}}}],["param.dto.ts",{"_index":782,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:6",{"_index":783,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":687,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["parser.ts",{"_index":861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsetemplate",{"_index":685,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsetemplate(oetemplate",{"_index":828,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["parsetemplate(template",{"_index":897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["part",{"_index":962,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1045,"title":{},"body":{"license.html":{}}}],["password",{"_index":87,"title":{},"body":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"injectables/StudentService.html":{}}}],["patch",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ExamController.html":{}}}],["patch('mcq/:examid",{"_index":534,"title":{},"body":{"controllers/ExamController.html":{}}}],["patch('oe/:examid",{"_index":540,"title":{},"body":{"controllers/ExamController.html":{}}}],["payload",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["pdf",{"_index":607,"title":{},"body":{"injectables/ExamService.html":{}}}],["permission",{"_index":1000,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1025,"title":{},"body":{"license.html":{}}}],["person",{"_index":1005,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1026,"title":{},"body":{"license.html":{}}}],["please",{"_index":603,"title":{},"body":{"injectables/ExamService.html":{},"index.html":{}}}],["portions",{"_index":1036,"title":{},"body":{"license.html":{}}}],["post",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["post('auth",{"_index":755,"title":{},"body":{"controllers/StudentController.html":{}}}],["post()@auth(authtype.none)@useinterceptors(classserializerinterceptor",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["preparelistforbulkwrite",{"_index":785,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["preparelistforbulkwrite(mcqlist",{"_index":788,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["private",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["process.env.node_env",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":925,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":902,"title":{},"body":{"index.html":{}}}],["project",{"_index":915,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["promise.resolve",{"_index":325,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["prop",{"_index":95,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["prop({enum",{"_index":474,"title":{},"body":{"classes/Exam.html":{}}}],["prop({required",{"_index":89,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["prop({type",{"_index":478,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{}}}],["properties",{"_index":82,"title":{"properties.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"properties.html":{}}}],["provide",{"_index":179,"title":{},"body":{"modules/AdminModule.html":{},"injectables/ExamService.html":{}}}],["provided",{"_index":1037,"title":{},"body":{"license.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["providers/admin.service",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["providers/auth.service",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["providers/create",{"_index":552,"title":{},"body":{"modules/ExamModule.html":{}}}],["providers/exam.service",{"_index":523,"title":{},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{}}}],["providers/insert",{"_index":762,"title":{},"body":{"modules/StudentModule.html":{}}}],["providers/student.service",{"_index":753,"title":{},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{}}}],["providers/update",{"_index":554,"title":{},"body":{"modules/ExamModule.html":{}}}],["public",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["publish",{"_index":1019,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1046,"title":{},"body":{"license.html":{}}}],["question",{"_index":663,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/variables.html":{}}}],["question.interface",{"_index":792,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["question.interface.ts",{"_index":657,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["question.schema",{"_index":557,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["question.schema.ts",{"_index":732,"title":{},"body":{"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.schema.ts:19",{"_index":735,"title":{},"body":{"classes/McqQuestion.html":{},"classes/OeQuestion.html":{}}}],["question.schema.ts:22",{"_index":734,"title":{},"body":{"classes/McqQuestion.html":{}}}],["question.schema.ts:25",{"_index":733,"title":{},"body":{"classes/McqQuestion.html":{}}}],["questioncount",{"_index":384,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["questions",{"_index":470,"title":{},"body":{"classes/Exam.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"index.html":{}}}],["read",{"_index":985,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["real",{"_index":957,"title":{},"body":{"index.html":{}}}],["record",{"_index":308,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["ref",{"_index":489,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["reflect",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":300,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["refpath",{"_index":482,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAssignment.html":{}}}],["related",{"_index":594,"title":{},"body":{"injectables/ExamService.html":{}}}],["repository",{"_index":914,"title":{},"body":{"index.html":{}}}],["request",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":116,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["reset",{"_index":153,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["resources",{"_index":935,"title":{},"body":{"index.html":{}}}],["response",{"_index":635,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":653,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["restriction",{"_index":1012,"title":{},"body":{"license.html":{}}}],["result",{"_index":801,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["results",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":112,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["ret._id",{"_index":114,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["ret.id",{"_index":113,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["return",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/InsertStudentProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1015,"title":{},"body":{"license.html":{}}}],["run",{"_index":920,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":304,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["s._id.tostring",{"_index":710,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["s['matric",{"_index":704,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["salt",{"_index":122,"title":{},"body":{"classes/Admin.html":{}}}],["save",{"_index":808,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["scalable",{"_index":907,"title":{},"body":{"index.html":{}}}],["schema",{"_index":96,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"modules/StudentModule.html":{}}}],["schema.enum",{"_index":376,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["schema.enum.ts",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schemafactory",{"_index":97,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["schemafactory.createforclass(admin",{"_index":118,"title":{},"body":{"classes/Admin.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(exam",{"_index":483,"title":{},"body":{"classes/Exam.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(examassignment",{"_index":495,"title":{},"body":{"classes/ExamAssignment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mcqquestion",{"_index":737,"title":{},"body":{"classes/McqQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(oequestion",{"_index":740,"title":{},"body":{"classes/OeQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":745,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemas/admin.schema",{"_index":161,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["schemas/exam",{"_index":427,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{}}}],["schemas/exam.schema",{"_index":421,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["schemas/mcq/mcq",{"_index":556,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["schemas/oe/oe",{"_index":560,"title":{},"body":{"modules/ExamModule.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["schemas/student.schema",{"_index":684,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["secret",{"_index":620,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["sell",{"_index":1023,"title":{},"body":{"license.html":{}}}],["server",{"_index":647,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"index.html":{}}}],["session",{"_index":431,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session(session",{"_index":708,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["session.aborttransaction",{"_index":464,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session.committransaction",{"_index":460,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session.endsession",{"_index":468,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session.starttransaction",{"_index":433,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["set",{"_index":452,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["setmetadata(auth_type_key",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":916,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1033,"title":{},"body":{"license.html":{}}}],["side",{"_index":908,"title":{},"body":{"index.html":{}}}],["signtoken",{"_index":612,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["signtoken(adminid",{"_index":614,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["software",{"_index":1008,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"index.html":{}}}],["special",{"_index":345,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["sponsors",{"_index":980,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../admin.schema.ts",{"_index":1075,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constants.ts",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exam",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../exam.schema.ts",{"_index":1076,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":894,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mcq",{"_index":1077,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../oe",{"_index":1078,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../response",{"_index":896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../student.interface.ts",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":1079,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../template",{"_index":895,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/admin/admin.controller.ts",{"_index":131,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.module.ts",{"_index":155,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/auth/auth.controller.ts",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/admin/auth/auth.controller.ts:14",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/admin/auth/constants/auth.constants.ts",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/decorators/active",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/decorators/auth.decorator",{"_index":527,"title":{},"body":{"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["src/admin/auth/decorators/auth.decorator.ts",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/dtos/login.dto.ts",{"_index":713,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/admin/auth/dtos/login.dto.ts:13",{"_index":714,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/admin/auth/dtos/login.dto.ts:22",{"_index":717,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/admin/auth/enums/auth",{"_index":528,"title":{},"body":{"controllers/ExamController.html":{},"controllers/StudentController.html":{},"miscellaneous/enumerations.html":{}}}],["src/admin/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/admin/auth/guards/authentication.guard.ts",{"_index":295,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/admin/auth/guards/authentication.guard.ts:23",{"_index":301,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/admin/auth/guards/authentication.guard.ts:30",{"_index":302,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/admin/auth/interfaces/active",{"_index":79,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{}}}],["src/admin/auth/providers/auth.service.ts",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/admin/auth/providers/auth.service.ts:13",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/auth/providers/auth.service.ts:20",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/auth/providers/generate",{"_index":610,"title":{},"body":{"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["src/admin/dtos/create",{"_index":329,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["src/admin/providers/admin.service",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/providers/admin.service.ts",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/providers/admin.service.ts:14",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/providers/admin.service.ts:23",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/providers/admin.service.ts:8",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/schemas/admin.schema.ts",{"_index":86,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/admin/schemas/admin.schema.ts:22",{"_index":92,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/schemas/admin.schema.ts:25",{"_index":91,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/schemas/admin.schema.ts:29",{"_index":94,"title":{},"body":{"classes/Admin.html":{}}}],["src/app.controller.ts",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["src/exam/dtos/create",{"_index":358,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"coverage.html":{}}}],["src/exam/dtos/mcq.dto.ts",{"_index":726,"title":{},"body":{"classes/Mcq.html":{},"coverage.html":{}}}],["src/exam/dtos/mcq.dto.ts:2",{"_index":730,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/mcq.dto.ts:3",{"_index":729,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/mcq.dto.ts:4",{"_index":728,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/update",{"_index":781,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["src/exam/enums/exam",{"_index":890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/exam/exam.controller.ts",{"_index":497,"title":{},"body":{"controllers/ExamController.html":{},"coverage.html":{}}}],["src/exam/exam.controller.ts:29",{"_index":502,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:39",{"_index":510,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:48",{"_index":505,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:55",{"_index":515,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.module.ts",{"_index":549,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/exam/providers/create",{"_index":405,"title":{},"body":{"injectables/CreateExamProvider.html":{},"coverage.html":{}}}],["src/exam/providers/exam.service.ts",{"_index":565,"title":{},"body":{"injectables/ExamService.html":{},"coverage.html":{}}}],["src/exam/providers/exam.service.ts:17",{"_index":569,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:30",{"_index":570,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:45",{"_index":573,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:57",{"_index":571,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:73",{"_index":575,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/update",{"_index":784,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["src/exam/schemas/exam",{"_index":484,"title":{},"body":{"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/exam.schema.ts",{"_index":469,"title":{},"body":{"classes/Exam.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/exam.schema.ts:20",{"_index":472,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:23",{"_index":471,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:26",{"_index":473,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:29",{"_index":475,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:32",{"_index":476,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:37",{"_index":479,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/mcq/mcq",{"_index":731,"title":{},"body":{"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/oe/oe",{"_index":738,"title":{},"body":{"classes/OeQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/filters/global",{"_index":625,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/student/dtos/login",{"_index":719,"title":{},"body":{"classes/LoginStudentDto.html":{},"coverage.html":{}}}],["src/student/providers/insert",{"_index":675,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"coverage.html":{}}}],["src/student/providers/student.service",{"_index":422,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["src/student/providers/student.service.ts",{"_index":765,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/student/providers/student.service.ts:10",{"_index":767,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/providers/student.service.ts:18",{"_index":770,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/providers/student.service.ts:32",{"_index":768,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/schemas/student.schema",{"_index":491,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["src/student/schemas/student.schema.ts",{"_index":741,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/student/schemas/student.schema.ts:20",{"_index":742,"title":{},"body":{"classes/Student.html":{}}}],["src/student/schemas/student.schema.ts:23",{"_index":743,"title":{},"body":{"classes/Student.html":{}}}],["src/student/student.controller.ts",{"_index":747,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student.controller.ts:15",{"_index":750,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.module",{"_index":551,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/student/student.module.ts",{"_index":760,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/utils/interfaces/mcq",{"_index":656,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/interfaces/oe",{"_index":667,"title":{},"body":{"interfaces/IOeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/interfaces/student.interface",{"_index":688,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["src/utils/interfaces/student.interface.ts",{"_index":670,"title":{},"body":{"interfaces/IStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/response",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/template",{"_index":686,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":922,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":924,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":926,"title":{},"body":{"index.html":{}}}],["started",{"_index":901,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":913,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":364,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["statements",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":297,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["status",{"_index":639,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["stay",{"_index":965,"title":{},"body":{"index.html":{}}}],["string",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":450,"title":{"classes/Student.html":{}},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"injectables/InsertStudentProvider.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["student.controller",{"_index":761,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.dto",{"_index":752,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["student.dto.ts",{"_index":720,"title":{},"body":{"classes/LoginStudentDto.html":{},"coverage.html":{}}}],["student.dto.ts:12",{"_index":723,"title":{},"body":{"classes/LoginStudentDto.html":{}}}],["student.dto.ts:8",{"_index":722,"title":{},"body":{"classes/LoginStudentDto.html":{}}}],["student.fullname.split",{"_index":776,"title":{},"body":{"injectables/StudentService.html":{}}}],["student.name",{"_index":764,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.provider",{"_index":763,"title":{},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["student.provider.ts",{"_index":676,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"coverage.html":{}}}],["student.provider.ts:15",{"_index":682,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["student.provider.ts:9",{"_index":679,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["student/student.module",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["student['fullname",{"_index":696,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["student['matric",{"_index":692,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["studentcontroller",{"_index":746,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentdocument",{"_index":683,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["studentid",{"_index":365,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["studentmodel",{"_index":680,"title":{},"body":{"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["studentmodule",{"_index":217,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["students",{"_index":435,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{}}}],["students.length",{"_index":438,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["students.map((s",{"_index":703,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["students.map((student",{"_index":446,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["studentschema",{"_index":744,"title":{},"body":{"classes/Student.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentservice",{"_index":410,"title":{"injectables/StudentService.html":{}},"body":{"injectables/CreateExamProvider.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["sub",{"_index":84,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"classes/GenerateTokenProvider.html":{}}}],["subject",{"_index":1028,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1021,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1035,"title":{},"body":{"license.html":{}}}],["success",{"_index":654,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["successful",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StudentService.html":{}}}],["successfully",{"_index":462,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["successresponse",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["successresponse(__namedparameters",{"_index":899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["support",{"_index":943,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1063,"title":{},"body":{"modules.html":{}}}],["t",{"_index":615,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["table",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":599,"title":{},"body":{"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["template.mimetype",{"_index":600,"title":{},"body":{"injectables/ExamService.html":{}}}],["templates",{"_index":513,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["test",{"_index":929,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":932,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":931,"title":{},"body":{"index.html":{}}}],["tests",{"_index":927,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":979,"title":{},"body":{"index.html":{}}}],["theoryexam",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.accesstokenguard",{"_index":309,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.adminmodel(createadmindto",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findone",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.finduserbyemail(logindto.email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appservice.gethello",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguidemap[type]).flat",{"_index":319,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.connection.startsession",{"_index":432,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["this.createexamprovider.createexam(createexamdto",{"_index":584,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.examassignmentmodel.bulkwrite(operations",{"_index":459,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.exammodel.findbyid(examid",{"_index":587,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.exammodel.findbyidanddelete(examid",{"_index":593,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.examschema.findbyid(examid",{"_index":793,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["this.examservice.createexam(createexamdto",{"_index":532,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.deletemcqexam(examid",{"_index":539,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.updatemcqexam(updateexamparamdto.examid",{"_index":536,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.updateoeexam(updateexamparamdto.examid",{"_index":543,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.extractrequestfromheader(request",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.generatetokenprovider.signtoken(user._id.tohexstring",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.insertstudentprovider.insertstudents(tutoriallist",{"_index":780,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.ismodified('password",{"_index":121,"title":{},"body":{"classes/Admin.html":{}}}],["this.jwtconfiguration",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":623,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":621,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":619,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtservice.verifyasync",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.mcqexammodel.create(createexamdto",{"_index":443,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.mcqquestionmodel.bulkwrite(operations",{"_index":802,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.mcqquestionmodel.deletemany",{"_index":590,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.oequestionmodel.bulkwrite(operations",{"_index":835,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["this.password",{"_index":124,"title":{},"body":{"classes/Admin.html":{}}}],["this.preparelistforbulkwrite(mcqlist",{"_index":800,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":312,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.studentmodel",{"_index":706,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["this.studentmodel.bulkwrite(operations",{"_index":698,"title":{},"body":{"injectables/InsertStudentProvider.html":{}}}],["this.studentmodel.findone",{"_index":772,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentservice.insertstudents(tutoriallist",{"_index":437,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.studentservice.loginstudent(loginstudentdto",{"_index":756,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.updatemcqexamprovider.updatemcqexam(examid",{"_index":586,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.updateoeexamprovider.updateoeexam(examid",{"_index":609,"title":{},"body":{"injectables/ExamService.html":{}}}],["through",{"_index":322,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["throw",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["time",{"_index":958,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":107,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["todo",{"_index":838,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["tojson",{"_index":108,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["token",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard",{"_index":169,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:15",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:29",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:53",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":164,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":611,"title":{},"body":{"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:14",{"_index":616,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["token.provider.ts:6",{"_index":613,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["tort",{"_index":1058,"title":{},"body":{"license.html":{}}}],["touch",{"_index":987,"title":{},"body":{"index.html":{}}}],["transform",{"_index":110,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/LoginStudentDto.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["transformer",{"_index":105,"title":{},"body":{"classes/Admin.html":{},"classes/LoginStudentDto.html":{},"dependencies.html":{}}}],["true",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/InsertStudentProvider.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["true})@exclude",{"_index":93,"title":{},"body":{"classes/Admin.html":{}}}],["try",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["tutorial",{"_index":441,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{}}}],["tutoriallist",{"_index":415,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/StudentService.html":{}}}],["tutoriallist.mimetype",{"_index":577,"title":{},"body":{"injectables/ExamService.html":{}}}],["twitter",{"_index":993,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"injectables/InsertStudentProvider.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["type.enum.ts",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1073,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":648,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["types",{"_index":100,"title":{},"body":{"classes/Admin.html":{}}}],["typescript",{"_index":912,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/StudentService.html":{}}}],["unauthorizedexception('incorrect",{"_index":779,"title":{},"body":{"injectables/StudentService.html":{}}}],["unauthorizedexception('invalid",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{}}}],["unique",{"_index":90,"title":{},"body":{"classes/Admin.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["unit",{"_index":928,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["unlicensed",{"_index":1072,"title":{},"body":{"properties.html":{}}}],["update",{"_index":451,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updated",{"_index":807,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updateexamparamdto",{"_index":511,"title":{},"body":{"controllers/ExamController.html":{}}}],["updatemcqexam",{"_index":499,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updatemcqexam(examid",{"_index":572,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updatemcqexam(updateexamparamdto",{"_index":506,"title":{},"body":{"controllers/ExamController.html":{}}}],["updatemcqexamparamdto",{"_index":507,"title":{"classes/UpdateMcqExamParamDto.html":{}},"body":{"controllers/ExamController.html":{},"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["updatemcqexamprovider",{"_index":547,"title":{"injectables/UpdateMcqExamProvider.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updateoeexam",{"_index":500,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updateoeexam(examid",{"_index":574,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updateoeexam(updateexamparamdto",{"_index":512,"title":{},"body":{"controllers/ExamController.html":{}}}],["updateoeexamprovider",{"_index":548,"title":{"injectables/UpdateOeExamProvider.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updateone",{"_index":447,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updates",{"_index":966,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":516,"title":{},"body":{"controllers/ExamController.html":{}}}],["uploadedfiles",{"_index":517,"title":{},"body":{"controllers/ExamController.html":{}}}],["upsert",{"_index":458,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/InsertStudentProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["uri",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":1016,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":180,"title":{},"body":{"modules/AdminModule.html":{}}}],["usefactory",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('mcqlist",{"_index":535,"title":{},"body":{"controllers/ExamController.html":{}}}],["useinterceptors(fileinterceptor('tutoriallist",{"_index":531,"title":{},"body":{"controllers/ExamController.html":{}}}],["useinterceptors(filesinterceptor('templates",{"_index":541,"title":{},"body":{"controllers/ExamController.html":{}}}],["user",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.[field",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":959,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":353,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/LoginStudentDto.html":{},"classes/UpdateMcqExamParamDto.html":{},"dependencies.html":{}}}],["value",{"_index":724,"title":{},"body":{"classes/LoginStudentDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value?.touppercase",{"_index":725,"title":{},"body":{"classes/LoginStudentDto.html":{}}}],["variable",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1080,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1070,"title":{},"body":{"properties.html":{}}}],["video",{"_index":951,"title":{},"body":{"index.html":{}}}],["virtuals",{"_index":109,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["visit",{"_index":940,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":953,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1042,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1038,"title":{},"body":{"license.html":{}}}],["watch",{"_index":923,"title":{},"body":{"index.html":{}}}],["website",{"_index":991,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1055,"title":{},"body":{"license.html":{}}}],["without",{"_index":1011,"title":{},"body":{"license.html":{}}}],["working",{"_index":938,"title":{},"body":{"index.html":{}}}],["world",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["writer",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["writer.ts",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["x",{"_index":968,"title":{},"body":{"index.html":{}}}],["xlsx",{"_index":581,"title":{},"body":{"injectables/ExamService.html":{},"dependencies.html":{}}}],["yes",{"_index":618,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["you'd",{"_index":983,"title":{},"body":{"index.html":{}}}],["z\\d@$!%*#?&.]{8",{"_index":716,"title":{},"body":{"classes/LoginDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":338,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&.])[a",{"_index":715,"title":{},"body":{"classes/LoginDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":337,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["za",{"_index":336,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["zoom",{"_index":152,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/auth/guards/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/guards/access-token.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/access-token.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/access-token.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from '../constants/auth.constants';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Inject jwtConfig\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n\n    // Extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    \n    try {\n      const payload = await this.jwtService.verifyAsync(\n        token,\n        this.jwtConfiguration,\n      );\n      request[REQUEST_USER_KEY] = payload;\n      \n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n\n    return true;\n  }\n\n  private extractRequestFromHeader(request: Request): string | undefined {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveAdminData.html":{"url":"interfaces/ActiveAdminData.html","title":"interface - ActiveAdminData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveAdminData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/interfaces/active-admin-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveAdminData {\n    sub: string;\n    name: string;\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/schemas/admin.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, Types } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { InternalServerErrorException } from '@nestjs/common';\nimport { Exclude } from 'class-transformer';\n\nexport type AdminDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Admin {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  @Exclude()\n  password: string;\n}\n\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\nAdminSchema.pre('save', async function () {\n  if (!this.isModified('password')) {\n    return;\n  }\n\n  try {\n    const salt = await bcrypt.genSalt(10);\n    this.password = await bcrypt.hash(this.password, salt);\n  } catch (error) {\n    throw new InternalServerErrorException('Error hashing password');\n  }\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Delete, Param, Patch, Post } from '@nestjs/common';\nimport { AdminService } from './providers/admin.service';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AuthController } from './auth/auth.controller';\nimport { AuthService } from './auth/providers/auth.service';\nimport { AdminService } from './providers/admin.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Admin, AdminSchema } from './schemas/admin.schema';\nimport { GenerateTokenProvider } from './auth/providers/generate-token.provider';\nimport { JwtModule } from '@nestjs/jwt';\nimport jwtConfig from './auth/config/jwt.config';\nimport { ConfigModule } from '@nestjs/config';\nimport { AccessTokenGuard } from './auth/guards/access-token.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthenticationGuard } from './auth/guards/authentication.guard';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Admin.name,\n        schema: AdminSchema,\n      },\n    ]),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  controllers: [AdminController, AuthController],\n  providers: [\n    AuthService,\n    AdminService,\n    GenerateTokenProvider,\n    AccessTokenGuard,\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n  ],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/providers/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAdmin\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/admin/providers/admin.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAdmin(createAdminDto: CreateAdminDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/providers/admin.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAdminDto\n                                            \n                                                            CreateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/providers/admin.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Admin, AdminDocument } from '../schemas/admin.schema';\nimport { Model } from 'mongoose';\nimport { CreateAdminDto } from '../dtos/create-admin.dto';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    @InjectModel(Admin.name)\n    private readonly adminModel: Model,\n  ) {}\n\n  public async findUserByEmail(email: string): Promise {\n    let user = await this.adminModel.findOne({ email });\n    if (!user) {\n      return null;\n    }\n\n    return user;\n  }\n\n  public async createAdmin(createAdminDto: CreateAdminDto): Promise {\n    const newAdmin = new this.adminModel(createAdminDto);\n    return await newAdmin.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ExamModule\n                        \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AdminModule } from './admin/admin.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ExamModule } from './exam/exam.module';\nimport { StudentModule } from './student/student.module';\nimport environmentValidation from './config/environment.validation';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\n\nconst ENV = process.env.NODE_ENV;\nconsole.log(ENV);\n\n@Module({\n  imports: [\n    AdminModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      validationSchema: environmentValidation,\n      load: [appConfig, databaseConfig],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('database.uri'),\n      }),\n    }),\n    ExamModule,\n    StudentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.None)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/admin/auth/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { LoginDto } from './dtos/login.dto';\nimport { Auth } from './decorators/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService){}\n\n    @Post()\n    @Auth(AuthType.None)\n    @UseInterceptors(ClassSerializerInterceptor)\n    public async login(@Body() loginDto: LoginDto) {\n        return await this.authService.login(loginDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, generateTokenProvider: GenerateTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/providers/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { successResponse } from 'src/utils/response-writer';\nimport * as bcrypt from 'bcrypt';\nimport { AdminService } from 'src/admin/providers/admin.service';\nimport { GenerateTokenProvider } from './generate-token.provider';\nimport { LoginDto } from '../dtos/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly adminService: AdminService,\n\n    private readonly generateTokenProvider: GenerateTokenProvider,\n  ) {}\n\n  public async login(loginDto: LoginDto): Promise {\n    let user = await this.adminService.findUserByEmail(loginDto.email);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    let isPasswordValid = await bcrypt.compare(\n      loginDto.password,\n      user.password,\n    );\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const accessToken = await this.generateTokenProvider.signToken(user._id.toHexString(), {\n      email: user.email,\n      name: user.name,\n    });\n\n    return successResponse({\n      message: 'Login successful',\n      data: { accessToken },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/auth/guards/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuideMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/guards/authentication.guard.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/authentication.guard.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthType } from '../enums/auth-type.enum';\nimport { AccessTokenGuard } from './access-token.guard';\nimport { Reflector } from '@nestjs/core';\nimport { AUTH_TYPE_KEY } from '../constants/auth.constants';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  private readonly authTypeGuideMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    // get authTypes from reflector\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create array of all the guards\n    const guards = authTypes.map((type) => this.authTypeGuideMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through guards, fire canActivate\n    for (const instance of guards) {\n      const canActivate = await Promise.resolve(\n        instance.canActivate(context),\n      ).catch((err) => {\n        err;\n      });\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminDto.html":{"url":"classes/CreateAdminDto.html","title":"class - CreateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dtos/create-admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateAdminDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamAssignmentDto.html":{"url":"classes/CreateExamAssignmentDto.html","title":"class - CreateExamAssignmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamAssignmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-exam-assignment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                    \n                                examId\n                            \n                            \n                                    \n                                    \n                                examSchema\n                            \n                            \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                    \n                                studentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examSchemaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsNotEmpty, IsString } from \"class-validator\";\nimport { examSchemaEnum } from \"../enums/exam-schema.enum\";\n\nexport class CreateExamAssignmentDto {\n    @IsString()\n    @IsNotEmpty()\n    examId: string;\n\n    @IsString()\n    @IsNotEmpty()\n    studentId: string;\n\n    @IsString()\n    @IsNotEmpty()\n    examSchema: examSchemaEnum;\n\n    @IsDate()\n    startTime?: Date;\n\n    @IsDate()\n    endTime?: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamDto.html":{"url":"classes/CreateExamDto.html","title":"class - CreateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-mcq-exam.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                courseCode\n                            \n                            \n                                    \n                                    \n                                courseName\n                            \n                            \n                                    \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                examType\n                            \n                            \n                                    \n                                    \n                                    \n                                questionCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        courseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(examType, {message: 'examType must be either McqQuestion or OeQuestion'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questionCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { examType } from '../enums/exam-type.enum';\n\nexport class CreateExamDto {\n  @IsString()\n  @IsNotEmpty()\n  courseName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  courseCode: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(10)\n  duration: number; // in minutes\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  questionCount: number;\n\n  @IsEnum(examType, {\n    message: 'examType must be either McqQuestion or OeQuestion',\n  })\n  @IsNotEmpty()\n  examType: examType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateExamProvider.html":{"url":"injectables/CreateExamProvider.html","title":"injectable - CreateExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/create-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, studentService: StudentService, mcqExamModel: Model, examAssignmentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/create-exam.provider.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqExamModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examAssignmentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/create-exam.provider.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { CreateExamDto } from '../dtos/create-mcq-exam.dto';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { StudentService } from 'src/student/providers/student.service';\nimport { Connection, Model } from 'mongoose';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { CreateExamAssignmentDto } from '../dtos/create-exam-assignment.dto';\nimport { examType } from '../enums/exam-type.enum';\nimport { examSchemaEnum } from '../enums/exam-schema.enum';\nimport {\n  ExamAssignment,\n  ExamAssignmentDocument,\n} from '../schemas/exam-assigment.schema';\nimport { successResponse } from 'src/utils/response-writer';\n\n@Injectable()\nexport class CreateExamProvider {\n  constructor(\n    @InjectConnection()\n    private readonly connection: Connection,\n\n    @Inject()\n    private readonly studentService: StudentService,\n\n    @InjectModel(Exam.name)\n    private readonly mcqExamModel: Model,\n\n    @InjectModel(ExamAssignment.name)\n    private readonly examAssignmentModel: Model,\n  ) {}\n\n  public async createExam(\n    createExamDto: CreateExamDto,\n    tutorialList: Express.Multer.File,\n  ) {\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    // Insert the students into the database\n    const students = await this.studentService.insertStudents(tutorialList);\n\n    if (!students || students.length === 0) {\n      throw new BadRequestException('No students found in the tutorial list');\n    }\n\n    try {\n      // Create the exam in the database\n      const exam = await this.mcqExamModel.create(createExamDto);\n      await exam.save({ session });\n\n      const operations = students.map((student) => ({\n        updateOne: {\n          filter: { examId: exam._id, studentId: student },\n          update: {\n            $set: {\n              examId: exam._id.toString(),\n              studentId: student,\n              examSchema:\n                createExamDto.examType == examType.MCQ\n                  ? examSchemaEnum.McqExam\n                  : examSchemaEnum.TheoryExam,\n            } as CreateExamAssignmentDto,\n          },\n          upsert: true,\n        },\n      }));\n\n      await this.examAssignmentModel.bulkWrite(operations, { session });\n      await session.commitTransaction();\n\n      return successResponse({\n        message: 'Exam created successfully',\n        data: { exam },\n      });\n    } catch (error) {\n      console.error(error);\n      session.abortTransaction();\n      throw new BadRequestException('Error creating exam');\n    } finally {\n      session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exam.html":{"url":"classes/Exam.html","title":"class - Exam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/exam.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                courseCode\n                            \n                            \n                                    \n                                courseName\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                examType\n                            \n                            \n                                    \n                                questionCount\n                            \n                            \n                                    \n                                    Optional\n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: examType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questionCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { examType } from '../enums/exam-type.enum';\n\nexport type ExamDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Exam {\n  @Prop({ required: true })\n  courseName: string;\n\n  @Prop({ required: true })\n  courseCode: string;\n\n  @Prop({ required: true })\n  duration: number;\n\n  @Prop({ enum: examType })\n  examType: examType;\n\n  @Prop({ required: true })\n  questionCount: number;\n\n  @Prop({\n    type: [{ type: mongoose.Schema.Types.ObjectId, refPath: 'examType' }],\n  })\n  questions?: mongoose.Types.ObjectId[];\n}\n\nexport const ExamSchema = SchemaFactory.createForClass(Exam);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAssignment.html":{"url":"classes/ExamAssignment.html","title":"class - ExamAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/exam-assigment.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                examId\n                            \n                            \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                studentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exam\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, refPath: 'Exam', index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Student', index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Student } from 'src/student/schemas/student.schema';\nimport { examSchemaEnum } from '../enums/exam-schema.enum';\nimport { Exam } from './exam.schema';\n\nexport type ExamAssignmentDocument = HydratedDocument;\n\n@Schema({\n  timestamps: false,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class ExamAssignment {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, refPath: 'Exam', index: true })\n  examId: Exam;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Student', index: true })\n  studentId: Student;\n\n  @Prop()\n  startTime?: Date;\n\n  @Prop()\n  endTime?: Date;\n}\n\nexport const ExamAssignmentSchema = SchemaFactory.createForClass(ExamAssignment)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExamController.html":{"url":"controllers/ExamController.html","title":"controller - ExamController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/exam.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exam\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createExam\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteMcqExam\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.CREATED)@Auth(AuthType.None)@Post()@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMcqExam(examId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Delete('mcq/:examId')\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(updateExamParamDto: UpdateMcqExamParamDto, mcqTemplate: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Patch('mcq/:examId')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateExamParamDto\n                                            \n                                                            UpdateMcqExamParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(updateExamParamDto: UpdateMcqExamParamDto, templates: Express.Multer.File[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Patch('oe/:examId')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateExamParamDto\n                                            \n                                                            UpdateMcqExamParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                templates\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Patch,\n  Delete,\n  Param,\n  UseInterceptors,\n  UploadedFile,\n  UploadedFiles,\n  Body,\n  HttpStatus,\n  HttpCode,\n} from '@nestjs/common';\nimport { CreateExamDto } from './dtos/create-mcq-exam.dto';\nimport { UpdateMcqExamParamDto } from './dtos/update-mcq-exam-param.dto';\nimport { ExamService } from './providers/exam.service';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { Auth } from 'src/admin/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/admin/auth/enums/auth-type.enum';\n\n@Controller('exam')\nexport class ExamController {\n  constructor(private readonly examService: ExamService) {}\n\n  @HttpCode(HttpStatus.CREATED)\n  @Auth(AuthType.None)\n  @Post()\n  @UseInterceptors(FileInterceptor('tutorialList'))\n  public async createExam(\n    @Body() createExamDto: CreateExamDto,\n    @UploadedFile() tutorialList: Express.Multer.File,\n  ) {\n    return this.examService.createExam(createExamDto, tutorialList);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Patch('mcq/:examId')\n  @UseInterceptors(FileInterceptor('mcqList'))\n  public async updateMcqExam(\n    @Param() updateExamParamDto: UpdateMcqExamParamDto,\n    @UploadedFile() mcqTemplate: Express.Multer.File,\n  ) {\n    return this.examService.updateMcqExam(updateExamParamDto.examId, mcqTemplate);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Delete('mcq/:examId')\n  public async deleteMcqExam(@Param('examId') examId: string) {\n    return this.examService.deleteMcqExam(examId)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Patch('oe/:examId')\n  @UseInterceptors(FilesInterceptor('templates', 2))\n  public async updateOeExam(\n    @Param() updateExamParamDto: UpdateMcqExamParamDto,\n    @UploadedFiles() templates: Express.Multer.File[],\n  ) {\n    return this.examService.updateOeExam(updateExamParamDto.examId, templates);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExamModule.html":{"url":"modules/ExamModule.html","title":"module - ExamModule","body":"\n                   \n\n\n\n\n    Modules\n    ExamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_imports\n\n\n\ncluster_ExamModule_providers\n\n\n\n\nStudentModule\n\nStudentModule\n\n\n\nExamModule\n\nExamModule\n\nExamModule -->\n\nStudentModule->ExamModule\n\n\n\n\n\nCreateExamProvider\n\nCreateExamProvider\n\nExamModule -->\n\nCreateExamProvider->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nUpdateMcqExamProvider\n\nUpdateMcqExamProvider\n\nExamModule -->\n\nUpdateMcqExamProvider->ExamModule\n\n\n\n\n\nUpdateOeExamProvider\n\nUpdateOeExamProvider\n\nExamModule -->\n\nUpdateOeExamProvider->ExamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/exam/exam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateExamProvider\n                        \n                        \n                            ExamService\n                        \n                        \n                            UpdateMcqExamProvider\n                        \n                        \n                            UpdateOeExamProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExamController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExamController } from './exam.controller';\nimport { ExamService } from './providers/exam.service';\nimport { StudentModule } from 'src/student/student.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Exam, ExamSchema } from './schemas/exam.schema';\nimport { ExamAssignment, ExamAssignmentSchema } from './schemas/exam-assigment.schema';\nimport { CreateExamProvider } from './providers/create-exam.provider';\nimport { UpdateMcqExamProvider } from './providers/update-mcq-exam.provider';\nimport { McqQuestion, McqQuestionSchema } from './schemas/mcq/mcq-question.schema';\nimport { UpdateOeExamProvider } from './providers/update-oe-exam.provider';\nimport { OeQuestion, OeQuestionSchema } from './schemas/oe/oe-question.schema';\n\n@Module({\n  controllers: [ExamController],\n  providers: [ExamService, CreateExamProvider, UpdateMcqExamProvider, UpdateOeExamProvider],\n  imports: [\n    StudentModule,\n    MongooseModule.forFeature([\n      {\n        name: Exam.name,\n        schema: ExamSchema,\n      },\n      {\n        name: ExamAssignment.name,\n        schema: ExamAssignmentSchema,\n      },\n      {\n        name: McqQuestion.name,\n        schema: McqQuestionSchema\n      },\n      {\n        name: OeQuestion.name,\n        schema: OeQuestionSchema\n      }\n    ]),\n  ],\n})\nexport class ExamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamService.html":{"url":"injectables/ExamService.html","title":"injectable - ExamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/exam.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createExam\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMcqExam\n                            \n                            \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                            \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createExamProvider: CreateExamProvider, updateMcqExamProvider: UpdateMcqExamProvider, updateOeExamProvider: UpdateOeExamProvider, examModel: Model, mcqQuestionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/exam.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createExamProvider\n                                                  \n                                                        \n                                                                        CreateExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateMcqExamProvider\n                                                  \n                                                        \n                                                                        UpdateMcqExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateOeExamProvider\n                                                  \n                                                        \n                                                                        UpdateOeExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqQuestionModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMcqExam(examId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(examId: string, mcqTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(examId: string, templates: Express.Multer.File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                templates\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateExamDto } from '../dtos/create-mcq-exam.dto';\nimport { CreateExamProvider } from './create-exam.provider';\nimport { UpdateMcqExamProvider } from './update-mcq-exam.provider';\nimport { Model } from 'mongoose';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { successResponse } from 'src/utils/response-writer';\nimport { McqQuestion } from '../schemas/mcq/mcq-question.schema';\nimport { UpdateOeExamProvider } from './update-oe-exam.provider';\n\n@Injectable()\nexport class ExamService {\n  constructor(\n    private readonly createExamProvider: CreateExamProvider,\n    private readonly updateMcqExamProvider: UpdateMcqExamProvider,\n    private readonly updateOeExamProvider: UpdateOeExamProvider,\n\n    @InjectModel(Exam.name)\n    private readonly examModel: Model,\n\n    @InjectModel(McqQuestion.name)\n    private readonly mcqQuestionModel: Model,\n  ) {}\n\n  public async createExam(\n    createExamDto: CreateExamDto,\n    tutorialList: Express.Multer.File,\n  ) {\n    if (\n      !tutorialList ||\n      tutorialList.mimetype !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      throw new BadRequestException('Only .xlsx files are allowed');\n    }\n\n    return this.createExamProvider.createExam(createExamDto, tutorialList);\n  }\n\n  public async updateMcqExam(examId: string, mcqTemplate: Express.Multer.File) {\n    if (\n      !mcqTemplate ||\n      mcqTemplate.mimetype !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      throw new BadRequestException('Only .xlsx files are allowed');\n    }\n\n    return this.updateMcqExamProvider.updateMcqExam(examId, mcqTemplate);\n  }\n\n  public async deleteMcqExam(examId: string) {\n    const exam = await this.examModel.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    if (exam.questions?.length) {\n      await this.mcqQuestionModel.deleteMany({ _id: { $in: exam.questions } });\n    }\n\n    await this.examModel.findByIdAndDelete(examId);\n\n    return successResponse({ message: 'Exam and related questions deleted' });\n  }\n\n  public async updateOeExam(examId: string, templates: Express.Multer.File[]) {\n    let mGuide: Express.Multer.File;\n    let oeTemplate: Express.Multer.File;\n\n    if (!templates) {\n      throw new BadRequestException(\n        'You need to provide the templates to update exam',\n      );\n    }\n\n    for (const template of templates) {\n      if (\n        template.mimetype ===\n          'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||\n        template.mimetype === 'application/pdf'\n      ) {\n        mGuide = template;\n      } else if (\n        template.mimetype ===\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      ) {\n        oeTemplate = template;\n      }\n    }\n\n    if (!mGuide) {\n      throw new BadRequestException(\n        'Please provide the marking guide in .docx or .pdf format',\n      );\n    }\n\n    if (!oeTemplate) {\n      throw new BadRequestException(\n        'Please provide the questions in .xlsx format',\n      );\n    }\n\n    return this.updateOeExamProvider.updateOeExam(examId, mGuide, oeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateTokenProvider.html":{"url":"classes/GenerateTokenProvider.html","title":"class - GenerateTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/providers/generate-token.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/providers/generate-token.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(adminId: string, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/providers/generate-token.provider.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adminId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { Inject } from '@nestjs/common';\n\nexport class GenerateTokenProvider {\n  constructor(\n    private readonly jwtService: JwtService,\n\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  public async signToken(adminId: string, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: adminId,\n        ...payload,\n      },\n      {\n        secret: this.jwtConfiguration.secret,\n        expiresIn: this.jwtConfiguration.accessTokenTtl,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalHttpExceptionFilter.html":{"url":"classes/GlobalHttpExceptionFilter.html","title":"class - GlobalHttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalHttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/global-http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-http-exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class GlobalHttpExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const exceptionResponse: any =\n      exception instanceof HttpException\n        ? exception.getResponse()\n        : { message: exception.message || 'Internal server error' };\n\n    const message =\n      typeof exceptionResponse === 'string'\n        ? exceptionResponse\n        : Array.isArray(exceptionResponse?.message)\n          ? exceptionResponse.message[0]\n          : exceptionResponse?.message || 'An error occurred';\n\n    return response.status(status).json({ success: false, message: message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMcqQuestion.html":{"url":"interfaces/IMcqQuestion.html","title":"interface - IMcqQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMcqQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/mcq-question.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            A\n                                        \n                                \n                                \n                                        \n                                            B\n                                        \n                                \n                                \n                                        \n                                            C\n                                        \n                                \n                                \n                                        \n                                            Correct Answer\n                                        \n                                \n                                \n                                        \n                                            D\n                                        \n                                \n                                \n                                        \n                                            Question\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        A\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        A:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        B\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        B:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        C\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        C:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Correct Answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Correct Answer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        D\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        D:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMcqQuestion {\n    Question: string;\n    A: string;\n    B: string;\n    C: string;\n    D: string;\n    'Correct Answer': string;\n}\n\nexport const iMcqQuestionExpectedKeys : (keyof IMcqQuestion)[] = [\n    \"Question\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"Correct Answer\"\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOeQuestion.html":{"url":"interfaces/IOeQuestion.html","title":"interface - IOeQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOeQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/oe-question.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Question\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IOeQuestion {\n    Question: String;\n}\n\nexport const iOeExpectedKeys : (keyof IOeQuestion)[] = [\"Question\"]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStudent.html":{"url":"interfaces/IStudent.html","title":"interface - IStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/student.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FullName\n                                        \n                                \n                                \n                                        \n                                            Matric No\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Matric No\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Matric No:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IStudent {\n  'FullName': string;\n  'Matric No': string;\n}\n\nexport const iStudentExpectedKeys: (keyof IStudent)[] = [\n  'FullName',\n  'Matric No',\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsertStudentProvider.html":{"url":"injectables/InsertStudentProvider.html","title":"injectable - InsertStudentProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsertStudentProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/providers/insert-student.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                insertStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/student/providers/insert-student.provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        insertStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertStudents(tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/providers/insert-student.provider.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Student, StudentDocument } from '../schemas/student.schema';\nimport { Connection, Model } from 'mongoose';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport { IStudent, iStudentExpectedKeys } from 'src/utils/interfaces/student.interface';\n\n@Injectable()\nexport class InsertStudentProvider {\n    constructor(@InjectModel(Student.name)\n    private readonly studentModel: Model,\n        @InjectConnection()\n        private readonly connection: Connection,) { }\n\n    public async insertStudents(\n        tutorialList: Express.Multer.File,\n    ): Promise {\n        let insertedStudentIds: string[] = [];\n\n        const session = await this.connection.startSession();\n        session.startTransaction();\n\n        try {\n            // Extract student data from the tutorial list template\n            const students = parseTemplate(\n                tutorialList,\n                iStudentExpectedKeys,\n            );\n\n            const operations = students\n                .filter((student) => student['Matric No'])\n                .map((student) => {\n                    const mappedStudent = {\n                        matricNo: student['Matric No'],\n                        fullName: student['FullName'],\n                    };\n\n                    return {\n                        updateOne: {\n                            filter: { matricNo: mappedStudent.matricNo },\n                            update: { $set: mappedStudent },\n                            upsert: true,\n                        },\n                    };\n                });\n\n            await this.studentModel.bulkWrite(operations, { session });\n\n            await this.studentModel.bulkWrite(operations, { session });\n\n            // Fetch all affected student IDs\n            const affectedMatricNos = students.map((s) => s['Matric No']);\n            const affectedStudents = await this.studentModel\n                .find({ matricNo: { $in: affectedMatricNos } }, '_id')\n                .session(session);\n\n            insertedStudentIds = affectedStudents.map((s) => s._id.toString());\n\n            await session.commitTransaction();\n\n            return insertedStudentIds;\n        } catch (error) {\n            await session.abortTransaction();\n            throw new InternalServerErrorException(\n                error.message || 'Failed to insert students',\n            );\n        } finally {\n            await session.endSession();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/auth/dtos/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&.])[A-Za-z\\d@$!%*#?&.]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/auth/dtos/login.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n  \n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&.])[A-Za-z\\d@$!%*#?&.]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginStudentDto.html":{"url":"classes/LoginStudentDto.html","title":"class - LoginStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dtos/login-student.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                matricNo\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        matricNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dtos/login-student.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/dtos/login-student.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from \"class-transformer\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginStudentDto {\n    @IsString()\n    @IsNotEmpty()\n    @Transform(({ value }) => value?.toUpperCase())\n    matricNo: string;\n\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mcq.html":{"url":"classes/Mcq.html","title":"class - Mcq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mcq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/mcq.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                options\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mcq {\n  question: string;\n  options: string[];\n  answer: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/McqQuestion.html":{"url":"classes/McqQuestion.html","title":"class - McqQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  McqQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/mcq/mcq-question.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answer\n                            \n                            \n                                    \n                                options\n                            \n                            \n                                    \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq/mcq-question.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq/mcq-question.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq/mcq-question.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type McqQuestionDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class McqQuestion {\n  @Prop({ required: true, unique: true })\n  question: string;\n\n  @Prop({ type: [String], required: true  })\n  options: string[];\n\n  @Prop({ required: true })\n  answer: string;\n}\n\nexport const McqQuestionSchema = SchemaFactory.createForClass(McqQuestion);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OeQuestion.html":{"url":"classes/OeQuestion.html","title":"class - OeQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OeQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/oe/oe-question.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/oe/oe-question.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type OeQuestionDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class OeQuestion {\n    @Prop()\n    question: string\n}\n\nexport const OeQuestionSchema = SchemaFactory.createForClass(OeQuestion)\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/schemas/student.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                matricNo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/schemas/student.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        matricNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, index: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/schemas/student.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\n\nexport type StudentDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Student {\n  @Prop({ required: true })\n  fullName: string;\n\n  @Prop({ required: true, index: true, unique: true })\n  matricNo: string;\n}\n\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginStudentDto: LoginStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth(AuthType.None)@Post('auth')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginStudentDto\n                                            \n                                                            LoginStudentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { LoginStudentDto } from './dtos/login-student.dto';\nimport { StudentService } from './providers/student.service';\nimport { Auth } from 'src/admin/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/admin/auth/enums/auth-type.enum';\n\n@Controller('student')\nexport class StudentController {\n    constructor(\n        private readonly studentService: StudentService\n    ) {}\n\n    @Auth(AuthType.None)\n    @Post('auth')\n    public async login(@Body() loginStudentDto: LoginStudentDto) {\n        return this.studentService.loginStudent(loginStudentDto)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nStudentService \n\nStudentService \n\n\n\nStudentModule\n\nStudentModule\n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nInsertStudentProvider\n\nInsertStudentProvider\n\nStudentModule -->\n\nInsertStudentProvider->StudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InsertStudentProvider\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StudentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentController } from './student.controller';\nimport { StudentService } from './providers/student.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Student, StudentSchema } from './schemas/student.schema';\nimport { InsertStudentProvider } from './providers/insert-student.provider';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Student.name,\n        schema: StudentSchema,\n      },\n    ]),\n  ],\n  controllers: [StudentController],\n  providers: [StudentService, InsertStudentProvider],\n  exports: [StudentService]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/providers/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                insertStudents\n                            \n                            \n                                    Public\n                                    Async\n                                loginStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentModel: Model, insertStudentProvider: InsertStudentProvider)\n                    \n                \n                        \n                            \n                                Defined in src/student/providers/student.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        insertStudentProvider\n                                                  \n                                                        \n                                                                        InsertStudentProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        insertStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertStudents(tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/providers/student.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        loginStudent\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginStudent(loginStudentDto: LoginStudentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/providers/student.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginStudentDto\n                                            \n                                                            LoginStudentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Student, StudentDocument } from '../schemas/student.schema';\nimport { Model } from 'mongoose';\nimport { InsertStudentProvider } from './insert-student.provider';\nimport { LoginStudentDto } from '../dtos/login-student.dto';\nimport { successResponse } from 'src/utils/response-writer';\n\n@Injectable()\nexport class StudentService {\n  constructor(\n    @InjectModel(Student.name)\n    private readonly studentModel: Model,\n\n    private readonly insertStudentProvider: InsertStudentProvider\n  ) { }\n\n  public async loginStudent(loginStudentDto: LoginStudentDto) {\n\n    let student = await this.studentModel.findOne({ matricNo: loginStudentDto.matricNo })\n    if (!student) {\n      throw new NotFoundException('Student with matric number does not exist.')\n    }\n\n    if (student.fullName.split(' ')[0].toLowerCase() != loginStudentDto.password.toLowerCase()) {\n      throw new UnauthorizedException('Incorrect password')\n    }\n\n    return successResponse({ message: 'Login Successful', data: student })\n  }\n\n  public async insertStudents(\n    tutorialList: Express.Multer.File,\n  ): Promise {\n    return this.insertStudentProvider.insertStudents(tutorialList)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMcqExamParamDto.html":{"url":"classes/UpdateMcqExamParamDto.html","title":"class - UpdateMcqExamParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMcqExamParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/update-mcq-exam-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                examId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/update-mcq-exam-param.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class UpdateMcqExamParamDto {\n    @IsString()\n    @IsNotEmpty()\n    examId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateMcqExamProvider.html":{"url":"injectables/UpdateMcqExamProvider.html","title":"injectable - UpdateMcqExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateMcqExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/update-mcq-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                prepareListForBulkWrite\n                            \n                            \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mcqQuestionModel: Model, examSchema: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/update-mcq-exam.provider.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mcqQuestionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examSchema\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareListForBulkWrite\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareListForBulkWrite(mcqList: IMcqQuestion[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-mcq-exam.provider.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mcqList\n                                            \n                                                            IMcqQuestion[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(examId: string, mcqTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-mcq-exam.provider.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport {\n  IMcqQuestion,\n  iMcqQuestionExpectedKeys,\n} from 'src/utils/interfaces/mcq-question.interface';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport { Connection, Model } from 'mongoose';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport {\n  McqQuestion,\n  McqQuestionDocument,\n} from '../schemas/mcq/mcq-question.schema';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { successResponse } from 'src/utils/response-writer';\nimport { examType } from '../enums/exam-type.enum';\n\n@Injectable()\nexport class UpdateMcqExamProvider {\n  constructor(\n    @InjectModel(McqQuestion.name)\n    private readonly mcqQuestionModel: Model,\n\n    @InjectModel(Exam.name)\n    private readonly examSchema: Model,\n\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async updateMcqExam(examId: string, mcqTemplate: Express.Multer.File) {\n\n    const exam = await this.examSchema.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    if (exam.examType !== examType.MCQ) {\n      throw new BadRequestException('Exam mode is not MCQ')\n    }\n\n    const mcqList = parseTemplate(\n      mcqTemplate,\n      iMcqQuestionExpectedKeys,\n    );\n\n    if (mcqList.length === 0) {\n      throw new BadRequestException('Questions template is empty');\n    }\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      const operations = this.prepareListForBulkWrite(mcqList);\n\n      let result = await this.mcqQuestionModel.bulkWrite(operations, {\n        session,\n      });\n\n      const insertedQuestionIds = Object.values(result.upsertedIds || {});\n\n      exam.questions.push(...insertedQuestionIds)\n      await exam.save({session})\n\n      await session.commitTransaction();\n\n      return successResponse({ message: 'Exam updated successfully.' });\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException(\n        error.message || 'Failed to save exam questions',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n\n  private prepareListForBulkWrite(mcqList: IMcqQuestion[]) {\n    const collapseMcqList = mcqList.map((mcq) => ({\n      question: mcq.Question,\n      options: [mcq.A, mcq.B, mcq.C, mcq.D],\n      answer: mcq['Correct Answer'],\n    }));\n\n    const operations = collapseMcqList.map((item) => ({\n      updateOne: {\n        filter: { question: item.question },\n        update: { $set: item },\n        upsert: true,\n      },\n    }));\n    return operations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOeExamProvider.html":{"url":"injectables/UpdateOeExamProvider.html","title":"injectable - UpdateOeExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOeExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/update-oe-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oeQuestionModel: Model, examSchema: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/update-oe-exam.provider.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oeQuestionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examSchema\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(examId: string, markingGuide: Express.Multer.File, oeTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-oe-exam.provider.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                markingGuide\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oeTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport {\n  OeQuestion,\n  OeQuestionDocument,\n} from '../schemas/oe/oe-question.schema';\nimport { Connection, Model } from 'mongoose';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport {\n  iOeExpectedKeys,\n  IOeQuestion,\n} from 'src/utils/interfaces/oe-question.interface';\nimport { successResponse } from 'src/utils/response-writer';\nimport { examType } from '../enums/exam-type.enum';\n\n@Injectable()\nexport class UpdateOeExamProvider {\n  constructor(\n    @InjectModel(OeQuestion.name)\n    private readonly oeQuestionModel: Model,\n\n    @InjectModel(Exam.name)\n    private readonly examSchema: Model,\n\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async updateOeExam(\n    examId: string,\n    markingGuide: Express.Multer.File,\n    oeTemplate: Express.Multer.File,\n  ) {\n    const exam = await this.examSchema.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    if (exam.examType !== examType.OE) {\n      throw new BadRequestException('Exam mode is not OE');\n    }\n\n    const oeqList = parseTemplate(oeTemplate, iOeExpectedKeys);\n\n    if (oeqList.length === 0) {\n      throw new BadRequestException('Question template is empty');\n    }\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      const operations = oeqList.map((oeq) => ({\n        insertOne: { document: { question: oeq.Question } },\n      }));\n\n      let result = await this.oeQuestionModel.bulkWrite(operations, {\n        session,\n      });\n\n      const insertedQuestionIds = Object.values(result.insertedIds || {});\n      console.log(insertedQuestionIds)\n\n      // TODO: Create Assistant and update exam with assistantId\n\n      exam.questions.push(...insertedQuestionIds);\n      await exam.save({ session });\n\n      await session.commitTransaction();\n\n      return successResponse({ message: 'Exam updated successfully' });\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException(\n        error.message || 'Failed to save exam questions',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/admin/auth/constants/auth.constants.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/constants/auth.constants.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/decorators/active-admin.decorator.ts\n            \n            variable\n            ActiveAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/decorators/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth/guards/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/auth/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/auth/interfaces/active-admin-data.interface.ts\n            \n            interface\n            ActiveAdminData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth/providers/generate-token.provider.ts\n            \n            class\n            GenerateTokenProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/dtos/create-admin.dto.ts\n            \n            class\n            CreateAdminDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/providers/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/schemas/admin.schema.ts\n            \n            class\n            Admin\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/admin/schemas/admin.schema.ts\n            \n            variable\n            AdminSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/schemas/admin.schema.ts\n            \n            type alias\n            AdminDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-exam-assignment.dto.ts\n            \n            class\n            CreateExamAssignmentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-mcq-exam.dto.ts\n            \n            class\n            CreateExamDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/dtos/mcq.dto.ts\n            \n            class\n            Mcq\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/dtos/update-mcq-exam-param.dto.ts\n            \n            class\n            UpdateMcqExamParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/exam.controller.ts\n            \n            controller\n            ExamController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/exam/providers/create-exam.provider.ts\n            \n            injectable\n            CreateExamProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/providers/exam.service.ts\n            \n            injectable\n            ExamService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/providers/update-mcq-exam.provider.ts\n            \n            injectable\n            UpdateMcqExamProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/providers/update-oe-exam.provider.ts\n            \n            injectable\n            UpdateOeExamProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/schemas/exam-assigment.schema.ts\n            \n            class\n            ExamAssignment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam-assigment.schema.ts\n            \n            variable\n            ExamAssignmentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam-assigment.schema.ts\n            \n            type alias\n            ExamAssignmentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/exam.schema.ts\n            \n            class\n            Exam\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam.schema.ts\n            \n            variable\n            ExamSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam.schema.ts\n            \n            type alias\n            ExamDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/mcq/mcq-question.schema.ts\n            \n            class\n            McqQuestion\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq/mcq-question.schema.ts\n            \n            variable\n            McqQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq/mcq-question.schema.ts\n            \n            type alias\n            McqQuestionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/oe/oe-question.schema.ts\n            \n            class\n            OeQuestion\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/exam/schemas/oe/oe-question.schema.ts\n            \n            variable\n            OeQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/oe/oe-question.schema.ts\n            \n            type alias\n            OeQuestionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/global-http-exception.filter.ts\n            \n            class\n            GlobalHttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/dtos/login-student.dto.ts\n            \n            class\n            LoginStudentDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/providers/insert-student.provider.ts\n            \n            injectable\n            InsertStudentProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/providers/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/student/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/student/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/student/schemas/student.schema.ts\n            \n            type alias\n            StudentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/interfaces/mcq-question.interface.ts\n            \n            interface\n            IMcqQuestion\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/mcq-question.interface.ts\n            \n            variable\n            iMcqQuestionExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/oe-question.interface.ts\n            \n            interface\n            IOeQuestion\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/oe-question.interface.ts\n            \n            variable\n            iOeExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/student.interface.ts\n            \n            interface\n            IStudent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/student.interface.ts\n            \n            variable\n            iStudentExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/response-writer.ts\n            \n            function\n            successResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/template-parser.ts\n            \n            function\n            parseTemplate\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            helmet : ^8.1.0\n        \n            joi : ^17.13.3\n        \n            mongoose : ^8.13.2\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            xlsx : ^0.18.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            examSchemaEnum   (src/.../exam-schema.enum.ts)\n                        \n                        \n                            examType   (src/.../exam-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-schema.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        examSchemaEnum\n                    \n                \n                        \n                            \n                                 McqExam\n                            \n                        \n                        \n                            \n                                Value : McqExam\n                            \n                        \n                        \n                            \n                                 TheoryExam\n                            \n                        \n                        \n                            \n                                Value : TheoryExam\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        examType\n                    \n                \n                        \n                            \n                                 MCQ\n                            \n                        \n                        \n                            \n                                Value : McqQuestion\n                            \n                        \n                        \n                            \n                                 OE\n                            \n                        \n                        \n                            \n                                Value : OeQuestion\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            parseTemplate   (src/.../template-parser.ts)\n                        \n                        \n                            successResponse   (src/.../response-writer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/template-parser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseTemplate\n                        \n                    \n                \n            \n            \n                \nparseTemplate(template, expectedKeys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                template\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expectedKeys\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/response-writer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        successResponse\n                        \n                    \n                \n            \n            \n                \nsuccessResponse(__namedParameters: {message: string, data: any})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Oluwafemi Ojuri\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nExamModule -->\n\nStudentModule->ExamModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nStudentService \n\nStudentService \n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCreateExamProvider\n\nCreateExamProvider\n\nExamModule -->\n\nCreateExamProvider->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nUpdateMcqExamProvider\n\nUpdateMcqExamProvider\n\nExamModule -->\n\nUpdateMcqExamProvider->ExamModule\n\n\n\n\n\nUpdateOeExamProvider\n\nUpdateOeExamProvider\n\nExamModule -->\n\nUpdateOeExamProvider->ExamModule\n\n\n\n\n\nInsertStudentProvider\n\nInsertStudentProvider\n\nStudentModule -->\n\nInsertStudentProvider->StudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AdminDocument   (src/.../admin.schema.ts)\n                        \n                        \n                            ExamAssignmentDocument   (src/.../exam-assigment.schema.ts)\n                        \n                        \n                            ExamDocument   (src/.../exam.schema.ts)\n                        \n                        \n                            McqQuestionDocument   (src/.../mcq-question.schema.ts)\n                        \n                        \n                            OeQuestionDocument   (src/.../oe-question.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/schemas/admin.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AdminDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/exam-assigment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ExamAssignmentDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/exam.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ExamDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/mcq/mcq-question.schema.ts\n    \n    \n        \n            \n                \n                    \n                    McqQuestionDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/oe/oe-question.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OeQuestionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/student/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveAdmin   (src/.../active-admin.decorator.ts)\n                        \n                        \n                            AdminSchema   (src/.../admin.schema.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            ExamAssignmentSchema   (src/.../exam-assigment.schema.ts)\n                        \n                        \n                            ExamSchema   (src/.../exam.schema.ts)\n                        \n                        \n                            iMcqQuestionExpectedKeys   (src/.../mcq-question.interface.ts)\n                        \n                        \n                            iOeExpectedKeys   (src/.../oe-question.interface.ts)\n                        \n                        \n                            iStudentExpectedKeys   (src/.../student.interface.ts)\n                        \n                        \n                            McqQuestionSchema   (src/.../mcq-question.schema.ts)\n                        \n                        \n                            OeQuestionSchema   (src/.../oe-question.schema.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth/decorators/active-admin.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveAdminData, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveAdminData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/admin/schemas/admin.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdminSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Admin)\n                    \n                \n\n\n        \n    \n\n    src/admin/auth/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) => SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n\n    src/admin/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/exam-assigment.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExamAssignmentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ExamAssignment)\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/exam.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExamSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Exam)\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/mcq-question.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iMcqQuestionExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"Question\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"Correct Answer\"\n]\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/oe-question.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iOeExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"Question\"]\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/student.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iStudentExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'FullName',\n  'Matric No',\n]\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/mcq/mcq-question.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        McqQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(McqQuestion)\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/oe/oe-question.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OeQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(OeQuestion)\n                    \n                \n\n\n        \n    \n\n    src/student/schemas/student.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Student)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
