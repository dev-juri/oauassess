var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.665,1,2.197]],["body/guards/AccessTokenGuard.html",[1,2.524,2,2.097,3,0.234,4,0.211,5,0.211,6,4.494,7,2.371,8,0.258,9,1.372,10,1.829,11,4.494,12,2.589,13,4.068,14,1.874,15,2.371,16,5.154,17,4.087,18,4.494,19,0.828,20,2.787,21,1.721,22,0.023,23,1.205,24,0.577,25,1.439,26,3.461,27,3.975,28,2.787,29,2.371,30,1.293,31,2.524,32,4.068,33,4.991,34,2.787,35,0.655,36,2.762,37,0.704,38,3.262,39,1.148,40,3.615,41,0.582,42,1.892,43,3.061,44,2.371,45,1.729,46,1.729,47,2.097,48,2.371,49,0.234,50,0.009,51,2.097,52,1.457,53,2.371,54,1.406,55,2.787,56,2.371,57,5.866,58,2.787,59,2.787,60,2.007,61,1.756,62,1.729,63,3.461,64,1.128,65,2.787,66,2.787,67,2.371,68,1.593,69,1.476,70,0.96,71,1.061,72,2.787,73,2.787,74,0.013,75,0.013]],["title/interfaces/ActiveAdminData.html",[76,1.876,77,2.405]],["body/interfaces/ActiveAdminData.html",[3,0.385,4,0.347,5,0.347,8,0.424,22,0.022,23,1.626,24,0.744,35,1.132,49,0.385,74,0.018,75,0.018,76,2.428,77,3.869,78,3.111,79,3.898,80,2.428,81,3.898,82,1.609,83,3.708,84,5.519]],["title/classes/Admin.html",[50,0.011,80,1.876]],["body/classes/Admin.html",[3,0.255,4,0.23,5,0.23,8,0.282,10,1.157,19,0.869,22,0.023,23,1.265,24,0.66,35,0.973,37,0.698,41,0.635,49,0.424,50,0.014,54,1.152,60,1.499,61,1.311,62,1.885,64,1.754,68,1.737,69,1.61,70,1.022,71,2.462,74,0.014,75,0.014,80,2.294,82,1.223,83,2.884,85,1.025,86,2.064,87,4.138,88,1.807,89,3.426,90,3.259,91,3.039,92,3.039,93,3.039,94,3.039,95,3.412,96,2.136,97,1.885,98,0.966,99,2.475,100,3.039,101,1.231,102,3.259,103,2.287,104,4.33,105,2.585,106,2.064,107,1.885,108,1.885,109,1.885,110,1.885,111,1.885,112,2.687,113,1.885,114,2.687,115,1.61,116,3.13,117,2.064,118,2.585,119,3.039,120,2.585,121,3.039,122,4.33,123,3.039,124,3.039,125,3.039,126,3.039,127,3.039]],["title/controllers/AdminController.html",[128,1.434,129,2.405]],["body/controllers/AdminController.html",[3,0.402,4,0.362,5,0.362,22,0.023,37,0.703,41,1,49,0.402,50,0.015,52,1.714,74,0.019,75,0.019,80,2.536,115,2.536,128,1.938,129,3.974,130,2.065,131,4.072,132,3.25,133,4.072,134,4.072,135,3.601,136,3.35,137,4.072,138,4.786,139,3.25]],["title/modules/AdminModule.html",[140,1.632,141,2.197]],["body/modules/AdminModule.html",[1,2.782,3,0.268,4,0.242,5,0.242,22,0.023,23,0.8,37,0.824,41,0.667,42,2.168,43,2.402,45,1.981,49,0.268,50,0.01,74,0.014,75,0.014,80,1.692,96,1.575,98,1.014,117,3.045,129,3.52,130,1.935,136,3.253,137,2.716,140,2.388,141,3.994,142,1.692,143,1.692,144,1.981,145,1.981,146,1.692,147,3.216,148,1.981,149,2.716,150,2.716,151,3.51,152,2.782,153,1.981,154,1.692,155,3.193,156,3.52,157,3.193,158,3.193,159,3.193,160,2.168,161,2.716,162,2.782,163,3.193,164,2.716,165,3.193,166,3.193,167,2.716,168,3.193,169,2.716,170,4.484,171,2.402,172,3.045,173,3.193,174,2.168,175,2.402,176,3.193,177,3.193,178,3.193,179,3.193,180,3.193]],["title/injectables/AdminService.html",[39,1,136,1.876]],["body/injectables/AdminService.html",[3,0.275,4,0.248,5,0.248,8,0.303,9,1.538,10,2.355,12,1.507,14,2.101,19,0.905,21,1.88,22,0.023,23,1.316,24,0.63,25,1.573,30,1.449,31,3.525,35,0.846,37,0.717,39,1.287,41,0.683,49,0.275,50,0.01,52,1.171,54,0.87,61,1.411,64,1.847,70,1.24,74,0.015,75,0.015,80,1.733,83,2.607,98,1.039,101,1.324,106,2.221,136,2.416,161,2.782,181,1.613,182,2.782,183,2.851,184,4.56,185,4.56,186,3.27,187,3.525,188,3.27,189,4.56,190,4.56,191,4.057,192,3.27,193,4.56,194,3.27,195,2.029,196,2.221,197,3.27,198,3.27,199,3.951,200,3.27,201,2.782,202,3.27,203,3.27,204,3.27]],["title/controllers/AppController.html",[128,1.434,205,2.405]],["body/controllers/AppController.html",[3,0.38,4,0.342,5,0.342,8,0.419,9,1.906,19,0.78,22,0.023,30,1.438,35,0.911,37,0.679,41,0.945,49,0.38,50,0.014,52,1.62,70,1.068,74,0.018,75,0.018,88,1.62,128,2.289,130,1.952,139,3.072,205,3.838,206,3.849,207,5.494,208,4.524,209,3.524,210,3.849,211,4.524]],["title/modules/AppModule.html",[140,1.632,212,2.405]],["body/modules/AppModule.html",[3,0.261,4,0.235,5,0.235,22,0.023,37,0.801,38,2.111,41,0.65,45,1.929,49,0.261,50,0.01,54,0.827,71,1.183,74,0.014,75,0.014,98,0.988,130,1.899,140,2.354,141,3.777,142,1.647,143,1.647,144,1.929,145,1.929,146,1.647,147,3.17,148,1.929,152,2.731,153,1.929,154,1.647,160,2.111,167,3.745,174,3.469,205,3.469,209,3.48,210,2.645,212,4.572,213,2.645,214,2.645,215,2.645,216,3.777,217,3.48,218,2.34,219,3.109,220,3.109,221,5.556,222,3.109,223,3.109,224,4.401,225,3.109,226,4.401,227,3.109,228,4.401,229,3.109,230,3.845,231,2.645,232,3.109,233,3.109,234,3.109,235,3.109,236,3.109,237,3.109,238,3.109,239,3.109,240,3.109,241,3.109,242,3.109]],["title/injectables/AppService.html",[39,1,209,2.024]],["body/injectables/AppService.html",[3,0.399,4,0.359,5,0.359,8,0.439,9,1.963,19,0.818,22,0.023,30,1.507,35,0.938,37,0.569,39,1.643,41,0.991,49,0.399,50,0.015,70,1.12,74,0.019,75,0.019,181,2.34,207,5.587,209,3.328,243,4.036,244,4.744,245,4.744,246,4.744]],["title/controllers/AuthController.html",[128,1.434,156,2.405]],["body/controllers/AuthController.html",[3,0.324,4,0.292,5,0.292,8,0.357,9,1.721,10,2.176,19,0.665,21,1.382,22,0.023,23,0.967,24,0.463,25,1.155,30,1.226,37,0.759,41,0.806,49,0.324,50,0.012,52,1.382,64,1.562,70,0.911,74,0.016,75,0.016,88,1.382,128,1.562,130,1.665,132,2.62,135,3.839,139,2.62,151,3.268,156,3.465,183,2.634,247,3.282,248,3.465,249,4.341,250,3.282,251,4.033,252,3.858,253,3.858,254,2.205,255,3.282,256,3.858,257,3.282,258,3.858,259,3.282,260,3.858,261,2.393,262,3.282,263,2.205,264,3.858,265,3.282,266,3.858,267,3.858,268,3.858]],["title/injectables/AuthService.html",[39,1,151,2.024]],["body/injectables/AuthService.html",[3,0.266,4,0.24,5,0.24,8,0.293,9,1.503,10,1.963,12,2.053,14,2.053,19,0.768,21,1.596,22,0.023,23,1.293,24,0.535,25,1.335,30,1.006,31,2.765,37,0.735,39,1.258,40,2.381,41,0.661,49,0.266,50,0.01,52,1.596,54,0.842,60,2.198,61,1.923,64,2.089,70,0.747,74,0.014,75,0.014,83,1.809,102,3.353,136,3.244,151,2.547,162,3.903,164,2.692,181,1.561,183,2.377,199,3.353,249,4.388,250,3.791,251,3.662,259,2.692,269,2.692,270,3.164,271,3.164,272,3.164,273,2.381,274,2.547,275,1.809,276,2.149,277,3.164,278,3.164,279,3.164,280,3.164,281,2.149,282,4.456,283,3.164,284,3.164,285,3.164,286,3.164,287,3.164,288,4.456,289,3.164,290,3.164,291,3.164,292,1.458,293,3.164,294,2.149]],["title/guards/AuthenticationGuard.html",[0,2.665,172,2.405]],["body/guards/AuthenticationGuard.html",[1,3.761,2,4.232,3,0.235,4,0.211,5,0.211,8,0.259,9,1.375,10,1.831,11,5.287,12,2.706,14,1.878,19,0.702,21,1.46,22,0.023,23,1.022,24,0.489,25,1.221,26,3.467,27,3.98,29,2.377,30,0.888,31,2.529,37,0.705,39,1.151,40,3.067,41,0.584,48,2.377,49,0.235,50,0.009,51,2.102,52,2.103,54,1.496,60,1.378,61,1.206,64,1.131,69,2.549,70,0.66,71,1.551,74,0.013,75,0.013,82,0.789,169,2.377,171,2.102,172,2.768,261,1.733,262,2.377,263,1.597,295,2.377,296,4.076,297,4.076,298,4.076,299,2.794,300,6.062,301,2.794,302,2.794,303,2.794,304,2.377,305,2.794,306,2.102,307,4.076,308,2.794,309,2.794,310,2.794,311,3.467,312,2.794,313,2.794,314,2.794,315,2.794,316,2.102,317,2.794,318,2.794,319,2.794,320,2.377,321,2.377,322,2.794,323,2.794,324,2.794,325,2.794,326,2.794,327,2.794,328,2.794]],["title/classes/CreateAdminDto.html",[50,0.011,191,2.405]],["body/classes/CreateAdminDto.html",[3,0.303,4,0.273,5,0.273,8,0.335,19,0.953,22,0.022,23,1.386,24,0.664,35,1.027,37,0.433,49,0.303,50,0.015,74,0.016,75,0.016,82,1.378,83,3.161,85,1.218,87,4.161,88,1.981,191,3.315,292,2.249,329,5.04,330,3.072,331,3.072,332,3.611,333,3.611,334,3.611,335,3.072,336,5.04,337,4.882,338,4.882,339,4.153,340,4.153,341,4.153,342,5.426,343,4.153,344,3.315,345,4.153,346,4.153,347,3.611,348,4.153,349,3.675,350,3.675,351,3.072,352,2.717,353,2.064,354,3.611,355,3.072,356,3.072]],["title/classes/CreateExamAssignmentDto.html",[50,0.011,357,2.405]],["body/classes/CreateExamAssignmentDto.html",[3,0.297,4,0.268,5,0.268,8,0.328,19,1.059,22,0.023,24,0.738,25,1.76,35,0.946,37,0.578,49,0.297,50,0.015,74,0.015,75,0.015,82,1.36,85,1.194,88,2.201,349,3.645,350,3.645,353,2.023,357,3.27,358,4.77,359,3.359,360,3.012,361,4.657,362,2.9,363,4.119,364,4.657,365,4.119,366,4.998,367,6.145,368,3.54,369,4.119,370,3.54,371,3.717,372,3.54,373,3.54,374,3.54,375,2.196,376,2.664]],["title/classes/CreateExamDto.html",[50,0.011,377,2.024]],["body/classes/CreateExamDto.html",[3,0.298,4,0.269,5,0.269,8,0.329,19,1.014,22,0.023,24,0.706,35,0.948,37,0.579,49,0.298,50,0.015,74,0.015,75,0.015,82,1.363,85,1.198,88,2.107,263,2.03,292,2.224,344,3.278,349,3.817,350,3.402,352,2.672,353,2.03,358,4.629,369,2.672,375,2.204,377,2.759,378,2.471,379,3.022,380,4.665,381,4.665,382,4.665,383,4.486,384,3.551,385,3.551,386,3.551,387,3.551,388,3.551,389,4.827,390,3.551,391,3.551,392,3.551,393,4.827,394,3.551,395,3.551,396,3.551,397,3.551,398,3.022]],["title/injectables/CreateExamProvider.html",[39,1,399,2.024]],["body/injectables/CreateExamProvider.html",[3,0.189,4,0.171,5,0.171,8,0.209,9,1.17,10,1.61,12,2.189,14,1.599,19,0.598,21,1.243,22,0.023,23,0.87,24,0.417,25,1.039,30,0.716,37,0.745,38,2.356,39,0.98,41,0.471,49,0.189,50,0.007,52,1.701,54,1.264,60,1.712,61,1.497,62,1.399,64,2.194,68,1.289,69,1.194,70,0.532,71,0.858,74,0.011,75,0.011,98,0.716,101,0.913,181,1.112,183,1.949,187,3.502,195,1.399,196,2.356,254,1.289,263,1.289,274,1.984,275,1.289,276,1.531,281,1.531,292,1.039,294,1.531,316,1.696,357,2.356,359,2.87,362,1.838,363,1.696,365,2.611,371,1.531,375,2.153,376,1.696,377,3.097,378,0.858,383,1.531,399,1.984,400,3.599,401,1.696,402,3.183,403,2.254,404,3.679,405,3.226,406,3.599,407,4.23,408,2.254,409,1.696,410,2.873,411,2.625,412,2.254,413,1.696,414,1.696,415,1.112,416,1.289,417,1.531,418,1.531,419,2.254,420,2.611,421,2.254,422,1.399,423,1.531,424,1.918,425,1.918,426,1.696,427,2.254,428,3.183,429,1.696,430,1.696,431,1.918,432,3.575,433,3.47,434,2.254,435,2.254,436,1.696,437,2.254,438,1.918,439,1.918,440,2.254,441,2.254,442,1.696,443,2.254,444,1.696,445,1.696,446,2.254,447,1.712,448,1.531,449,1.696,450,2.254,451,2.254,452,2.254,453,2.254,454,2.254,455,1.696,456,2.254,457,1.696,458,2.254,459,1.918,460,2.254,461,1.696,462,2.254,463,2.254,464,1.696,465,1.696]],["title/classes/ExamAssignment.html",[50,0.011,422,2.197]],["body/classes/ExamAssignment.html",[3,0.242,4,0.218,5,0.218,8,0.528,19,0.982,22,0.023,24,0.767,25,1.608,35,0.672,36,2.832,37,0.644,49,0.412,50,0.009,54,0.767,70,0.681,71,2.33,74,0.013,75,0.013,82,1.177,85,0.973,88,2.04,95,3.889,96,2.057,97,1.789,98,0.916,99,2.384,101,1.689,107,1.789,108,1.789,109,1.789,110,1.789,111,1.789,112,2.588,113,1.789,114,2.588,115,1.528,116,2.588,361,4.168,362,2.596,363,4.286,364,4.168,365,3.687,366,4.567,371,3.868,375,1.789,376,2.17,422,2.588,423,1.958,447,2.809,466,4.031,467,1.958,468,2.884,469,4.171,470,3.687,471,4.171,472,2.884,473,3.548,474,2.884,475,2.884,476,3.548,477,2.884,478,2.884,479,2.454,480,3.548,481,1.958,482,2.454]],["title/controllers/ExamController.html",[128,1.434,483,2.405]],["body/controllers/ExamController.html",[3,0.206,4,0.186,5,0.186,8,0.227,9,1.249,10,2.445,19,0.856,21,1.778,22,0.023,23,1.245,24,0.596,25,1.487,30,1.578,35,0.718,37,0.698,41,0.513,46,1.523,49,0.206,50,0.008,52,0.879,70,1.172,74,0.012,75,0.012,88,1.778,115,1.301,128,0.994,130,1.06,132,1.667,133,3.793,134,2.089,135,2.787,139,1.667,183,2.96,196,1.667,248,1.667,254,2.838,255,3.151,257,2.089,261,1.523,263,1.404,265,2.089,359,1.962,362,1.962,377,3.202,378,1.409,402,3.355,409,1.848,410,3.372,411,3.8,414,1.848,483,2.515,484,2.089,485,3.151,486,3.355,487,3.793,488,2.455,489,2.455,490,2.089,491,2.455,492,2.455,493,2.455,494,3.948,495,3.736,496,2.455,497,2.455,498,4.965,499,2.455,500,4.224,501,2.455,502,2.455,503,4.459,504,3.703,505,2.089,506,2.455,507,2.455,508,2.455,509,2.549,510,2.089,511,2.455,512,2.455,513,2.089,514,2.455,515,2.089,516,2.455,517,2.455,518,2.455,519,2.455,520,4.459,521,2.455,522,2.455,523,2.455,524,2.455,525,2.455,526,2.455,527,2.455,528,2.455,529,2.089,530,2.455]],["title/modules/ExamModule.html",[140,1.632,216,2.197]],["body/modules/ExamModule.html",[3,0.265,4,0.239,5,0.239,22,0.023,23,1.291,37,0.794,41,0.659,49,0.265,50,0.01,74,0.014,75,0.014,96,2.54,98,1.003,130,1.919,140,2.373,142,1.672,143,1.672,144,1.957,145,1.957,146,1.672,147,3.195,148,1.957,152,2.759,153,1.957,154,1.672,160,2.142,174,3.02,175,2.374,216,4.188,217,3.497,378,1.201,399,3.497,415,1.556,417,3.02,418,2.142,422,1.957,424,2.684,425,2.684,481,3.02,483,3.497,509,3.497,510,2.684,531,2.684,532,2.684,533,3.155,534,3.497,535,3.155,536,3.155,537,3.155,538,2.759,539,3.155,540,3.783,541,3.155,542,1.672,543,2.759,544,2.142,545,3.155,546,3.155,547,3.155]],["title/injectables/ExamService.html",[39,1,509,2.024]],["body/injectables/ExamService.html",[3,0.175,4,0.158,5,0.158,8,0.193,9,1.101,10,2.354,12,2.099,14,1.504,19,0.852,21,1.771,22,0.023,23,1.24,24,0.594,25,1.481,30,1.447,35,0.94,37,0.701,39,0.922,41,0.435,49,0.175,50,0.007,52,1.631,54,0.554,60,1.985,61,1.737,64,1.63,70,0.95,71,0.793,74,0.01,75,0.01,98,0.662,101,0.844,181,1.028,183,2.849,187,3.522,195,1.293,196,1.415,254,2.3,273,1.568,274,1.191,275,1.191,276,1.415,281,1.415,292,0.96,316,1.568,359,2.62,362,2.132,377,2.999,378,1.242,399,2.999,402,3.028,406,3.424,409,1.568,410,3.358,411,3.621,413,1.568,414,1.568,415,1.028,416,1.191,417,2.217,418,1.415,426,1.568,432,1.568,448,1.415,485,2.777,486,2.456,487,2.777,490,2.777,495,3.721,500,3.424,509,1.866,534,3.134,540,2.777,542,1.104,544,1.415,548,1.773,549,2.084,550,3.424,551,2.084,552,2.084,553,2.084,554,2.777,555,2.084,556,3.264,557,2.084,558,1.773,559,2.084,560,3.264,561,3.264,562,3.264,563,2.777,564,2.777,565,3.264,566,2.084,567,2.084,568,2.084,569,2.084,570,1.773,571,2.084,572,2.084,573,1.773,574,2.084,575,2.084,576,1.773,577,2.084,578,2.217,579,2.084,580,2.084,581,1.773,582,2.084,583,2.084,584,2.084]],["title/classes/GenerateTokenProvider.html",[50,0.011,162,2.197]],["body/classes/GenerateTokenProvider.html",[3,0.295,4,0.265,5,0.265,8,0.325,9,1.613,10,2.073,12,2.204,14,2.204,15,2.982,16,5.378,17,4.633,18,4.978,19,0.824,21,1.95,22,0.023,23,1.199,24,0.654,25,1.433,30,1.114,35,0.877,37,0.702,38,2.38,41,0.732,42,2.38,43,2.638,44,2.982,45,2.175,49,0.295,50,0.011,52,1.713,53,2.982,63,4.978,64,1.419,70,0.828,74,0.015,75,0.015,84,2.982,85,1.182,162,2.968,183,2.509,254,2.004,585,4.633,586,2.982,587,4.784,588,3.505,589,4.784,590,5.851,591,3.505,592,4.784,593,3.505,594,3.505,595,3.505,596,3.505,597,3.505,598,3.505]],["title/classes/GlobalHttpExceptionFilter.html",[50,0.011,599,2.665]],["body/classes/GlobalHttpExceptionFilter.html",[3,0.291,4,0.262,5,0.262,8,0.321,9,1.599,19,0.596,21,1.239,22,0.023,23,0.867,24,0.415,25,1.036,30,1.099,35,0.557,37,0.569,41,0.723,46,2.147,49,0.291,50,0.011,51,3.568,54,1.622,68,3.327,69,2.512,70,0.817,74,0.015,75,0.015,85,1.167,292,2.681,479,2.944,505,2.944,576,2.944,599,3.568,600,4.034,601,4.034,602,2.944,603,5.409,604,4.742,605,5.409,606,5.819,607,3.46,608,5.409,609,5.409,610,4.742,611,2.944,612,3.46,613,3.46,614,3.46,615,4.742,616,3.46,617,3.46,618,5.409,619,3.46,620,3.46,621,3.46,622,2.944,623,3.46,624,3.46,625,3.46,626,3.46,627,3.46,628,3.46]],["title/interfaces/IMcqQuestion.html",[76,1.876,629,2.405]],["body/interfaces/IMcqQuestion.html",[3,0.328,4,0.295,5,0.295,8,0.361,22,0.023,24,0.783,35,1.154,49,0.432,54,1.038,74,0.016,75,0.016,76,2.066,78,2.648,82,1.451,629,3.903,630,2.648,631,2.934,632,5.401,633,4.777,634,5.401,635,3.939,636,5.401,637,3.939,638,2.648,639,2.934]],["title/interfaces/IStudent.html",[76,1.876,640,2.405]],["body/interfaces/IStudent.html",[3,0.387,4,0.348,5,0.348,8,0.426,22,0.022,24,0.686,35,1.097,49,0.48,54,1.224,74,0.018,75,0.018,76,2.438,78,3.125,82,1.613,639,3.463,640,4.219,641,3.463,642,5.027,643,5.684,644,3.125]],["title/classes/LoginDto.html",[50,0.011,251,2.197]],["body/classes/LoginDto.html",[3,0.324,4,0.292,5,0.292,8,0.357,19,0.879,22,0.022,24,0.612,35,0.98,37,0.463,49,0.324,50,0.016,74,0.016,75,0.016,82,1.44,83,3.268,85,1.301,87,4.302,88,1.827,251,3.165,292,2.351,331,3.282,335,3.282,336,5.175,339,4.341,340,4.341,341,4.341,342,5.53,343,4.341,344,3.465,345,4.341,346,4.341,348,4.341,349,3.547,350,3.547,351,3.282,352,2.903,353,2.205,355,3.282,356,3.282,645,3.282,646,3.858,647,5.102,648,5.102,649,3.858]],["title/classes/Mcq.html",[50,0.011,378,1.348]],["body/classes/Mcq.html",[3,0.388,4,0.35,5,0.35,8,0.428,19,1.073,22,0.022,24,0.747,35,1.098,49,0.388,50,0.014,74,0.018,75,0.018,82,1.617,85,1.559,378,2.18,635,3.862,637,3.862,650,3.932,651,4.684,652,4.621,653,4.621,654,4.621]],["title/classes/McqExam.html",[50,0.011,415,1.747]],["body/classes/McqExam.html",[3,0.25,4,0.225,5,0.225,8,0.275,19,0.993,22,0.023,24,0.759,25,1.276,35,0.877,36,2.018,37,0.653,49,0.419,50,0.009,54,0.791,70,0.702,71,2.405,74,0.014,75,0.014,82,1.203,85,1.002,88,2.064,89,3.384,95,3.721,96,2.102,97,1.844,98,0.944,99,2.436,101,1.726,107,1.844,108,1.844,109,1.844,110,1.844,111,1.844,112,2.644,113,1.844,114,2.644,115,1.574,116,3.091,263,1.699,344,2.894,375,1.844,378,1.131,380,4.239,381,4.239,382,4.239,383,4.291,415,2.102,416,1.699,470,2.236,473,2.528,476,2.528,480,2.528,538,1.844,542,2.884,543,1.844,544,2.018,578,3.384,655,3.721,656,2.018,657,2.972,658,2.972,659,2.972,660,2.972,661,2.972,662,2.972,663,2.528]],["title/classes/McqQuestion.html",[50,0.011,542,1.876]],["body/classes/McqQuestion.html",[3,0.289,4,0.26,5,0.26,8,0.318,19,0.929,22,0.023,24,0.73,35,1.037,36,2.334,37,0.567,49,0.453,50,0.011,54,0.915,70,0.812,71,2.561,74,0.015,75,0.015,82,1.333,85,1.159,88,1.931,89,3.206,90,3.552,95,3.601,96,2.329,97,2.133,98,1.092,99,2.699,101,1.392,107,2.133,108,2.133,109,2.133,110,2.133,111,2.133,112,2.929,113,2.133,114,2.929,115,1.821,116,3.601,470,2.587,542,2.501,543,2.133,635,3.345,637,3.345,651,4.057,655,3.601,664,2.334,665,3.438,666,3.438,667,3.438,668,2.334,669,2.925]],["title/classes/Student.html",[50,0.011,447,1.747]],["body/classes/Student.html",[3,0.31,4,0.279,5,0.279,8,0.518,19,0.853,22,0.023,24,0.671,35,0.962,37,0.594,49,0.47,50,0.012,54,0.981,70,0.87,71,2.596,74,0.016,75,0.016,82,1.397,85,1.243,88,1.772,89,3.361,90,3.724,95,3.467,96,2.441,97,2.287,98,1.171,99,2.829,101,1.493,107,2.287,108,2.287,109,2.287,110,2.287,111,2.287,112,3.071,113,2.287,114,3.071,115,1.953,116,3.071,447,2.441,642,4.205,670,2.503,671,4.754,672,3.686,673,3.686,674,2.503,675,2.503,676,3.136]],["title/controllers/StudentController.html",[128,1.434,677,2.405]],["body/controllers/StudentController.html",[3,0.431,4,0.388,5,0.388,22,0.022,37,0.616,41,1.071,49,0.431,50,0.016,74,0.019,75,0.019,128,2.077,130,2.213,132,3.483,447,2.53,677,4.144,678,4.364,679,5.129]],["title/modules/StudentModule.html",[140,1.632,217,2.024]],["body/modules/StudentModule.html",[3,0.322,4,0.29,5,0.29,22,0.023,23,0.96,37,0.758,41,0.8,49,0.322,50,0.012,74,0.016,75,0.016,96,1.889,98,1.217,130,2.191,140,2.625,142,2.029,143,2.029,144,2.376,145,2.376,146,2.029,147,3.534,148,3.534,152,3.151,153,2.376,154,2.029,160,2.601,174,2.601,175,2.882,217,3.783,405,3.984,447,1.889,675,3.448,677,3.868,680,3.259,681,3.259,682,3.259,683,3.83,684,3.83,685,3.83,686,3.259,687,3.83]],["title/injectables/StudentService.html",[39,1,405,2.024]],["body/injectables/StudentService.html",[3,0.219,4,0.198,5,0.198,8,0.242,9,1.308,10,1.76,12,1.786,14,1.786,19,0.668,21,1.388,22,0.023,23,0.972,24,0.465,25,1.161,30,0.83,31,2.405,35,0.421,37,0.688,39,1.095,41,0.545,49,0.219,50,0.008,52,1.388,54,1.455,56,2.221,60,1.288,61,1.127,62,1.62,64,2.321,68,1.492,69,1.383,70,0.616,71,0.994,74,0.012,75,0.012,98,0.83,101,1.057,103,2.917,181,1.288,183,2.131,187,3.176,195,1.62,294,1.773,404,4.029,405,2.216,410,3.141,411,2.87,420,2.917,428,2.917,429,1.964,430,1.964,431,2.221,432,3.48,438,2.221,439,2.221,442,1.964,444,1.964,445,1.964,447,2.525,448,1.773,449,1.964,455,1.964,457,1.964,461,1.964,464,1.964,465,1.964,573,2.221,640,1.773,644,2.633,671,3.298,674,1.773,686,2.221,688,2.221,689,4.625,690,2.61,691,2.61,692,3.877,693,2.61,694,2.61,695,2.633,696,1.773,697,2.221,698,2.61,699,2.61,700,4.625,701,1.964,702,2.61,703,3.877,704,2.61,705,2.61,706,2.61,707,2.61,708,2.61,709,3.877,710,2.61,711,2.61,712,2.61,713,2.61,714,2.61,715,2.61,716,2.61,717,2.61,718,2.221,719,2.221]],["title/classes/UpdateMcqExamParamDto.html",[50,0.011,494,2.405]],["body/classes/UpdateMcqExamParamDto.html",[3,0.388,4,0.35,5,0.35,8,0.428,19,0.796,22,0.022,24,0.555,35,0.923,37,0.555,49,0.388,50,0.018,74,0.018,75,0.018,82,1.617,85,1.559,88,1.655,349,3.554,350,3.554,353,2.642,359,3.035,362,3.298,369,3.477,378,2.18,494,3.89,720,4.873,721,3.932,722,4.621]],["title/injectables/UpdateMcqExamProvider.html",[39,1,534,2.024]],["body/injectables/UpdateMcqExamProvider.html",[3,0.185,4,0.166,5,0.166,8,0.204,9,1.148,10,1.585,12,2.471,14,1.568,19,0.718,21,1.491,22,0.023,23,1.044,24,0.5,25,1.247,30,1.082,35,0.671,37,0.694,39,0.961,41,0.459,49,0.185,50,0.007,52,1.491,54,1.488,60,2.054,61,1.797,62,1.364,64,2.265,68,1.257,69,1.165,70,0.804,71,0.837,74,0.011,75,0.011,98,0.699,101,0.89,103,1.655,181,1.085,183,1.919,187,3.47,195,1.364,254,1.257,273,1.655,274,1.946,275,1.257,276,1.493,281,1.493,292,1.013,359,2.484,362,1.165,378,1.785,401,1.655,404,3.798,411,2.584,413,2.561,415,1.085,416,1.257,417,2.311,418,1.493,420,2.561,426,1.655,428,2.561,429,1.655,430,1.655,436,1.655,442,3.134,444,1.655,445,1.655,448,1.493,449,1.655,455,1.655,457,1.655,459,1.871,461,1.655,464,1.655,465,1.655,486,2.561,495,3.528,534,1.946,538,2.584,542,1.165,544,1.493,550,2.896,554,2.896,558,1.871,570,1.871,578,1.493,629,3.184,630,1.493,635,2.112,637,2.112,638,2.311,651,1.655,668,1.493,695,2.311,696,1.493,697,1.871,701,1.655,718,1.871,719,1.871,723,3.989,724,3.404,725,2.199,726,2.199,727,3.404,728,2.199,729,3.404,730,2.199,731,2.199,732,2.199,733,2.199,734,2.199,735,2.199,736,2.199,737,2.199,738,2.199,739,2.199,740,2.199,741,2.199,742,2.199,743,2.199,744,2.199,745,2.199,746,2.199,747,2.199,748,2.199,749,2.199,750,2.199,751,2.199,752,2.199,753,2.199,754,2.199,755,2.199]],["title/coverage.html",[756,3.625]],["body/coverage.html",[0,2.38,1,1.242,5,0.152,6,1.703,7,1.703,22,0.023,24,0.619,39,1.525,47,1.507,50,0.019,61,0.864,74,0.01,75,0.01,76,2.078,77,1.36,79,1.703,80,1.676,81,1.703,86,2.663,106,1.36,117,1.36,120,3.336,128,1.965,129,1.36,131,1.703,136,1.061,146,1.061,151,1.144,156,1.36,162,1.242,172,1.36,182,1.703,191,1.36,205,1.36,206,1.703,209,1.144,218,1.507,230,1.507,243,1.703,247,1.703,248,1.36,251,1.242,269,1.703,274,1.144,275,1.144,295,1.703,306,1.507,329,1.703,330,1.703,357,1.36,358,2.38,359,1.676,360,1.703,377,1.144,378,1.696,379,1.703,399,1.144,400,1.703,401,2.38,405,1.144,415,0.988,416,1.144,422,1.242,423,1.36,436,5.37,447,0.988,466,2.663,467,2.663,481,1.36,483,1.36,484,1.703,494,1.36,509,1.144,534,1.144,538,1.242,542,1.061,543,1.242,548,1.703,585,1.703,586,1.703,599,1.507,600,1.703,601,1.703,602,1.703,629,1.36,630,2.148,631,2.38,638,1.36,640,1.36,641,2.38,644,1.36,645,1.703,650,1.703,655,3.2,656,2.663,664,2.663,668,1.36,670,2.663,674,1.36,675,1.36,677,1.36,678,1.703,688,1.703,695,1.36,696,1.36,720,1.703,721,1.703,723,1.703,756,1.507,757,1.507,758,2.002,759,2.002,760,6.691,761,4.851,762,2.691,763,6.122,764,1.703,765,1.703,766,1.703,767,1.703,768,5.4,769,5.598,770,3.921,771,4.851,772,4.455,773,1.703,774,2.002,775,1.703,776,1.703,777,2.002,778,2.002]],["title/dependencies.html",[143,2.254,779,2.523]],["body/dependencies.html",[22,0.023,41,0.929,42,3.021,45,2.76,46,2.76,50,0.017,74,0.018,75,0.018,98,1.414,101,1.802,102,3.348,105,3.785,143,2.357,171,3.348,304,3.785,353,2.543,513,3.785,563,3.785,780,6.118,781,4.449,782,4.449,783,4.449,784,4.449,785,4.449,786,4.449,787,4.449,788,4.449,789,4.449,790,4.449,791,4.449,792,4.449,793,4.449,794,4.449,795,4.449,796,4.449]],["title/miscellaneous/enumerations.html",[797,1.463,798,3.62]],["body/miscellaneous/enumerations.html",[8,0.432,22,0.022,74,0.018,75,0.018,261,3.573,371,3.91,378,2.192,383,3.91,398,4.899,415,2.841,515,3.966,797,2.299,798,3.966,799,4.661,800,6.527,801,4.333,802,5.759,803,4.661,804,4.661,805,5.759,806,5.553,807,5.759]],["title/miscellaneous/functions.html",[797,1.463,808,3.62]],["body/miscellaneous/functions.html",[8,0.421,21,2.03,22,0.022,23,1.421,24,0.545,25,1.697,30,1.444,35,0.913,74,0.018,75,0.018,146,3.273,201,3.865,274,3.24,275,2.597,292,2.611,294,3.849,695,3.849,696,3.085,701,3.419,773,3.865,775,4.822,776,4.822,797,2.241,808,3.865,809,4.543,810,4.543,811,4.543,812,4.543,813,5.667,814,4.543]],["title/index.html",[8,0.275,815,2.523,816,2.523]],["body/index.html",[4,0.227,22,0.022,74,0.014,75,0.014,154,2.895,321,2.549,578,2.035,581,2.549,622,2.549,756,2.255,757,2.255,817,2.997,818,2.997,819,5.006,820,2.997,821,2.997,822,2.997,823,2.997,824,2.997,825,2.549,826,5.006,827,2.997,828,2.997,829,2.997,830,5.464,831,5.006,832,6.192,833,2.997,834,6.192,835,2.997,836,2.997,837,2.997,838,4.287,839,2.997,840,2.997,841,2.997,842,5.006,843,2.997,844,4.287,845,2.997,846,2.997,847,2.997,848,5.464,849,2.997,850,2.997,851,2.997,852,2.997,853,2.997,854,5.464,855,4.287,856,2.997,857,5.006,858,4.649,859,4.287,860,2.997,861,2.997,862,2.997,863,2.997,864,2.997,865,2.997,866,5.006,867,2.997,868,2.997,869,2.997,870,4.287,871,2.997,872,2.997,873,2.997,874,5.006,875,2.997,876,2.997,877,2.997,878,2.997,879,2.997,880,2.997,881,2.997,882,4.287,883,2.997,884,2.997,885,2.997,886,2.997,887,2.997,888,4.287,889,2.997,890,2.997,891,2.997,892,3.647,893,4.287,894,2.997,895,2.997,896,2.997,897,2.997,898,2.997,899,2.997,900,2.997,901,2.997,902,2.997,903,2.997,904,2.997,905,2.549,906,2.997,907,2.997,908,2.997,909,2.997,910,2.997,911,2.997,912,2.035]],["title/license.html",[815,2.523,816,2.523,912,2.014]],["body/license.html",[22,0.016,46,2.343,74,0.016,75,0.016,154,2.001,404,2.564,564,3.213,633,2.842,757,2.842,892,3.213,912,2.564,913,5.656,914,3.776,915,3.776,916,3.776,917,5.03,918,3.776,919,3.776,920,3.776,921,3.776,922,3.776,923,3.776,924,5.03,925,6.782,926,3.776,927,3.776,928,5.656,929,3.776,930,5.03,931,3.776,932,3.776,933,5.03,934,3.776,935,3.776,936,3.776,937,3.776,938,3.776,939,3.776,940,3.776,941,5.03,942,3.776,943,3.776,944,3.776,945,3.776,946,3.776,947,3.776,948,3.776,949,5.03,950,5.03,951,3.776,952,3.776,953,3.776,954,3.776,955,3.776,956,3.776,957,3.776,958,3.776,959,3.776,960,3.776,961,3.776,962,3.776,963,3.776,964,3.776,965,3.776,966,3.776,967,3.776,968,3.776,969,3.776,970,3.776,971,3.776,972,3.776,973,3.776,974,3.776,975,3.776,976,3.776,977,3.776,978,3.776]],["title/modules.html",[142,2.552]],["body/modules.html",[22,0.019,74,0.019,75,0.019,141,3.137,142,2.679,212,3.434,216,3.137,217,2.891,858,5.709,979,6.71,980,6.71,981,6.71]],["title/overview.html",[982,4.099]],["body/overview.html",[2,2.717,22,0.022,74,0.016,75,0.016,78,2.452,85,1.218,130,1.558,136,2.93,140,1.664,141,4.045,142,1.913,143,1.913,144,2.241,145,2.241,146,1.913,147,2.241,148,2.241,149,3.072,150,3.072,151,3.161,152,3.029,153,2.241,154,1.913,181,1.781,209,3.161,212,4.613,213,3.072,214,3.072,215,3.072,216,4.253,217,3.727,399,3.161,405,3.727,509,3.161,529,3.072,531,3.072,532,3.072,534,3.161,680,3.072,681,3.072,682,3.072,982,3.072,983,3.611,984,3.611,985,3.611,986,3.611,987,3.611]],["title/properties.html",[82,1.201,779,2.523]],["body/properties.html",[22,0.022,74,0.02,75,0.02,82,1.498,825,4.515,905,4.515,912,3.603,988,5.306,989,5.306,990,5.306]],["title/miscellaneous/typealiases.html",[797,1.463,991,4.255]],["body/miscellaneous/typealiases.html",[8,0.439,22,0.019,24,0.569,74,0.019,75,0.019,86,3.221,99,3.852,106,3.953,416,3.328,423,3.953,466,3.221,467,3.953,655,3.612,656,3.953,664,3.953,668,3.953,670,3.221,674,3.953,797,2.34,801,3.57,992,4.744,993,4.036,994,4.952,995,4.036]],["title/miscellaneous/variables.html",[797,1.463,996,3.62]],["body/miscellaneous/variables.html",[8,0.285,22,0.023,24,0.663,27,2.313,33,2.615,35,0.703,47,3.285,54,1.162,67,2.615,70,0.726,74,0.014,75,0.014,77,2.965,86,2.087,117,2.965,118,2.615,199,3.82,218,2.313,230,3.285,231,2.615,248,2.965,261,2.709,306,3.285,311,3.714,320,5.716,466,2.087,467,2.965,481,2.965,482,2.615,538,2.709,543,2.709,611,2.615,630,2.087,631,3.285,632,2.615,633,2.313,634,2.615,635,1.907,636,2.615,637,1.907,638,2.965,639,2.313,641,2.313,642,2.313,643,2.615,644,2.965,655,2.709,656,2.965,663,2.615,664,2.965,669,2.615,670,2.087,675,2.965,676,2.615,762,2.615,764,2.615,765,3.714,766,3.714,767,2.615,797,1.516,801,2.313,806,5.716,993,2.615,994,4.319,995,2.615,996,2.615,997,3.074,998,3.074,999,4.366,1000,3.074,1001,3.074,1002,3.074,1003,4.366,1004,3.074,1005,3.074,1006,3.074]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":436,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":989,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["0.18.5",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":986,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":529,"title":{},"body":{"controllers/ExamController.html":{},"overview.html":{}}}],["2025",{"_index":914,"title":{},"body":{"license.html":{}}}],["3",{"_index":987,"title":{},"body":{"overview.html":{}}}],["4",{"_index":983,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":984,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":985,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["8.13.2",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["_id",{"_index":573,"title":{},"body":{"injectables/ExamService.html":{},"injectables/StudentService.html":{}}}],["above",{"_index":948,"title":{},"body":{"license.html":{}}}],["access",{"_index":305,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["accesstoken",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["action",{"_index":973,"title":{},"body":{"license.html":{}}}],["activeadmin",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeadmindata",{"_index":77,"title":{"interfaces/ActiveAdminData.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":580,"title":{},"body":{"injectables/ExamService.html":{}}}],["admin",{"_index":80,"title":{"classes/Admin.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["admin.controller",{"_index":157,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.decorator.ts",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin.dto",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["admin.dto.ts:13",{"_index":334,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:18",{"_index":332,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:27",{"_index":347,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.name",{"_index":176,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["admincontroller",{"_index":129,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["admindocument",{"_index":106,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["adminid",{"_index":592,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["adminmodel",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminmodule",{"_index":141,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminschema",{"_index":117,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminschema.pre('save",{"_index":119,"title":{},"body":{"classes/Admin.html":{}}}],["adminservice",{"_index":136,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["affected",{"_index":707,"title":{},"body":{"injectables/StudentService.html":{}}}],["affectedmatricnos",{"_index":709,"title":{},"body":{"injectables/StudentService.html":{}}}],["affectedstudents",{"_index":712,"title":{},"body":{"injectables/StudentService.html":{}}}],["affectedstudents.map((s",{"_index":716,"title":{},"body":{"injectables/StudentService.html":{}}}],["ai",{"_index":582,"title":{},"body":{"injectables/ExamService.html":{}}}],["alias",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":565,"title":{},"body":{"injectables/ExamService.html":{}}}],["amazing",{"_index":898,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":939,"title":{},"body":{"license.html":{}}}],["answer",{"_index":635,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":170,"title":{},"body":{"modules/AdminModule.html":{}}}],["appconfig",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":205,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":870,"title":{},"body":{"index.html":{}}}],["application/vnd.openxmlformats",{"_index":560,"title":{},"body":{"injectables/ExamService.html":{}}}],["applications",{"_index":824,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":212,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":209,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":606,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["arising",{"_index":977,"title":{},"body":{"license.html":{}}}],["array",{"_index":317,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["array.isarray(exceptionresponse?.message",{"_index":624,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["assigment.schema",{"_index":425,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{}}}],["assigment.schema.ts",{"_index":467,"title":{},"body":{"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["assigment.schema.ts:22",{"_index":472,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:25",{"_index":474,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:28",{"_index":477,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:31",{"_index":475,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:34",{"_index":468,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assign",{"_index":584,"title":{},"body":{"injectables/ExamService.html":{}}}],["assignment.dto",{"_index":421,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["assignment.dto.ts",{"_index":360,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"coverage.html":{}}}],["assignment.dto.ts:11",{"_index":374,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:15",{"_index":372,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:18",{"_index":373,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:21",{"_index":368,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:7",{"_index":370,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["associated",{"_index":926,"title":{},"body":{"license.html":{}}}],["async",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["auth",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["auth/auth.controller",{"_index":158,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/config/jwt.config",{"_index":166,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/guards/access",{"_index":168,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/guards/authentication.guard",{"_index":173,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/providers/auth.service",{"_index":159,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/providers/generate",{"_index":163,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth_type_key",{"_index":306,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":156,"title":{"controllers/AuthController.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["authenticationguard",{"_index":172,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":315,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["author",{"_index":905,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":966,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":151,"title":{"injectables/AuthService.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ExamController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":307,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":310,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguidemap",{"_index":296,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":311,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":318,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["await",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["b",{"_index":632,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":899,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":413,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["badrequestexception('error",{"_index":462,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["badrequestexception('no",{"_index":437,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["badrequestexception('only",{"_index":562,"title":{},"body":{"injectables/ExamService.html":{}}}],["badrequestexception('questions",{"_index":734,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["bcrypt",{"_index":102,"title":{},"body":{"classes/Admin.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt(10",{"_index":123,"title":{},"body":{"classes/Admin.html":{}}}],["bcrypt.hash(this.password",{"_index":125,"title":{},"body":{"classes/Admin.html":{}}}],["bearer",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["board",{"_index":891,"title":{},"body":{"index.html":{}}}],["body",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":981,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":979,"title":{},"body":{"modules.html":{}}}],["building",{"_index":820,"title":{},"body":{"index.html":{}}}],["c",{"_index":633,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/CreateExamProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["catch((err",{"_index":327,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["catch(exception",{"_index":604,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["channel",{"_index":861,"title":{},"body":{"index.html":{}}}],["character",{"_index":346,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["characters",{"_index":341,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["charge",{"_index":921,"title":{},"body":{"license.html":{}}}],["check",{"_index":848,"title":{},"body":{"index.html":{}}}],["claim",{"_index":969,"title":{},"body":{"license.html":{}}}],["class",{"_index":50,"title":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/ExamAssignment.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/ExamAssignment.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_adminmodule",{"_index":149,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":150,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_exammodule",{"_index":531,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_exammodule_imports",{"_index":533,"title":{},"body":{"modules/ExamModule.html":{}}}],["cluster_exammodule_providers",{"_index":532,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_studentmodule",{"_index":680,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_exports",{"_index":681,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_providers",{"_index":682,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["collapsemcqlist",{"_index":745,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["collapsemcqlist.map((item",{"_index":753,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["come",{"_index":851,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":947,"title":{},"body":{"license.html":{}}}],["config/app.config",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["config/environment.validation",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["configmodule",{"_index":167,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":177,"title":{},"body":{"modules/AdminModule.html":{}}}],["configmodule.forroot",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.uri",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["connection",{"_index":404,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"license.html":{}}}],["console.error(error",{"_index":460,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["console.log(env",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/variables.html":{}}}],["constants/auth.constants",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["constructor(adminmodel",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(connection",{"_index":403,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["constructor(createexamprovider",{"_index":549,"title":{},"body":{"injectables/ExamService.html":{}}}],["constructor(jwtservice",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["constructor(mcqquestionmodel",{"_index":725,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["constructor(reflector",{"_index":299,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(studentmodel",{"_index":690,"title":{},"body":{"injectables/StudentService.html":{}}}],["context",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":314,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":313,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["contract",{"_index":974,"title":{},"body":{"license.html":{}}}],["controller",{"_index":128,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('exam",{"_index":516,"title":{},"body":{"controllers/ExamController.html":{}}}],["controller('student",{"_index":679,"title":{},"body":{"controllers/StudentController.html":{}}}],["controllers",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["copies",{"_index":941,"title":{},"body":{"license.html":{}}}],["copy",{"_index":924,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":913,"title":{},"body":{"license.html":{}}}],["correct",{"_index":634,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["coursecode",{"_index":380,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/McqExam.html":{}}}],["coursename",{"_index":381,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/McqExam.html":{}}}],["courses",{"_index":868,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":756,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":316,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{}}}],["createadmin",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(createadmindto",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmindto",{"_index":191,"title":{"classes/CreateAdminDto.html":{}},"body":{"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["created",{"_index":458,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["createexam",{"_index":402,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["createexam(createexamdto",{"_index":409,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["createexamassignmentdto",{"_index":357,"title":{"classes/CreateExamAssignmentDto.html":{}},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"coverage.html":{}}}],["createexamdto",{"_index":377,"title":{"classes/CreateExamDto.html":{}},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"coverage.html":{}}}],["createexamdto.examtype",{"_index":451,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["createexamprovider",{"_index":399,"title":{"injectables/CreateExamProvider.html":{}},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"coverage.html":{},"overview.html":{}}}],["createparamdecorator",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":463,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["credentials",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":611,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":613,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":636,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":970,"title":{},"body":{"license.html":{}}}],["data",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{}}}],["data.interface.ts",{"_index":81,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{}}}],["database",{"_index":433,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["databaseconfig",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":366,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["deal",{"_index":927,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":978,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["decorators",{"_index":88,"title":{},"body":{"classes/Admin.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"classes/LoginDto.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["decorators/auth.decorator",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":863,"title":{},"body":{"index.html":{}}}],["default",{"_index":320,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":298,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["delete",{"_index":115,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["delete('mcq/:examid",{"_index":524,"title":{},"body":{"controllers/ExamController.html":{}}}],["deleted",{"_index":579,"title":{},"body":{"injectables/ExamService.html":{}}}],["deletemcqexam",{"_index":485,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["deletemcqexam(@param('examid",{"_index":525,"title":{},"body":{"controllers/ExamController.html":{}}}],["deletemcqexam(examid",{"_index":490,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["dependencies",{"_index":143,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":825,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":835,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":876,"title":{},"body":{"index.html":{}}}],["discord",{"_index":860,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":937,"title":{},"body":{"license.html":{}}}],["dive",{"_index":862,"title":{},"body":{"index.html":{}}}],["doc",{"_index":111,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["documentation",{"_index":757,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dtos/create",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["dtos/login.dto",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/update",{"_index":507,"title":{},"body":{"controllers/ExamController.html":{}}}],["duration",{"_index":382,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/McqExam.html":{}}}],["e2e",{"_index":845,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":821,"title":{},"body":{"index.html":{}}}],["eight",{"_index":340,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["email",{"_index":83,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["empty",{"_index":735,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["endtime",{"_index":361,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["enterprise",{"_index":881,"title":{},"body":{"index.html":{}}}],["enum",{"_index":473,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/McqExam.html":{}}}],["enumerations",{"_index":798,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/auth",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["enums/exam",{"_index":375,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{}}}],["env",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["environmentvalidation",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":328,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["error",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["error.message",{"_index":718,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["event",{"_index":965,"title":{},"body":{"license.html":{}}}],["exam",{"_index":359,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["exam._id",{"_index":446,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam._id.tostring",{"_index":450,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.controller",{"_index":536,"title":{},"body":{"modules/ExamModule.html":{}}}],["exam.dto",{"_index":414,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["exam.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateExamDto.html":{},"coverage.html":{}}}],["exam.dto.ts:12",{"_index":385,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:17",{"_index":388,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:21",{"_index":391,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:7",{"_index":386,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.provider",{"_index":540,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{}}}],["exam.provider.ts",{"_index":401,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["exam.provider.ts:17",{"_index":408,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.provider.ts:22",{"_index":726,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.provider.ts:32",{"_index":412,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.provider.ts:34",{"_index":730,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.provider.ts:79",{"_index":728,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.questions",{"_index":574,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.questions.push(...insertedquestionids",{"_index":741,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.questions?.length",{"_index":571,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.save",{"_index":441,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.save({session",{"_index":742,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.schema",{"_index":418,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["exam.schema.ts",{"_index":656,"title":{},"body":{"classes/McqExam.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["exam.schema.ts:21",{"_index":658,"title":{},"body":{"classes/McqExam.html":{}}}],["exam.schema.ts:24",{"_index":657,"title":{},"body":{"classes/McqExam.html":{}}}],["exam.schema.ts:27",{"_index":659,"title":{},"body":{"classes/McqExam.html":{}}}],["exam.schema.ts:30",{"_index":661,"title":{},"body":{"classes/McqExam.html":{}}}],["exam.schema.ts:33",{"_index":662,"title":{},"body":{"classes/McqExam.html":{}}}],["exam/exam.module",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["examassignment",{"_index":422,"title":{"classes/ExamAssignment.html":{}},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examassignment.name",{"_index":546,"title":{},"body":{"modules/ExamModule.html":{}}}],["examassignmentdocument",{"_index":423,"title":{},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["examassignmentmodel",{"_index":407,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examassignmentschema",{"_index":481,"title":{},"body":{"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examcontroller",{"_index":483,"title":{"controllers/ExamController.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examid",{"_index":362,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["exammodule",{"_index":216,"title":{"modules/ExamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules.html":{},"overview.html":{}}}],["example",{"_index":831,"title":{},"body":{"index.html":{}}}],["examschema",{"_index":363,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["examschemaenum",{"_index":371,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"miscellaneous/enumerations.html":{}}}],["examschemaenum.mcqexam",{"_index":453,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examschemaenum.theoryexam",{"_index":454,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examservice",{"_index":509,"title":{"injectables/ExamService.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"coverage.html":{},"overview.html":{}}}],["examtype",{"_index":383,"title":{},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/McqExam.html":{},"miscellaneous/enumerations.html":{}}}],["examtype.mcq",{"_index":452,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exception",{"_index":608,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":602,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":607,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":619,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":616,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.message",{"_index":620,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":603,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse",{"_index":618,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse.message[0",{"_index":625,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse?.message",{"_index":626,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exclude",{"_index":104,"title":{},"body":{"classes/Admin.html":{}}}],["executioncontext",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["expectedkeys",{"_index":813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["experience",{"_index":865,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":597,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["export",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["express",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ExamController.html":{},"classes/GlobalHttpExceptionFilter.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":411,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["extract",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/StudentService.html":{}}}],["extractrequestfromheader",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":719,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["false",{"_index":479,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["fetch",{"_index":706,"title":{},"body":{"injectables/StudentService.html":{}}}],["few",{"_index":849,"title":{},"body":{"index.html":{}}}],["field",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":511,"title":{},"body":{"controllers/ExamController.html":{}}}],["files",{"_index":564,"title":{},"body":{"injectables/ExamService.html":{},"license.html":{}}}],["filesinterceptor",{"_index":512,"title":{},"body":{"controllers/ExamController.html":{}}}],["filter",{"_index":445,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["filter((student",{"_index":702,"title":{},"body":{"injectables/StudentService.html":{}}}],["finally",{"_index":464,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["find",{"_index":714,"title":{},"body":{"injectables/StudentService.html":{}}}],["finduserbyemail",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["finduserbyemail(email",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{}}}],["fire",{"_index":323,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["fitness",{"_index":961,"title":{},"body":{"license.html":{}}}],["follow",{"_index":884,"title":{},"body":{"index.html":{}}}],["following",{"_index":946,"title":{},"body":{"license.html":{}}}],["found",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["framework",{"_index":819,"title":{},"body":{"index.html":{}}}],["free",{"_index":920,"title":{},"body":{"license.html":{}}}],["full",{"_index":880,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":642,"title":{},"body":{"interfaces/IStudent.html":{},"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":120,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{}}}],["functions",{"_index":808,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":944,"title":{},"body":{"license.html":{}}}],["generate",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokenprovider",{"_index":162,"title":{"classes/GenerateTokenProvider.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["gethello",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":815,"title":{"index.html":{},"license.html":{}},"body":{}}],["globalhttpexceptionfilter",{"_index":599,"title":{"classes/GlobalHttpExceptionFilter.html":{}},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["grading",{"_index":583,"title":{},"body":{"injectables/ExamService.html":{}}}],["granted",{"_index":919,"title":{},"body":{"license.html":{}}}],["graph",{"_index":871,"title":{},"body":{"index.html":{}}}],["grow",{"_index":895,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["hands",{"_index":864,"title":{},"body":{"index.html":{}}}],["handy",{"_index":852,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":127,"title":{},"body":{"classes/Admin.html":{}}}],["header",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["hello",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":878,"title":{},"body":{"index.html":{}}}],["here",{"_index":903,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":918,"title":{},"body":{"license.html":{}}}],["holders",{"_index":967,"title":{},"body":{"license.html":{}}}],["host",{"_index":605,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":612,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["http",{"_index":601,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["httpcode",{"_index":506,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.created",{"_index":517,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.created)@auth(authtype.none)@post()@useinterceptors(undefined",{"_index":488,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok",{"_index":520,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@delete('mcq/:examid",{"_index":491,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@patch('mcq/:examid')@useinterceptors(undefined",{"_index":496,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@patch('oe/:examid')@useinterceptors(undefined",{"_index":501,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpexception",{"_index":609,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":909,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":505,"title":{},"body":{"controllers/ExamController.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":617,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["hydrateddocument",{"_index":99,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":708,"title":{},"body":{"injectables/StudentService.html":{}}}],["imcqquestion",{"_index":629,"title":{"interfaces/IMcqQuestion.html":{}},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["imcqquestionexpectedkeys",{"_index":638,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["implied",{"_index":957,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["imports",{"_index":174,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["included",{"_index":951,"title":{},"body":{"license.html":{}}}],["including",{"_index":930,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["inject",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateExamProvider.html":{},"classes/GenerateTokenProvider.html":{}}}],["inject(jwtconfig.key",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"overview.html":{}}}],["injectconnection",{"_index":420,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["injectmodel",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["injectmodel(admin.name",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel(examassignment.name",{"_index":427,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["injectmodel(mcqexam.name",{"_index":426,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["injectmodel(mcqquestion.name",{"_index":558,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["injectmodel(student.name",{"_index":699,"title":{},"body":{"injectables/StudentService.html":{}}}],["insert",{"_index":431,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["insertedquestionids",{"_index":739,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["insertedstudentids",{"_index":700,"title":{},"body":{"injectables/StudentService.html":{}}}],["insertstudents",{"_index":689,"title":{},"body":{"injectables/StudentService.html":{}}}],["insertstudents(tutoriallist",{"_index":693,"title":{},"body":{"injectables/StudentService.html":{}}}],["installcompile",{"_index":833,"title":{},"body":{"index.html":{}}}],["instance",{"_index":324,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instance.canactivate(context",{"_index":326,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instanceof",{"_index":615,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["interact",{"_index":872,"title":{},"body":{"index.html":{}}}],["interface",{"_index":76,"title":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"coverage.html":{}}}],["interfaces",{"_index":78,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"overview.html":{}}}],["internal",{"_index":621,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["internalservererrorexception",{"_index":103,"title":{},"body":{"classes/Admin.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["internalservererrorexception('error",{"_index":126,"title":{},"body":{"classes/Admin.html":{}}}],["isdate",{"_index":367,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["isemail",{"_index":348,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isnotempty()@isstring",{"_index":331,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isenum",{"_index":392,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isenum(examtype",{"_index":389,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isglobal",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":393,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isint()@isnotempty()@min(10",{"_index":387,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isnotempty",{"_index":349,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["ispasswordvalid",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":350,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["isstring()@isnotempty",{"_index":369,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["isstring()@isnotempty()@minlength(3",{"_index":333,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["isstring()@isnotempty()@minlength(6",{"_index":384,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":335,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["istudent",{"_index":640,"title":{"interfaces/IStudent.html":{}},"body":{"interfaces/IStudent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["istudentexpectedkeys",{"_index":644,"title":{},"body":{"interfaces/IStudent.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":755,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["item.question",{"_index":754,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["job",{"_index":888,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":890,"title":{},"body":{"index.html":{}}}],["joi",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":901,"title":{},"body":{"index.html":{}}}],["jwtconfig",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"classes/GenerateTokenProvider.html":{}}}],["jwtconfiguration",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["jwtmodule",{"_index":165,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":178,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtservice",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["kamil",{"_index":906,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":639,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":956,"title":{},"body":{"license.html":{}}}],["learn",{"_index":856,"title":{},"body":{"index.html":{}}}],["legend",{"_index":144,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["letter",{"_index":343,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["liability",{"_index":971,"title":{},"body":{"license.html":{}}}],["liable",{"_index":968,"title":{},"body":{"license.html":{}}}],["license",{"_index":912,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":893,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":931,"title":{},"body":{"license.html":{}}}],["limited",{"_index":958,"title":{},"body":{"license.html":{}}}],["linkedin",{"_index":886,"title":{},"body":{"index.html":{}}}],["list",{"_index":439,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["load",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":251,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":887,"title":{},"body":{"index.html":{}}}],["loop",{"_index":321,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["map((student",{"_index":704,"title":{},"body":{"injectables/StudentService.html":{}}}],["matches",{"_index":351,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["matches(/^(?=.*[a",{"_index":356,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["matching",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matric",{"_index":643,"title":{},"body":{"interfaces/IStudent.html":{},"miscellaneous/variables.html":{}}}],["matricno",{"_index":671,"title":{},"body":{"classes/Student.html":{},"injectables/StudentService.html":{}}}],["mcq",{"_index":378,"title":{"classes/Mcq.html":{}},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mcq.a",{"_index":748,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.b",{"_index":749,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.c",{"_index":750,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.d",{"_index":751,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.question",{"_index":747,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq['correct",{"_index":752,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqexam",{"_index":415,"title":{"classes/McqExam.html":{}},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mcqexam.name",{"_index":545,"title":{},"body":{"modules/ExamModule.html":{}}}],["mcqexamdocument",{"_index":416,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mcqexammodel",{"_index":406,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{}}}],["mcqexamschema",{"_index":538,"title":{},"body":{"modules/ExamModule.html":{},"classes/McqExam.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mcqlist",{"_index":729,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqlist.length",{"_index":733,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqlist.map((mcq",{"_index":746,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqquestion",{"_index":542,"title":{"classes/McqQuestion.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["mcqquestion.name",{"_index":547,"title":{},"body":{"modules/ExamModule.html":{}}}],["mcqquestiondocument",{"_index":668,"title":{},"body":{"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mcqquestionmodel",{"_index":550,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["mcqquestionschema",{"_index":543,"title":{},"body":{"modules/ExamModule.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mcqtemplate",{"_index":495,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["mcqtemplate.mimetype",{"_index":567,"title":{},"body":{"injectables/ExamService.html":{}}}],["merchantability",{"_index":960,"title":{},"body":{"license.html":{}}}],["merge",{"_index":935,"title":{},"body":{"license.html":{}}}],["message",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["min",{"_index":394,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["min(10",{"_index":396,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["minimum",{"_index":339,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["minlength",{"_index":352,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{}}}],["minlength(3",{"_index":354,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["minlength(6",{"_index":395,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["minlength(8",{"_index":355,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["minutes",{"_index":397,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["miscellaneous",{"_index":797,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":892,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":838,"title":{},"body":{"index.html":{}}}],["model",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["modify",{"_index":934,"title":{},"body":{"license.html":{}}}],["module",{"_index":140,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["modules",{"_index":142,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":101,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":480,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/McqExam.html":{}}}],["mongoose.types.objectid",{"_index":469,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["mongoosemodule",{"_index":160,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["mongoosemodule.forfeature",{"_index":175,"title":{},"body":{"modules/AdminModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":857,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":907,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":877,"title":{},"body":{"index.html":{}}}],["nest",{"_index":826,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":911,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":854,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/GenerateTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":171,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"classes/GenerateTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":98,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":513,"title":{},"body":{"controllers/ExamController.html":{},"dependencies.html":{}}}],["new",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["newadmin",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{}}}],["newadmin.save",{"_index":204,"title":{},"body":{"injectables/AdminService.html":{}}}],["node.js",{"_index":818,"title":{},"body":{"index.html":{}}}],["none",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":964,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["notfoundexception('exam",{"_index":570,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["notfoundexception('user",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["notice",{"_index":949,"title":{},"body":{"license.html":{}}}],["npm",{"_index":832,"title":{},"body":{"index.html":{}}}],["null",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":344,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/McqExam.html":{}}}],["object.values(result.upsertedids",{"_index":740,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["observable",{"_index":303,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["obtaining",{"_index":923,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":627,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["oe",{"_index":398,"title":{},"body":{"classes/CreateExamDto.html":{},"miscellaneous/enumerations.html":{}}}],["oe'})@isnotempty",{"_index":390,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["offer",{"_index":889,"title":{},"body":{"index.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":561,"title":{},"body":{"injectables/ExamService.html":{}}}],["official",{"_index":866,"title":{},"body":{"index.html":{}}}],["ojuri",{"_index":916,"title":{},"body":{"license.html":{}}}],["oluwafemi",{"_index":915,"title":{},"body":{"license.html":{}}}],["one",{"_index":342,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["open",{"_index":894,"title":{},"body":{"index.html":{}}}],["operations",{"_index":442,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["optional",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/McqExam.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":651,"title":{},"body":{"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["otherwise",{"_index":976,"title":{},"body":{"license.html":{}}}],["out",{"_index":154,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":982,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":779,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ExamController.html":{}}}],["param.dto",{"_index":508,"title":{},"body":{"controllers/ExamController.html":{}}}],["param.dto.ts",{"_index":721,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:6",{"_index":722,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":697,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["parser.ts",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsetemplate",{"_index":695,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsetemplate(template",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["part",{"_index":879,"title":{},"body":{"index.html":{}}}],["particular",{"_index":962,"title":{},"body":{"license.html":{}}}],["password",{"_index":87,"title":{},"body":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["patch",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ExamController.html":{}}}],["patch('mcq/:examid",{"_index":521,"title":{},"body":{"controllers/ExamController.html":{}}}],["patch('oe/:examid",{"_index":527,"title":{},"body":{"controllers/ExamController.html":{}}}],["payload",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["permission",{"_index":917,"title":{},"body":{"license.html":{}}}],["permit",{"_index":942,"title":{},"body":{"license.html":{}}}],["person",{"_index":922,"title":{},"body":{"license.html":{}}}],["persons",{"_index":943,"title":{},"body":{"license.html":{}}}],["please",{"_index":859,"title":{},"body":{"index.html":{}}}],["portions",{"_index":953,"title":{},"body":{"license.html":{}}}],["post",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["post()@auth(authtype.none)@useinterceptors(classserializerinterceptor",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["preparelistforbulkwrite",{"_index":724,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["preparelistforbulkwrite(mcqlist",{"_index":727,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["private",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["process.env.node_env",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":840,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":817,"title":{},"body":{"index.html":{}}}],["project",{"_index":830,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/StudentService.html":{}}}],["promise.resolve",{"_index":325,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["prop",{"_index":95,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["prop({enum",{"_index":660,"title":{},"body":{"classes/McqExam.html":{}}}],["prop({required",{"_index":89,"title":{},"body":{"classes/Admin.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["prop({type",{"_index":470,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{}}}],["properties",{"_index":82,"title":{"properties.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/ExamAssignment.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"properties.html":{}}}],["provide",{"_index":179,"title":{},"body":{"modules/AdminModule.html":{}}}],["provided",{"_index":954,"title":{},"body":{"license.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["providers/admin.service",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["providers/auth.service",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["providers/create",{"_index":539,"title":{},"body":{"modules/ExamModule.html":{}}}],["providers/exam.service",{"_index":510,"title":{},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{}}}],["providers/student.service",{"_index":685,"title":{},"body":{"modules/StudentModule.html":{}}}],["providers/update",{"_index":541,"title":{},"body":{"modules/ExamModule.html":{}}}],["public",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["publish",{"_index":936,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":963,"title":{},"body":{"license.html":{}}}],["question",{"_index":637,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/variables.html":{}}}],["question.interface",{"_index":731,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["question.interface.ts",{"_index":631,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["question.schema",{"_index":544,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["question.schema.ts",{"_index":664,"title":{},"body":{"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.schema.ts:19",{"_index":667,"title":{},"body":{"classes/McqQuestion.html":{}}}],["question.schema.ts:22",{"_index":666,"title":{},"body":{"classes/McqQuestion.html":{}}}],["question.schema.ts:25",{"_index":665,"title":{},"body":{"classes/McqQuestion.html":{}}}],["questions",{"_index":578,"title":{},"body":{"injectables/ExamService.html":{},"classes/McqExam.html":{},"injectables/UpdateMcqExamProvider.html":{},"index.html":{}}}],["read",{"_index":902,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["real",{"_index":873,"title":{},"body":{"index.html":{}}}],["record",{"_index":308,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["ref",{"_index":476,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/McqExam.html":{}}}],["reflect",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":300,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["refpath",{"_index":471,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["related",{"_index":577,"title":{},"body":{"injectables/ExamService.html":{}}}],["repository",{"_index":829,"title":{},"body":{"index.html":{}}}],["request",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":116,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["reset",{"_index":153,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["resources",{"_index":850,"title":{},"body":{"index.html":{}}}],["response",{"_index":610,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":628,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["restriction",{"_index":929,"title":{},"body":{"license.html":{}}}],["result",{"_index":737,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["results",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":112,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["ret._id",{"_index":114,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["ret.id",{"_index":113,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["return",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":932,"title":{},"body":{"license.html":{}}}],["run",{"_index":834,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":304,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["s._id.tostring",{"_index":717,"title":{},"body":{"injectables/StudentService.html":{}}}],["s['matric",{"_index":711,"title":{},"body":{"injectables/StudentService.html":{}}}],["salt",{"_index":122,"title":{},"body":{"classes/Admin.html":{}}}],["save",{"_index":744,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["scalable",{"_index":822,"title":{},"body":{"index.html":{}}}],["schema",{"_index":96,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"modules/StudentModule.html":{}}}],["schema.enum",{"_index":376,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["schema.enum.ts",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schemafactory",{"_index":97,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["schemafactory.createforclass(admin",{"_index":118,"title":{},"body":{"classes/Admin.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(examassignment",{"_index":482,"title":{},"body":{"classes/ExamAssignment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mcqexam",{"_index":663,"title":{},"body":{"classes/McqExam.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mcqquestion",{"_index":669,"title":{},"body":{"classes/McqQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":676,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemas/admin.schema",{"_index":161,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["schemas/exam",{"_index":424,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{}}}],["schemas/mcq",{"_index":417,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["schemas/student.schema",{"_index":686,"title":{},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["secret",{"_index":595,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["sell",{"_index":940,"title":{},"body":{"license.html":{}}}],["server",{"_index":622,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"index.html":{}}}],["session",{"_index":428,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["session(session",{"_index":715,"title":{},"body":{"injectables/StudentService.html":{}}}],["session.aborttransaction",{"_index":461,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["session.committransaction",{"_index":457,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["session.endsession",{"_index":465,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["session.starttransaction",{"_index":430,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["set",{"_index":449,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["setmetadata(auth_type_key",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":581,"title":{},"body":{"injectables/ExamService.html":{},"index.html":{}}}],["shall",{"_index":950,"title":{},"body":{"license.html":{}}}],["side",{"_index":823,"title":{},"body":{"index.html":{}}}],["signtoken",{"_index":587,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["signtoken(adminid",{"_index":589,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["software",{"_index":925,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"index.html":{}}}],["special",{"_index":345,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["sponsors",{"_index":897,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../admin.schema.ts",{"_index":993,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constants.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exam",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mcq",{"_index":994,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../response",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../student.interface.ts",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":995,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../template",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/admin/admin.controller.ts",{"_index":131,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.module.ts",{"_index":155,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/auth/auth.controller.ts",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/admin/auth/auth.controller.ts:14",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/admin/auth/constants/auth.constants.ts",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/decorators/active",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/decorators/auth.decorator",{"_index":514,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/admin/auth/decorators/auth.decorator.ts",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/dtos/login.dto.ts",{"_index":645,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/admin/auth/dtos/login.dto.ts:13",{"_index":646,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/admin/auth/dtos/login.dto.ts:22",{"_index":649,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/admin/auth/enums/auth",{"_index":515,"title":{},"body":{"controllers/ExamController.html":{},"miscellaneous/enumerations.html":{}}}],["src/admin/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/admin/auth/guards/authentication.guard.ts",{"_index":295,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/admin/auth/guards/authentication.guard.ts:23",{"_index":301,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/admin/auth/guards/authentication.guard.ts:30",{"_index":302,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/admin/auth/interfaces/active",{"_index":79,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{}}}],["src/admin/auth/providers/auth.service.ts",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/admin/auth/providers/auth.service.ts:13",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/auth/providers/auth.service.ts:20",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/auth/providers/generate",{"_index":585,"title":{},"body":{"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["src/admin/dtos/create",{"_index":329,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["src/admin/providers/admin.service",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/providers/admin.service.ts",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/providers/admin.service.ts:14",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/providers/admin.service.ts:23",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/providers/admin.service.ts:8",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/schemas/admin.schema.ts",{"_index":86,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/admin/schemas/admin.schema.ts:22",{"_index":92,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/schemas/admin.schema.ts:25",{"_index":91,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/schemas/admin.schema.ts:29",{"_index":94,"title":{},"body":{"classes/Admin.html":{}}}],["src/app.controller.ts",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["src/exam/dtos/create",{"_index":358,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"coverage.html":{}}}],["src/exam/dtos/mcq.dto.ts",{"_index":650,"title":{},"body":{"classes/Mcq.html":{},"coverage.html":{}}}],["src/exam/dtos/mcq.dto.ts:2",{"_index":654,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/mcq.dto.ts:3",{"_index":653,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/mcq.dto.ts:4",{"_index":652,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/update",{"_index":720,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["src/exam/enums/exam",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/exam/exam.controller.ts",{"_index":484,"title":{},"body":{"controllers/ExamController.html":{},"coverage.html":{}}}],["src/exam/exam.controller.ts:29",{"_index":489,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:39",{"_index":497,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:48",{"_index":492,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:55",{"_index":502,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.module.ts",{"_index":535,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/exam/providers/create",{"_index":400,"title":{},"body":{"injectables/CreateExamProvider.html":{},"coverage.html":{}}}],["src/exam/providers/exam.service.ts",{"_index":548,"title":{},"body":{"injectables/ExamService.html":{},"coverage.html":{}}}],["src/exam/providers/exam.service.ts:12",{"_index":551,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:24",{"_index":552,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:39",{"_index":555,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:51",{"_index":553,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:67",{"_index":557,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/update",{"_index":723,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["src/exam/schemas/exam",{"_index":466,"title":{},"body":{"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/mcq",{"_index":655,"title":{},"body":{"classes/McqExam.html":{},"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/filters/global",{"_index":600,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/student/providers/student.service",{"_index":419,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["src/student/providers/student.service.ts",{"_index":688,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/student/providers/student.service.ts:12",{"_index":691,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/providers/student.service.ts:20",{"_index":694,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/schemas/student.schema",{"_index":478,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["src/student/schemas/student.schema.ts",{"_index":670,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/student/schemas/student.schema.ts:20",{"_index":672,"title":{},"body":{"classes/Student.html":{}}}],["src/student/schemas/student.schema.ts:23",{"_index":673,"title":{},"body":{"classes/Student.html":{}}}],["src/student/student.controller.ts",{"_index":678,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student.module",{"_index":537,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/student/student.module.ts",{"_index":683,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/utils/interfaces/mcq",{"_index":630,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/interfaces/student.interface",{"_index":698,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/utils/interfaces/student.interface.ts",{"_index":641,"title":{},"body":{"interfaces/IStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/response",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/template",{"_index":696,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":836,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":839,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":841,"title":{},"body":{"index.html":{}}}],["started",{"_index":816,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":828,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":364,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["statements",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":297,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["status",{"_index":614,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["stay",{"_index":882,"title":{},"body":{"index.html":{}}}],["string",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":447,"title":{"classes/Student.html":{}},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["student.controller",{"_index":684,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.name",{"_index":687,"title":{},"body":{"modules/StudentModule.html":{}}}],["student/student.module",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["student['matric",{"_index":703,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentcontroller",{"_index":677,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentdocument",{"_index":674,"title":{},"body":{"classes/Student.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["studentid",{"_index":365,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["studentmodel",{"_index":692,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentmodule",{"_index":217,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["students",{"_index":432,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{}}}],["students.length",{"_index":435,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["students.map((s",{"_index":710,"title":{},"body":{"injectables/StudentService.html":{}}}],["students.map((student",{"_index":443,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["studentschema",{"_index":675,"title":{},"body":{"classes/Student.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentservice",{"_index":405,"title":{"injectables/StudentService.html":{}},"body":{"injectables/CreateExamProvider.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["sub",{"_index":84,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"classes/GenerateTokenProvider.html":{}}}],["subject",{"_index":945,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":938,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":952,"title":{},"body":{"license.html":{}}}],["success",{"_index":576,"title":{},"body":{"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["successful",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":459,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["successresponse",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["successresponse(__namedparameters",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["support",{"_index":858,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":980,"title":{},"body":{"modules.html":{}}}],["t",{"_index":590,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["table",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":701,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/functions.html":{}}}],["templates",{"_index":500,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["test",{"_index":844,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":847,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":846,"title":{},"body":{"index.html":{}}}],["tests",{"_index":842,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":896,"title":{},"body":{"index.html":{}}}],["theoryexam",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.accesstokenguard",{"_index":309,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.adminmodel(createadmindto",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findone",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.finduserbyemail(logindto.email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appservice.gethello",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguidemap[type]).flat",{"_index":319,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.connection.startsession",{"_index":429,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["this.createexamprovider.createexam(createexamdto",{"_index":566,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.examassignmentmodel.bulkwrite(operations",{"_index":456,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.examservice.createexam(createexamdto",{"_index":519,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.deletemcqexam(examid",{"_index":526,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.updatemcqexam(updateexamparamdto.examid",{"_index":523,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.updateoeexam(updateexamparamdto.examid",{"_index":530,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.extractrequestfromheader(request",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.generatetokenprovider.signtoken(user._id.tohexstring",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ismodified('password",{"_index":121,"title":{},"body":{"classes/Admin.html":{}}}],["this.jwtconfiguration",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":598,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":596,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":594,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtservice.verifyasync",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.mcqexammodel.create(createexamdto",{"_index":440,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.mcqexammodel.findbyid(examid",{"_index":569,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.mcqexammodel.findbyidanddelete(examid",{"_index":575,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.mcqexamschema.findbyid(examid",{"_index":732,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.mcqquestionmodel.bulkwrite(operations",{"_index":738,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.mcqquestionmodel.deletemany",{"_index":572,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.password",{"_index":124,"title":{},"body":{"classes/Admin.html":{}}}],["this.preparelistforbulkwrite(mcqlist",{"_index":736,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":312,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.studentmodel",{"_index":713,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentmodel.bulkwrite(operations",{"_index":705,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentservice.insertstudents(tutoriallist",{"_index":434,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.updatemcqexamprovider.updatemcqexam(examid",{"_index":568,"title":{},"body":{"injectables/ExamService.html":{}}}],["through",{"_index":322,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["throw",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["time",{"_index":874,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":107,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["tojson",{"_index":108,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["token",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard",{"_index":169,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:15",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:29",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:53",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":164,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":586,"title":{},"body":{"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:14",{"_index":591,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["token.provider.ts:6",{"_index":588,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["tort",{"_index":975,"title":{},"body":{"license.html":{}}}],["touch",{"_index":904,"title":{},"body":{"index.html":{}}}],["transform",{"_index":110,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["transformer",{"_index":105,"title":{},"body":{"classes/Admin.html":{},"dependencies.html":{}}}],["true",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["true})@exclude",{"_index":93,"title":{},"body":{"classes/Admin.html":{}}}],["try",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["tutorial",{"_index":438,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["tutoriallist",{"_index":410,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{}}}],["tutoriallist.mimetype",{"_index":559,"title":{},"body":{"injectables/ExamService.html":{}}}],["twitter",{"_index":910,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"classes/McqExam.html":{}}}],["type.enum.ts",{"_index":800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":991,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":623,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["types",{"_index":100,"title":{},"body":{"classes/Admin.html":{}}}],["typescript",{"_index":827,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{}}}],["unique",{"_index":90,"title":{},"body":{"classes/Admin.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["unit",{"_index":843,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["unlicensed",{"_index":990,"title":{},"body":{"properties.html":{}}}],["update",{"_index":448,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updated",{"_index":743,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["updateexamparamdto",{"_index":498,"title":{},"body":{"controllers/ExamController.html":{}}}],["updatemcqexam",{"_index":486,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updatemcqexam(examid",{"_index":554,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updatemcqexam(updateexamparamdto",{"_index":493,"title":{},"body":{"controllers/ExamController.html":{}}}],["updatemcqexamparamdto",{"_index":494,"title":{"classes/UpdateMcqExamParamDto.html":{}},"body":{"controllers/ExamController.html":{},"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["updatemcqexamprovider",{"_index":534,"title":{"injectables/UpdateMcqExamProvider.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updateoeexam",{"_index":487,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["updateoeexam(examid",{"_index":556,"title":{},"body":{"injectables/ExamService.html":{}}}],["updateoeexam(updateexamparamdto",{"_index":499,"title":{},"body":{"controllers/ExamController.html":{}}}],["updateone",{"_index":444,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updates",{"_index":883,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":503,"title":{},"body":{"controllers/ExamController.html":{}}}],["uploadedfiles",{"_index":504,"title":{},"body":{"controllers/ExamController.html":{}}}],["upsert",{"_index":455,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["uri",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":933,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":180,"title":{},"body":{"modules/AdminModule.html":{}}}],["usefactory",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('mcqlist",{"_index":522,"title":{},"body":{"controllers/ExamController.html":{}}}],["useinterceptors(fileinterceptor('tutoriallist",{"_index":518,"title":{},"body":{"controllers/ExamController.html":{}}}],["useinterceptors(filesinterceptor('templates",{"_index":528,"title":{},"body":{"controllers/ExamController.html":{}}}],["user",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.[field",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":875,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":353,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMcqExamParamDto.html":{},"dependencies.html":{}}}],["value",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":996,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":988,"title":{},"body":{"properties.html":{}}}],["video",{"_index":867,"title":{},"body":{"index.html":{}}}],["virtuals",{"_index":109,"title":{},"body":{"classes/Admin.html":{},"classes/ExamAssignment.html":{},"classes/McqExam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["visit",{"_index":855,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":869,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":959,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":955,"title":{},"body":{"license.html":{}}}],["watch",{"_index":837,"title":{},"body":{"index.html":{}}}],["website",{"_index":908,"title":{},"body":{"index.html":{}}}],["whether",{"_index":972,"title":{},"body":{"license.html":{}}}],["without",{"_index":928,"title":{},"body":{"license.html":{}}}],["working",{"_index":853,"title":{},"body":{"index.html":{}}}],["world",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["writer",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["writer.ts",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["x",{"_index":885,"title":{},"body":{"index.html":{}}}],["xlsx",{"_index":563,"title":{},"body":{"injectables/ExamService.html":{},"dependencies.html":{}}}],["yes",{"_index":593,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["you'd",{"_index":900,"title":{},"body":{"index.html":{}}}],["z\\d@$!%*#?&.]{8",{"_index":648,"title":{},"body":{"classes/LoginDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":338,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&.])[a",{"_index":647,"title":{},"body":{"classes/LoginDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":337,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["za",{"_index":336,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["zoom",{"_index":152,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/auth/guards/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/guards/access-token.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/access-token.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/access-token.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from '../constants/auth.constants';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Inject jwtConfig\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n\n    // Extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    \n    try {\n      const payload = await this.jwtService.verifyAsync(\n        token,\n        this.jwtConfiguration,\n      );\n      request[REQUEST_USER_KEY] = payload;\n      \n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n\n    return true;\n  }\n\n  private extractRequestFromHeader(request: Request): string | undefined {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveAdminData.html":{"url":"interfaces/ActiveAdminData.html","title":"interface - ActiveAdminData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveAdminData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/interfaces/active-admin-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveAdminData {\n    sub: string;\n    name: string;\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/schemas/admin.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, Types } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { InternalServerErrorException } from '@nestjs/common';\nimport { Exclude } from 'class-transformer';\n\nexport type AdminDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Admin {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  @Exclude()\n  password: string;\n}\n\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\nAdminSchema.pre('save', async function () {\n  if (!this.isModified('password')) {\n    return;\n  }\n\n  try {\n    const salt = await bcrypt.genSalt(10);\n    this.password = await bcrypt.hash(this.password, salt);\n  } catch (error) {\n    throw new InternalServerErrorException('Error hashing password');\n  }\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Delete, Param, Patch, Post } from '@nestjs/common';\nimport { AdminService } from './providers/admin.service';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AuthController } from './auth/auth.controller';\nimport { AuthService } from './auth/providers/auth.service';\nimport { AdminService } from './providers/admin.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Admin, AdminSchema } from './schemas/admin.schema';\nimport { GenerateTokenProvider } from './auth/providers/generate-token.provider';\nimport { JwtModule } from '@nestjs/jwt';\nimport jwtConfig from './auth/config/jwt.config';\nimport { ConfigModule } from '@nestjs/config';\nimport { AccessTokenGuard } from './auth/guards/access-token.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthenticationGuard } from './auth/guards/authentication.guard';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Admin.name,\n        schema: AdminSchema,\n      },\n    ]),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  controllers: [AdminController, AuthController],\n  providers: [\n    AuthService,\n    AdminService,\n    GenerateTokenProvider,\n    AccessTokenGuard,\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n  ],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/providers/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAdmin\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/admin/providers/admin.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAdmin(createAdminDto: CreateAdminDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/providers/admin.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAdminDto\n                                            \n                                                            CreateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/providers/admin.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Admin, AdminDocument } from '../schemas/admin.schema';\nimport { Model } from 'mongoose';\nimport { CreateAdminDto } from '../dtos/create-admin.dto';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    @InjectModel(Admin.name)\n    private readonly adminModel: Model,\n  ) {}\n\n  public async findUserByEmail(email: string): Promise {\n    let user = await this.adminModel.findOne({ email });\n    if (!user) {\n      return null;\n    }\n\n    return user;\n  }\n\n  public async createAdmin(createAdminDto: CreateAdminDto): Promise {\n    const newAdmin = new this.adminModel(createAdminDto);\n    return await newAdmin.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ExamModule\n                        \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AdminModule } from './admin/admin.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ExamModule } from './exam/exam.module';\nimport { StudentModule } from './student/student.module';\nimport environmentValidation from './config/environment.validation';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\n\nconst ENV = process.env.NODE_ENV;\nconsole.log(ENV);\n\n@Module({\n  imports: [\n    AdminModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      validationSchema: environmentValidation,\n      load: [appConfig, databaseConfig],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('database.uri'),\n      }),\n    }),\n    ExamModule,\n    StudentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.None)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/admin/auth/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { LoginDto } from './dtos/login.dto';\nimport { Auth } from './decorators/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService){}\n\n    @Post()\n    @Auth(AuthType.None)\n    @UseInterceptors(ClassSerializerInterceptor)\n    public async login(@Body() loginDto: LoginDto) {\n        return await this.authService.login(loginDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, generateTokenProvider: GenerateTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/providers/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { successResponse } from 'src/utils/response-writer';\nimport * as bcrypt from 'bcrypt';\nimport { AdminService } from 'src/admin/providers/admin.service';\nimport { GenerateTokenProvider } from './generate-token.provider';\nimport { LoginDto } from '../dtos/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly adminService: AdminService,\n\n    private readonly generateTokenProvider: GenerateTokenProvider,\n  ) {}\n\n  public async login(loginDto: LoginDto): Promise {\n    let user = await this.adminService.findUserByEmail(loginDto.email);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    let isPasswordValid = await bcrypt.compare(\n      loginDto.password,\n      user.password,\n    );\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const accessToken = await this.generateTokenProvider.signToken(user._id.toHexString(), {\n      email: user.email,\n      name: user.name,\n    });\n\n    return successResponse({\n      message: 'Login successful',\n      data: { accessToken },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/auth/guards/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuideMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/guards/authentication.guard.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/authentication.guard.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthType } from '../enums/auth-type.enum';\nimport { AccessTokenGuard } from './access-token.guard';\nimport { Reflector } from '@nestjs/core';\nimport { AUTH_TYPE_KEY } from '../constants/auth.constants';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  private readonly authTypeGuideMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    // get authTypes from reflector\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create array of all the guards\n    const guards = authTypes.map((type) => this.authTypeGuideMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through guards, fire canActivate\n    for (const instance of guards) {\n      const canActivate = await Promise.resolve(\n        instance.canActivate(context),\n      ).catch((err) => {\n        err;\n      });\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminDto.html":{"url":"classes/CreateAdminDto.html","title":"class - CreateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dtos/create-admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateAdminDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamAssignmentDto.html":{"url":"classes/CreateExamAssignmentDto.html","title":"class - CreateExamAssignmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamAssignmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-exam-assignment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                    \n                                examId\n                            \n                            \n                                    \n                                    \n                                examSchema\n                            \n                            \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                    \n                                studentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examSchemaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsNotEmpty, IsString } from \"class-validator\";\nimport { examSchemaEnum } from \"../enums/exam-schema.enum\";\n\nexport class CreateExamAssignmentDto {\n    @IsString()\n    @IsNotEmpty()\n    examId: string;\n\n    @IsString()\n    @IsNotEmpty()\n    studentId: string;\n\n    @IsString()\n    @IsNotEmpty()\n    examSchema: examSchemaEnum;\n\n    @IsDate()\n    startTime?: Date;\n\n    @IsDate()\n    endTime?: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamDto.html":{"url":"classes/CreateExamDto.html","title":"class - CreateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-mcq-exam.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                courseCode\n                            \n                            \n                                    \n                                    \n                                courseName\n                            \n                            \n                                    \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                examType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        courseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(examType, {message: 'examType must be either MCQ or OE'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsInt, IsNotEmpty, IsString, Min, MinLength } from \"class-validator\";\nimport { examType } from \"../enums/exam-type.enum\";\n\nexport class CreateExamDto {\n    @IsString()\n    @IsNotEmpty()\n    courseName: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(6)\n    courseCode: string;\n\n    @IsInt()\n    @IsNotEmpty()\n    @Min(10)\n    duration: number; // in minutes\n\n    @IsEnum(examType, { message: 'examType must be either MCQ or OE' })\n    @IsNotEmpty()\n    examType: examType\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateExamProvider.html":{"url":"injectables/CreateExamProvider.html","title":"injectable - CreateExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/create-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, studentService: StudentService, mcqExamModel: Model, examAssignmentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/create-exam.provider.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqExamModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examAssignmentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/create-exam.provider.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { CreateExamDto } from '../dtos/create-mcq-exam.dto';\nimport { McqExam, McqExamDocument } from '../schemas/mcq-exam.schema';\nimport { StudentService } from 'src/student/providers/student.service';\nimport { Connection, Model } from 'mongoose';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { CreateExamAssignmentDto } from '../dtos/create-exam-assignment.dto';\nimport { examType } from '../enums/exam-type.enum';\nimport { examSchemaEnum } from '../enums/exam-schema.enum';\nimport {\n  ExamAssignment,\n  ExamAssignmentDocument,\n} from '../schemas/exam-assigment.schema';\nimport { successResponse } from 'src/utils/response-writer';\n\n@Injectable()\nexport class CreateExamProvider {\n  constructor(\n    @InjectConnection()\n    private readonly connection: Connection,\n\n    @Inject()\n    private readonly studentService: StudentService,\n\n    @InjectModel(McqExam.name)\n    private readonly mcqExamModel: Model,\n\n    @InjectModel(ExamAssignment.name)\n    private readonly examAssignmentModel: Model,\n  ) {}\n\n  public async createExam(\n    createExamDto: CreateExamDto,\n    tutorialList: Express.Multer.File,\n  ) {\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    // Insert the students into the database\n    const students = await this.studentService.insertStudents(tutorialList);\n\n    if (!students || students.length === 0) {\n      throw new BadRequestException('No students found in the tutorial list');\n    }\n\n    try {\n      // Create the exam in the database\n      const exam = await this.mcqExamModel.create(createExamDto);\n      await exam.save({ session });\n\n      const operations = students.map((student) => ({\n        updateOne: {\n          filter: { examId: exam._id, studentId: student },\n          update: {\n            $set: {\n              examId: exam._id.toString(),\n              studentId: student,\n              examSchema:\n                createExamDto.examType == examType.MCQ\n                  ? examSchemaEnum.McqExam\n                  : examSchemaEnum.TheoryExam,\n            } as CreateExamAssignmentDto,\n          },\n          upsert: true,\n        },\n      }));\n\n      await this.examAssignmentModel.bulkWrite(operations, { session });\n      await session.commitTransaction();\n\n      return successResponse({\n        message: 'Exam created successfully',\n        data: { exam },\n      });\n    } catch (error) {\n      console.error(error);\n      session.abortTransaction();\n      throw new BadRequestException('Error creating exam');\n    } finally {\n      session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAssignment.html":{"url":"classes/ExamAssignment.html","title":"class - ExamAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/exam-assigment.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                examId\n                            \n                            \n                                    \n                                examSchema\n                            \n                            \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                studentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, refPath: 'examSchema', index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examSchemaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: examSchemaEnum, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Student', index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Student } from 'src/student/schemas/student.schema';\nimport { examSchemaEnum } from '../enums/exam-schema.enum';\n\nexport type ExamAssignmentDocument = HydratedDocument;\n\n@Schema({\n  timestamps: false,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class ExamAssignment {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, refPath: 'examSchema', index: true })\n  examId: mongoose.Types.ObjectId;\n\n  @Prop({ type: String, enum: examSchemaEnum, required: true })\n  examSchema: examSchemaEnum;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Student', index: true })\n  studentId: Student;\n\n  @Prop()\n  startTime?: Date;\n\n  @Prop()\n  endTime?: Date;\n}\n\nexport const ExamAssignmentSchema = SchemaFactory.createForClass(ExamAssignment)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExamController.html":{"url":"controllers/ExamController.html","title":"controller - ExamController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/exam.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exam\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createExam\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteMcqExam\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.CREATED)@Auth(AuthType.None)@Post()@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMcqExam(examId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Delete('mcq/:examId')\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(updateExamParamDto: UpdateMcqExamParamDto, mcqTemplate: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Patch('mcq/:examId')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateExamParamDto\n                                            \n                                                            UpdateMcqExamParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(updateExamParamDto: UpdateMcqExamParamDto, templates: Express.Multer.File[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Patch('oe/:examId')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateExamParamDto\n                                            \n                                                            UpdateMcqExamParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                templates\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Patch,\n  Delete,\n  Param,\n  UseInterceptors,\n  UploadedFile,\n  UploadedFiles,\n  Body,\n  HttpStatus,\n  HttpCode,\n} from '@nestjs/common';\nimport { CreateExamDto } from './dtos/create-mcq-exam.dto';\nimport { UpdateMcqExamParamDto } from './dtos/update-mcq-exam-param.dto';\nimport { ExamService } from './providers/exam.service';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { Auth } from 'src/admin/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/admin/auth/enums/auth-type.enum';\n\n@Controller('exam')\nexport class ExamController {\n  constructor(private readonly examService: ExamService) {}\n\n  @HttpCode(HttpStatus.CREATED)\n  @Auth(AuthType.None)\n  @Post()\n  @UseInterceptors(FileInterceptor('tutorialList'))\n  public async createExam(\n    @Body() createExamDto: CreateExamDto,\n    @UploadedFile() tutorialList: Express.Multer.File,\n  ) {\n    return this.examService.createExam(createExamDto, tutorialList);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Patch('mcq/:examId')\n  @UseInterceptors(FileInterceptor('mcqList'))\n  public async updateMcqExam(\n    @Param() updateExamParamDto: UpdateMcqExamParamDto,\n    @UploadedFile() mcqTemplate: Express.Multer.File,\n  ) {\n    return this.examService.updateMcqExam(updateExamParamDto.examId, mcqTemplate);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Delete('mcq/:examId')\n  public async deleteMcqExam(@Param('examId') examId: string) {\n    return this.examService.deleteMcqExam(examId)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Patch('oe/:examId')\n  @UseInterceptors(FilesInterceptor('templates', 2))\n  public async updateOeExam(\n    @Param() updateExamParamDto: UpdateMcqExamParamDto,\n    @UploadedFiles() templates: Express.Multer.File[],\n  ) {\n    return this.examService.updateOeExam(updateExamParamDto.examId, templates);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExamModule.html":{"url":"modules/ExamModule.html","title":"module - ExamModule","body":"\n                   \n\n\n\n\n    Modules\n    ExamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_ExamModule_imports\n\n\n\n\nStudentModule\n\nStudentModule\n\n\n\nExamModule\n\nExamModule\n\nExamModule -->\n\nStudentModule->ExamModule\n\n\n\n\n\nCreateExamProvider\n\nCreateExamProvider\n\nExamModule -->\n\nCreateExamProvider->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nUpdateMcqExamProvider\n\nUpdateMcqExamProvider\n\nExamModule -->\n\nUpdateMcqExamProvider->ExamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/exam/exam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateExamProvider\n                        \n                        \n                            ExamService\n                        \n                        \n                            UpdateMcqExamProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExamController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExamController } from './exam.controller';\nimport { ExamService } from './providers/exam.service';\nimport { StudentModule } from 'src/student/student.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { McqExam, McqExamSchema } from './schemas/mcq-exam.schema';\nimport { ExamAssignment, ExamAssignmentSchema } from './schemas/exam-assigment.schema';\nimport { CreateExamProvider } from './providers/create-exam.provider';\nimport { UpdateMcqExamProvider } from './providers/update-mcq-exam.provider';\nimport { McqQuestion, McqQuestionSchema } from './schemas/mcq-question.schema';\n\n@Module({\n  controllers: [ExamController],\n  providers: [ExamService, CreateExamProvider, UpdateMcqExamProvider],\n  imports: [\n    StudentModule,\n    MongooseModule.forFeature([\n      {\n        name: McqExam.name,\n        schema: McqExamSchema,\n      },\n      {\n        name: ExamAssignment.name,\n        schema: ExamAssignmentSchema,\n      },\n      {\n        name: McqQuestion.name,\n        schema: McqQuestionSchema\n      }\n    ]),\n  ],\n})\nexport class ExamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamService.html":{"url":"injectables/ExamService.html","title":"injectable - ExamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/exam.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createExam\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMcqExam\n                            \n                            \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                            \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createExamProvider: CreateExamProvider, updateMcqExamProvider: UpdateMcqExamProvider, mcqExamModel: Model, mcqQuestionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/exam.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createExamProvider\n                                                  \n                                                        \n                                                                        CreateExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateMcqExamProvider\n                                                  \n                                                        \n                                                                        UpdateMcqExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqExamModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqQuestionModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMcqExam(examId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(examId: string, mcqTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(examId: string, templates: Express.Multer.File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                templates\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateExamDto } from '../dtos/create-mcq-exam.dto';\nimport { CreateExamProvider } from './create-exam.provider';\nimport { UpdateMcqExamProvider } from './update-mcq-exam.provider';\nimport { Model } from 'mongoose';\nimport { McqExam, McqExamDocument } from '../schemas/mcq-exam.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { successResponse } from 'src/utils/response-writer';\nimport { McqQuestion } from '../schemas/mcq-question.schema';\n\n@Injectable()\nexport class ExamService {\n  constructor(\n    private readonly createExamProvider: CreateExamProvider,\n    private readonly updateMcqExamProvider: UpdateMcqExamProvider,\n\n    @InjectModel(McqExam.name)\n    private readonly mcqExamModel: Model,\n\n    @InjectModel(McqQuestion.name)\n    private readonly mcqQuestionModel: Model\n  ) {}\n\n  public async createExam(\n    createExamDto: CreateExamDto,\n    tutorialList: Express.Multer.File,\n  ) {\n    if (\n      !tutorialList ||\n      tutorialList.mimetype !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      throw new BadRequestException('Only .xlsx files are allowed');\n    }\n\n    return this.createExamProvider.createExam(createExamDto, tutorialList)\n  }\n\n  public async updateMcqExam(examId: string, mcqTemplate: Express.Multer.File) {\n    if (\n      !mcqTemplate ||\n      mcqTemplate.mimetype !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      throw new BadRequestException('Only .xlsx files are allowed');\n    }\n\n    return this.updateMcqExamProvider.updateMcqExam(examId, mcqTemplate)\n  }\n\n  public async deleteMcqExam(examId: string) {\n  const exam = await this.mcqExamModel.findById(examId);\n\n  if (!exam) {\n    throw new NotFoundException('Exam not found');\n  }\n\n  if (exam.questions?.length) {\n    await this.mcqQuestionModel.deleteMany({ _id: { $in: exam.questions } });\n  }\n\n  await this.mcqExamModel.findByIdAndDelete(examId);\n\n  return { success: true, message: 'Exam and related questions deleted' };\n}\n\n  public async updateOeExam(examId: string, templates: Express.Multer.File[]) {\n    // Add Exam questions\n    // Setup AI grading model\n    // Assign the exam to the students\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateTokenProvider.html":{"url":"classes/GenerateTokenProvider.html","title":"class - GenerateTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/providers/generate-token.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/providers/generate-token.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(adminId: string, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/providers/generate-token.provider.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adminId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { Inject } from '@nestjs/common';\n\nexport class GenerateTokenProvider {\n  constructor(\n    private readonly jwtService: JwtService,\n\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  public async signToken(adminId: string, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: adminId,\n        ...payload,\n      },\n      {\n        secret: this.jwtConfiguration.secret,\n        expiresIn: this.jwtConfiguration.accessTokenTtl,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalHttpExceptionFilter.html":{"url":"classes/GlobalHttpExceptionFilter.html","title":"class - GlobalHttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalHttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/global-http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-http-exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class GlobalHttpExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const exceptionResponse: any =\n      exception instanceof HttpException\n        ? exception.getResponse()\n        : { message: exception.message || 'Internal server error' };\n\n    const message =\n      typeof exceptionResponse === 'string'\n        ? exceptionResponse\n        : Array.isArray(exceptionResponse?.message)\n          ? exceptionResponse.message[0]\n          : exceptionResponse?.message || 'An error occurred';\n\n    return response.status(status).json({ success: false, message: message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMcqQuestion.html":{"url":"interfaces/IMcqQuestion.html","title":"interface - IMcqQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMcqQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/mcq-question.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            A\n                                        \n                                \n                                \n                                        \n                                            B\n                                        \n                                \n                                \n                                        \n                                            C\n                                        \n                                \n                                \n                                        \n                                            Correct Answer\n                                        \n                                \n                                \n                                        \n                                            D\n                                        \n                                \n                                \n                                        \n                                            Question\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        A\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        A:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        B\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        B:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        C\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        C:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Correct Answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Correct Answer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        D\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        D:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMcqQuestion {\n    Question: string;\n    A: string;\n    B: string;\n    C: string;\n    D: string;\n    'Correct Answer': string;\n}\n\nexport const iMcqQuestionExpectedKeys : (keyof IMcqQuestion)[] = [\n    \"Question\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"Correct Answer\"\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStudent.html":{"url":"interfaces/IStudent.html","title":"interface - IStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/student.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FullName\n                                        \n                                \n                                \n                                        \n                                            Matric No\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Matric No\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Matric No:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IStudent {\n  'FullName': string;\n  'Matric No': string;\n}\n\nexport const iStudentExpectedKeys: (keyof IStudent)[] = [\n  'FullName',\n  'Matric No',\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/auth/dtos/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&.])[A-Za-z\\d@$!%*#?&.]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/auth/dtos/login.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n  \n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&.])[A-Za-z\\d@$!%*#?&.]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mcq.html":{"url":"classes/Mcq.html","title":"class - Mcq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mcq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/mcq.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                options\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mcq {\n  question: string;\n  options: string[];\n  answer: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/McqExam.html":{"url":"classes/McqExam.html","title":"class - McqExam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  McqExam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/mcq-exam.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                courseCode\n                            \n                            \n                                    \n                                courseName\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                examType\n                            \n                            \n                                    \n                                    Optional\n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-exam.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-exam.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-exam.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: examType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-exam.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     McqQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-exam.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { McqQuestion, McqQuestionSchema } from './mcq-question.schema';\nimport { examType } from '../enums/exam-type.enum';\n\nexport type McqExamDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class McqExam {\n  @Prop({ required: true })\n  courseName: string;\n\n  @Prop({ required: true })\n  courseCode: string;\n\n  @Prop({ required: true })\n  duration: number;\n\n  @Prop({ enum: examType })\n  examType: examType;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'McqQuestion' }] })\n  questions?: McqQuestion[];\n}\n\nexport const McqExamSchema = SchemaFactory.createForClass(McqExam);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/McqQuestion.html":{"url":"classes/McqQuestion.html","title":"class - McqQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  McqQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/mcq-question.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answer\n                            \n                            \n                                    \n                                options\n                            \n                            \n                                    \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-question.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-question.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq-question.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type McqQuestionDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class McqQuestion {\n  @Prop({ required: true, unique: true })\n  question: string;\n\n  @Prop({ type: [String], required: true  })\n  options: string[];\n\n  @Prop({ required: true })\n  answer: string;\n}\n\nexport const McqQuestionSchema = SchemaFactory.createForClass(McqQuestion);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/schemas/student.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                matricNo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/schemas/student.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        matricNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, index: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/schemas/student.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\n\nexport type StudentDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Student {\n  @Prop({ required: true })\n  fullName: string;\n\n  @Prop({ required: true, index: true, unique: true })\n  matricNo: string;\n}\n\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('student')\nexport class StudentController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nStudentService \n\nStudentService \n\n\n\nStudentModule\n\nStudentModule\n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StudentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentController } from './student.controller';\nimport { StudentService } from './providers/student.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Student, StudentSchema } from './schemas/student.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Student.name,\n        schema: StudentSchema,\n      },\n    ]),\n  ],\n  controllers: [StudentController],\n  providers: [StudentService],\n  exports: [StudentService]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/providers/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                insertStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/student/providers/student.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        insertStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertStudents(tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/providers/student.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Student, StudentDocument } from '../schemas/student.schema';\nimport { Connection, Model } from 'mongoose';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport {\n  iStudentExpectedKeys,\n  IStudent,\n} from 'src/utils/interfaces/student.interface';\n\n@Injectable()\nexport class StudentService {\n  constructor(\n    @InjectModel(Student.name)\n    private readonly studentModel: Model,\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async insertStudents(\n    tutorialList: Express.Multer.File,\n  ): Promise {\n    let insertedStudentIds: string[] = [];\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      // Extract student data from the tutorial list template\n      const students = parseTemplate(\n        tutorialList,\n        iStudentExpectedKeys,\n      );\n\n      const operations = students\n        .filter((student) => student['Matric No'])\n        .map((student) => ({\n          updateOne: {\n            filter: { matricNo: student['Matric No'] },\n            update: { $set: student },\n            upsert: true,\n          },\n        }));\n\n      await this.studentModel.bulkWrite(operations, { session });\n\n      // Fetch all affected student IDs\n      const affectedMatricNos = students.map((s) => s['Matric No']);\n      const affectedStudents = await this.studentModel\n        .find({ matricNo: { $in: affectedMatricNos } }, '_id')\n        .session(session);\n\n      insertedStudentIds = affectedStudents.map((s) => s._id.toString());\n\n      await session.commitTransaction();\n\n      return insertedStudentIds;\n    } catch (error) {\n      await session.abortTransaction();\n      throw new InternalServerErrorException(\n        error.message || 'Failed to insert students',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMcqExamParamDto.html":{"url":"classes/UpdateMcqExamParamDto.html","title":"class - UpdateMcqExamParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMcqExamParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/update-mcq-exam-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                examId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/update-mcq-exam-param.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class UpdateMcqExamParamDto {\n    @IsString()\n    @IsNotEmpty()\n    examId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateMcqExamProvider.html":{"url":"injectables/UpdateMcqExamProvider.html","title":"injectable - UpdateMcqExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateMcqExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/update-mcq-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                prepareListForBulkWrite\n                            \n                            \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mcqQuestionModel: Model, mcqExamSchema: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/update-mcq-exam.provider.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mcqQuestionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqExamSchema\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareListForBulkWrite\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareListForBulkWrite(mcqList: IMcqQuestion[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-mcq-exam.provider.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mcqList\n                                            \n                                                            IMcqQuestion[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(examId: string, mcqTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-mcq-exam.provider.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport {\n  IMcqQuestion,\n  iMcqQuestionExpectedKeys,\n} from 'src/utils/interfaces/mcq-question.interface';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport { Connection, Model } from 'mongoose';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport {\n  McqQuestion,\n  McqQuestionDocument,\n} from '../schemas/mcq-question.schema';\nimport { McqExam, McqExamDocument } from '../schemas/mcq-exam.schema';\nimport { successResponse } from 'src/utils/response-writer';\n\n@Injectable()\nexport class UpdateMcqExamProvider {\n  constructor(\n    @InjectModel(McqQuestion.name)\n    private readonly mcqQuestionModel: Model,\n\n    @InjectModel(McqExam.name)\n    private readonly mcqExamSchema: Model,\n\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async updateMcqExam(examId: string, mcqTemplate: Express.Multer.File) {\n\n    const exam = await this.mcqExamSchema.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    const mcqList = parseTemplate(\n      mcqTemplate,\n      iMcqQuestionExpectedKeys,\n    );\n\n    if (mcqList.length === 0) {\n      throw new BadRequestException('Questions template is empty');\n    }\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      const operations = this.prepareListForBulkWrite(mcqList);\n\n      let result = await this.mcqQuestionModel.bulkWrite(operations, {\n        session,\n      });\n\n      const insertedQuestionIds = Object.values(result.upsertedIds || {});\n\n      exam.questions.push(...insertedQuestionIds)\n      await exam.save({session})\n\n      await session.commitTransaction();\n\n      return successResponse({ message: 'Exam updated successfully.' });\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException(\n        error.message || 'Failed to save exam questions',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n\n  private prepareListForBulkWrite(mcqList: IMcqQuestion[]) {\n    const collapseMcqList = mcqList.map((mcq) => ({\n      question: mcq.Question,\n      options: [mcq.A, mcq.B, mcq.C, mcq.D],\n      answer: mcq['Correct Answer'],\n    }));\n\n    const operations = collapseMcqList.map((item) => ({\n      updateOne: {\n        filter: { question: item.question },\n        update: { $set: item },\n        upsert: true,\n      },\n    }));\n    return operations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/admin/auth/constants/auth.constants.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/constants/auth.constants.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/decorators/active-admin.decorator.ts\n            \n            variable\n            ActiveAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/decorators/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth/guards/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/auth/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/auth/interfaces/active-admin-data.interface.ts\n            \n            interface\n            ActiveAdminData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth/providers/generate-token.provider.ts\n            \n            class\n            GenerateTokenProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/dtos/create-admin.dto.ts\n            \n            class\n            CreateAdminDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/providers/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/schemas/admin.schema.ts\n            \n            class\n            Admin\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/admin/schemas/admin.schema.ts\n            \n            variable\n            AdminSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/schemas/admin.schema.ts\n            \n            type alias\n            AdminDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-exam-assignment.dto.ts\n            \n            class\n            CreateExamAssignmentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-mcq-exam.dto.ts\n            \n            class\n            CreateExamDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/exam/dtos/mcq.dto.ts\n            \n            class\n            Mcq\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/dtos/update-mcq-exam-param.dto.ts\n            \n            class\n            UpdateMcqExamParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/exam.controller.ts\n            \n            controller\n            ExamController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/exam/providers/create-exam.provider.ts\n            \n            injectable\n            CreateExamProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/providers/exam.service.ts\n            \n            injectable\n            ExamService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/providers/update-mcq-exam.provider.ts\n            \n            injectable\n            UpdateMcqExamProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/schemas/exam-assigment.schema.ts\n            \n            class\n            ExamAssignment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam-assigment.schema.ts\n            \n            variable\n            ExamAssignmentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam-assigment.schema.ts\n            \n            type alias\n            ExamAssignmentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/mcq-exam.schema.ts\n            \n            class\n            McqExam\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq-exam.schema.ts\n            \n            variable\n            McqExamSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq-exam.schema.ts\n            \n            type alias\n            McqExamDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/mcq-question.schema.ts\n            \n            class\n            McqQuestion\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq-question.schema.ts\n            \n            variable\n            McqQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq-question.schema.ts\n            \n            type alias\n            McqQuestionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/global-http-exception.filter.ts\n            \n            class\n            GlobalHttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/providers/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/student/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/student/schemas/student.schema.ts\n            \n            type alias\n            StudentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/mcq-question.interface.ts\n            \n            interface\n            IMcqQuestion\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/mcq-question.interface.ts\n            \n            variable\n            iMcqQuestionExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/student.interface.ts\n            \n            interface\n            IStudent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/student.interface.ts\n            \n            variable\n            iStudentExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/response-writer.ts\n            \n            function\n            successResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/template-parser.ts\n            \n            function\n            parseTemplate\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            helmet : ^8.1.0\n        \n            joi : ^17.13.3\n        \n            mongoose : ^8.13.2\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            xlsx : ^0.18.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            examSchemaEnum   (src/.../exam-schema.enum.ts)\n                        \n                        \n                            examType   (src/.../exam-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-schema.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        examSchemaEnum\n                    \n                \n                        \n                            \n                                 McqExam\n                            \n                        \n                        \n                            \n                                Value : McqExam\n                            \n                        \n                        \n                            \n                                 TheoryExam\n                            \n                        \n                        \n                            \n                                Value : TheoryExam\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        examType\n                    \n                \n                        \n                            \n                                 MCQ\n                            \n                        \n                        \n                            \n                                Value : MCQ\n                            \n                        \n                        \n                            \n                                 OE\n                            \n                        \n                        \n                            \n                                Value : OE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            parseTemplate   (src/.../template-parser.ts)\n                        \n                        \n                            successResponse   (src/.../response-writer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/template-parser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseTemplate\n                        \n                    \n                \n            \n            \n                \nparseTemplate(template, expectedKeys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                template\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expectedKeys\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/response-writer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        successResponse\n                        \n                    \n                \n            \n            \n                \nsuccessResponse(__namedParameters: {message: string, data: any})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Oluwafemi Ojuri\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nExamModule -->\n\nStudentModule->ExamModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nStudentService \n\nStudentService \n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCreateExamProvider\n\nCreateExamProvider\n\nExamModule -->\n\nCreateExamProvider->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nUpdateMcqExamProvider\n\nUpdateMcqExamProvider\n\nExamModule -->\n\nUpdateMcqExamProvider->ExamModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AdminDocument   (src/.../admin.schema.ts)\n                        \n                        \n                            ExamAssignmentDocument   (src/.../exam-assigment.schema.ts)\n                        \n                        \n                            McqExamDocument   (src/.../mcq-exam.schema.ts)\n                        \n                        \n                            McqQuestionDocument   (src/.../mcq-question.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/schemas/admin.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AdminDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/exam-assigment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ExamAssignmentDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/mcq-exam.schema.ts\n    \n    \n        \n            \n                \n                    \n                    McqExamDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/mcq-question.schema.ts\n    \n    \n        \n            \n                \n                    \n                    McqQuestionDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/student/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveAdmin   (src/.../active-admin.decorator.ts)\n                        \n                        \n                            AdminSchema   (src/.../admin.schema.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            ExamAssignmentSchema   (src/.../exam-assigment.schema.ts)\n                        \n                        \n                            iMcqQuestionExpectedKeys   (src/.../mcq-question.interface.ts)\n                        \n                        \n                            iStudentExpectedKeys   (src/.../student.interface.ts)\n                        \n                        \n                            McqExamSchema   (src/.../mcq-exam.schema.ts)\n                        \n                        \n                            McqQuestionSchema   (src/.../mcq-question.schema.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth/decorators/active-admin.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveAdminData, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveAdminData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/admin/schemas/admin.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdminSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Admin)\n                    \n                \n\n\n        \n    \n\n    src/admin/auth/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) => SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n\n    src/admin/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/exam-assigment.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExamAssignmentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ExamAssignment)\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/mcq-question.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iMcqQuestionExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"Question\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"Correct Answer\"\n]\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/student.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iStudentExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'FullName',\n  'Matric No',\n]\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/mcq-exam.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        McqExamSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(McqExam)\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/mcq-question.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        McqQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(McqQuestion)\n                    \n                \n\n\n        \n    \n\n    src/student/schemas/student.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Student)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
