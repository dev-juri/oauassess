var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.725,1,2.258]],["body/guards/AccessTokenGuard.html",[1,2.631,2,2.184,3,0.221,4,0.2,5,0.2,6,4.628,7,2.463,8,0.244,9,1.384,10,1.827,11,4.628,12,2.545,13,4.193,14,1.853,15,2.463,16,5.293,17,4.216,18,4.628,19,0.818,20,2.886,21,1.725,22,0.022,23,1.235,24,0.539,25,1.459,26,3.579,27,4.105,28,2.886,29,2.463,30,1.309,31,2.631,32,4.193,33,5.129,34,2.886,35,0.652,36,2.872,37,0.708,38,3.383,39,1.108,40,3.739,41,0.608,42,1.976,43,3.174,44,2.463,45,1.81,46,1.81,47,2.184,48,2.463,49,0.221,50,0.008,51,2.184,52,1.465,53,2.463,54,1.281,55,2.886,56,2.463,57,6.009,58,2.886,59,2.886,60,1.973,61,1.743,62,1.672,63,3.579,64,1.131,65,2.886,66,2.886,67,2.463,68,1.553,69,1.45,70,0.936,71,1.131,72,2.886,73,2.886,74,0.012,75,0.012]],["title/interfaces/ActiveAdminData.html",[76,1.694,77,2.465]],["body/interfaces/ActiveAdminData.html",[3,0.36,4,0.325,5,0.325,8,0.397,22,0.021,23,1.655,24,0.691,35,1.114,49,0.36,74,0.017,75,0.017,76,2.211,77,3.991,78,2.947,79,4.009,80,2.529,81,4.009,82,1.54,83,3.837,84,5.652]],["title/classes/Admin.html",[50,0.01,80,1.938]],["body/classes/Admin.html",[3,0.241,4,0.217,5,0.217,8,0.265,10,1.162,19,0.858,22,0.022,23,1.295,24,0.615,35,0.961,37,0.701,41,0.662,49,0.398,50,0.013,54,1.053,60,1.479,61,1.306,62,1.821,64,1.747,68,1.692,69,1.579,70,0.995,71,2.591,74,0.013,75,0.013,80,2.4,82,1.178,83,3.002,85,1.037,86,2.152,87,4.268,88,1.81,89,3.549,90,3.375,91,3.142,92,3.142,93,3.142,94,3.142,95,3.267,96,2.098,97,1.821,98,0.928,99,2.4,100,3.142,101,1.162,102,3.375,103,2.379,104,4.458,105,2.682,106,2.152,107,1.821,108,1.821,109,1.821,110,1.821,111,1.821,112,2.583,113,1.821,114,2.583,115,1.579,116,3.549,117,2.152,118,2.682,119,3.142,120,2.682,121,3.142,122,4.458,123,3.142,124,3.142,125,3.142,126,3.142,127,3.142]],["title/controllers/AdminController.html",[128,1.497,129,2.465]],["body/controllers/AdminController.html",[3,0.376,4,0.339,5,0.339,22,0.021,37,0.704,41,1.033,49,0.376,50,0.014,52,1.712,74,0.018,75,0.018,80,2.639,115,2.463,128,2.038,129,4.096,130,2.166,131,4.183,132,3.357,133,4.183,134,4.183,135,3.71,136,3.475,137,4.183,138,4.902,139,3.357]],["title/modules/AdminModule.html",[140,1.694,141,2.258]],["body/modules/AdminModule.html",[1,2.894,3,0.253,4,0.228,5,0.228,22,0.022,23,0.824,37,0.825,41,0.695,42,2.259,43,2.497,45,2.069,49,0.253,50,0.01,74,0.014,75,0.014,80,1.776,96,1.552,98,0.974,117,3.159,129,3.643,130,2.038,136,3.382,137,2.815,140,2.503,141,4.128,142,1.776,143,1.776,144,2.069,145,2.069,146,1.776,147,3.337,148,2.069,149,2.815,150,2.815,151,3.64,152,2.894,153,2.069,154,1.776,155,3.298,156,3.643,157,3.298,158,3.298,159,3.298,160,2.259,161,2.815,162,2.894,163,3.298,164,2.815,165,3.298,166,3.298,167,2.815,168,3.298,169,2.815,170,4.613,171,2.497,172,3.159,173,3.298,174,2.259,175,2.497,176,3.298,177,3.298,178,3.298,179,2.815,180,3.298]],["title/injectables/AdminService.html",[39,0.951,136,1.938]],["body/injectables/AdminService.html",[3,0.259,4,0.234,5,0.234,8,0.285,9,1.548,10,2.34,12,1.492,14,2.072,19,0.893,21,1.882,22,0.022,23,1.347,24,0.588,25,1.591,30,1.464,31,3.651,35,0.837,37,0.72,39,1.239,41,0.712,49,0.259,50,0.01,52,1.18,54,0.798,61,1.404,64,1.838,70,1.203,74,0.014,75,0.014,80,1.818,83,2.717,98,0.997,101,1.249,106,2.313,136,2.525,161,2.882,181,1.589,182,2.882,183,2.797,184,4.69,185,4.69,186,3.377,187,3.372,188,3.377,189,4.69,190,4.69,191,4.188,192,3.377,193,4.69,194,3.377,195,1.957,196,2.313,197,3.377,198,3.377,199,4.078,200,3.377,201,2.882,202,3.377,203,3.377,204,3.377]],["title/controllers/AppController.html",[128,1.497,205,2.465]],["body/controllers/AppController.html",[3,0.356,4,0.321,5,0.321,8,0.392,9,1.909,19,0.769,22,0.021,30,1.449,35,0.899,37,0.681,41,0.978,49,0.356,50,0.013,52,1.621,70,1.036,74,0.017,75,0.017,88,1.621,128,2.404,130,2.05,139,3.178,205,3.96,206,3.96,207,5.627,208,4.64,209,3.65,210,3.96,211,4.64]],["title/modules/AppModule.html",[140,1.694,212,2.465]],["body/modules/AppModule.html",[3,0.247,4,0.222,5,0.222,22,0.022,37,0.802,38,2.201,41,0.677,45,2.016,49,0.247,50,0.009,54,0.759,71,1.259,74,0.013,75,0.013,98,0.949,130,2.001,140,2.468,141,3.908,142,1.73,143,1.73,144,2.016,145,2.016,146,1.73,147,3.291,148,2.016,152,2.842,153,2.016,154,1.73,160,2.201,167,3.866,174,3.593,205,3.593,209,3.61,210,2.743,212,4.709,213,2.743,214,2.743,215,2.743,216,3.908,217,3.61,218,2.433,219,3.214,220,3.214,221,5.696,222,3.214,223,3.214,224,4.53,225,3.214,226,4.53,227,3.214,228,4.53,229,3.214,230,3.971,231,2.743,232,3.214,233,3.214,234,3.214,235,3.214,236,3.214,237,3.214,238,3.214,239,3.214,240,3.214,241,3.214,242,3.214]],["title/injectables/AppService.html",[39,0.951,209,2.086]],["body/injectables/AppService.html",[3,0.373,4,0.336,5,0.336,8,0.41,9,1.964,19,0.805,22,0.021,30,1.517,35,0.925,37,0.572,39,1.572,41,1.024,49,0.373,50,0.014,70,1.085,74,0.018,75,0.018,181,2.287,207,5.719,209,3.447,243,4.147,244,4.859,245,4.859,246,4.859]],["title/controllers/AuthController.html",[128,1.497,156,2.465]],["body/controllers/AuthController.html",[3,0.305,4,0.275,5,0.275,8,0.335,9,1.728,10,2.164,19,0.658,21,1.387,22,0.022,23,0.993,24,0.433,25,1.173,30,1.24,37,0.761,41,0.837,49,0.305,50,0.011,52,1.387,64,1.556,70,0.886,74,0.015,75,0.015,88,1.387,128,1.651,130,1.755,132,2.72,135,3.961,139,2.72,151,3.391,156,3.584,183,2.586,247,3.389,248,3.584,249,4.466,250,3.389,251,4.165,252,3.971,253,3.971,254,2.138,255,3.389,256,3.971,257,3.389,258,3.971,259,3.389,260,3.971,261,2.491,262,3.389,263,1.995,264,3.971,265,3.389,266,3.971,267,3.971,268,3.971]],["title/injectables/AuthService.html",[39,0.951,151,2.086]],["body/injectables/AuthService.html",[3,0.251,4,0.226,5,0.226,8,0.276,9,1.514,10,1.958,12,2.026,14,2.026,19,0.76,21,1.601,22,0.022,23,1.323,24,0.5,25,1.354,30,1.021,31,2.876,37,0.738,39,1.212,40,2.475,41,0.689,49,0.251,50,0.009,52,1.601,54,0.773,60,2.157,61,1.906,64,2.075,70,0.73,74,0.013,75,0.013,83,1.895,102,3.471,136,3.373,151,2.657,162,4.036,164,2.791,181,1.539,183,2.34,199,3.471,249,4.519,250,3.913,251,3.791,259,2.791,269,2.791,270,3.27,271,3.27,272,3.27,273,2.239,274,2.468,275,1.76,276,2.051,277,3.27,278,3.27,279,3.27,280,3.27,281,2.051,282,4.585,283,3.27,284,3.27,285,3.27,286,3.27,287,3.27,288,4.585,289,3.27,290,3.27,291,3.27,292,1.445,293,3.27,294,2.239]],["title/guards/AuthenticationGuard.html",[0,2.725,172,2.465]],["body/guards/AuthenticationGuard.html",[1,3.893,2,4.365,3,0.222,4,0.2,5,0.2,8,0.244,9,1.387,10,1.829,11,5.426,12,2.658,14,1.856,19,0.696,21,1.467,22,0.022,23,1.05,24,0.458,25,1.241,26,3.586,27,4.109,29,2.469,30,0.903,31,2.636,37,0.708,39,1.11,40,3.18,41,0.61,48,2.469,49,0.222,50,0.008,51,2.19,52,2.101,54,1.362,60,1.361,61,1.203,64,1.134,69,2.486,70,0.646,71,1.646,74,0.012,75,0.012,82,0.765,169,2.469,171,2.19,172,2.877,261,1.815,262,2.469,263,1.454,295,2.469,296,4.201,297,4.201,298,4.201,299,2.893,300,6.206,301,2.893,302,2.893,303,2.893,304,2.469,305,2.893,306,2.19,307,4.201,308,2.893,309,2.893,310,2.893,311,3.586,312,2.893,313,2.893,314,2.893,315,2.893,316,1.981,317,2.893,318,2.893,319,2.893,320,2.469,321,2.469,322,2.893,323,2.893,324,2.893,325,2.893,326,2.893,327,2.893,328,2.893]],["title/classes/CreateAdminDto.html",[50,0.01,191,2.465]],["body/classes/CreateAdminDto.html",[3,0.286,4,0.257,5,0.257,8,0.314,19,0.939,22,0.021,23,1.416,24,0.618,35,1.013,37,0.438,49,0.286,50,0.014,74,0.015,75,0.015,82,1.325,83,3.283,85,1.229,87,4.29,88,1.979,191,3.433,292,2.215,329,5.174,330,3.177,331,3.177,332,3.722,333,3.722,334,3.722,335,3.177,336,5.174,337,5.012,338,5.012,339,4.278,340,4.278,341,4.278,342,5.563,343,4.278,344,3.433,345,4.278,346,4.278,347,3.722,348,4.278,349,3.803,350,3.803,351,3.177,352,2.818,353,2.157,354,3.722,355,3.177,356,3.177]],["title/classes/CreateExamAssignmentDto.html",[50,0.01,357,2.465]],["body/classes/CreateExamAssignmentDto.html",[3,0.28,4,0.252,5,0.252,8,0.308,19,1.041,22,0.021,24,0.686,25,1.776,35,0.935,37,0.583,49,0.28,50,0.014,74,0.015,75,0.015,82,1.307,85,1.205,88,2.195,349,3.773,350,3.773,353,2.115,357,3.388,358,4.906,359,2.539,360,3.115,361,4.788,362,2.819,363,2.819,364,4.788,365,4.247,366,5.133,367,6.286,368,3.65,369,4.247,370,3.65,371,3.843,372,3.65,373,3.65,374,3.65,375,1.965,376,2.763]],["title/classes/CreateExamDto.html",[50,0.01,377,2.086]],["body/classes/CreateExamDto.html",[3,0.266,4,0.24,5,0.24,8,0.293,19,1.023,22,0.021,24,0.674,35,0.915,37,0.563,49,0.266,50,0.014,74,0.014,75,0.014,82,1.263,85,1.146,88,2.157,263,1.744,292,2.112,344,4.033,349,4.004,350,3.429,352,2.627,353,2.011,358,4.832,369,2.627,375,1.869,377,2.769,378,2.654,379,2.962,380,4.665,381,4.665,382,4.665,383,3.86,384,4.665,385,3.471,386,3.471,387,3.471,388,3.471,389,3.471,390,4.779,391,2.401,392,3.471,393,3.471,394,3.471,395,3.471,396,3.471,397,5.466,398,3.471,399,3.471,400,3.471,401,3.471,402,3.471,403,1.869]],["title/injectables/CreateExamProvider.html",[39,0.951,404,2.086]],["body/injectables/CreateExamProvider.html",[3,0.18,4,0.162,5,0.162,8,0.198,9,1.186,10,1.615,12,2.162,14,1.588,19,0.595,21,1.255,22,0.022,23,0.898,24,0.392,25,1.061,30,0.732,37,0.749,38,2.461,39,0.95,41,0.494,49,0.18,50,0.007,52,1.709,54,1.156,60,1.691,61,1.494,62,1.359,64,2.181,68,1.263,69,1.179,70,0.524,71,0.919,74,0.011,75,0.011,98,0.693,101,0.868,181,1.104,183,1.93,187,3.356,195,1.359,196,2.461,254,1.263,263,1.179,274,1.934,275,1.263,276,1.472,281,1.472,292,1.037,294,1.607,316,1.607,357,2.461,359,2.27,362,1.805,363,1.179,365,2.72,371,1.607,375,1.934,376,1.776,377,3.225,378,0.975,383,1.359,404,2.082,405,3.727,406,1.607,407,3.306,408,2.346,409,3.491,410,3.356,411,4.367,412,4.367,413,2.346,414,1.776,415,2.991,416,2.53,417,2.346,418,1.607,419,1.776,420,1.263,421,1.472,422,2.346,423,2.461,424,2.346,425,1.472,426,1.607,427,2.002,428,2.002,429,1.607,430,2.346,431,2.991,432,1.607,433,1.607,434,2.002,435,4.177,436,3.593,437,2.346,438,2.346,439,1.607,440,2.346,441,2.002,442,2.002,443,2.346,444,2.002,445,1.607,446,2.346,447,1.776,448,1.776,449,2.346,450,1.805,451,1.472,452,1.776,453,2.346,454,2.346,455,2.002,456,2.346,457,2.346,458,1.776,459,2.346,460,1.607,461,2.346,462,1.776,463,2.346,464,1.607,465,2.346,466,2.346,467,1.607,468,1.607]],["title/classes/Exam.html",[50,0.01,359,1.41]],["body/classes/Exam.html",[3,0.233,4,0.21,5,0.21,8,0.257,19,1.014,22,0.022,24,0.716,25,1.286,35,0.864,36,2.083,37,0.599,49,0.39,50,0.009,54,0.719,70,0.679,71,2.608,74,0.013,75,0.013,82,1.151,85,1.004,88,2.137,89,3.805,95,3.65,96,2.049,97,1.762,98,0.898,99,2.345,101,1.61,107,1.762,108,1.762,109,1.762,110,1.762,111,1.762,112,2.523,113,1.762,114,2.523,115,1.528,116,3.805,263,1.528,344,3.805,359,1.707,363,1.528,375,1.637,380,4.343,381,4.343,382,4.343,383,3.801,384,4.343,420,1.637,469,2.083,470,3.192,471,3.041,472,3.041,473,3.041,474,3.041,475,3.041,476,3.041,477,4.355,478,2.302,479,3.041,480,3.041,481,2.595,482,2.595,483,2.595]],["title/classes/ExamAssignment.html",[50,0.01,425,2.258]],["body/classes/ExamAssignment.html",[3,0.242,4,0.219,5,0.219,8,0.504,19,0.937,22,0.022,24,0.695,25,1.669,36,3.066,37,0.703,49,0.399,50,0.009,54,0.747,70,0.705,71,2.338,74,0.013,75,0.013,82,1.183,85,1.043,88,1.974,95,3.691,96,2.106,97,1.831,98,0.933,99,2.41,101,1.655,107,1.831,108,1.831,109,1.831,110,1.831,111,1.831,112,2.593,113,1.831,114,2.593,115,1.588,359,2.338,361,4.436,362,2.611,364,4.436,365,3.934,366,4.825,371,2.164,375,1.701,376,2.392,425,2.808,426,2.164,450,2.998,478,3.388,481,3.82,482,3.82,484,4.087,485,2.164,486,3.16,487,3.16,488,3.16,489,4.476,490,3.16,491,3.16,492,3.16,493,2.697,494,2.164,495,2.697]],["title/controllers/ExamController.html",[128,1.497,496,2.465]],["body/controllers/ExamController.html",[3,0.195,4,0.176,5,0.176,8,0.215,9,1.263,10,2.429,19,0.846,21,1.783,22,0.022,23,1.276,24,0.557,25,1.507,30,1.593,35,0.714,37,0.702,41,0.537,46,1.598,49,0.195,50,0.007,52,0.89,70,1.139,74,0.011,75,0.011,88,1.783,115,1.28,128,1.059,130,1.125,132,1.745,133,3.919,134,2.174,135,2.895,139,1.745,183,2.903,196,1.745,248,1.745,254,2.748,255,3.264,257,2.174,261,1.598,263,1.28,265,2.174,359,1.499,362,1.922,377,3.328,378,1.59,407,3.476,414,1.928,415,3.496,416,3.632,419,1.928,496,2.619,497,2.174,498,3.264,499,3.476,500,3.476,501,2.547,502,2.547,503,2.174,504,2.547,505,2.547,506,2.547,507,4.081,508,3.863,509,2.547,510,2.547,511,5.104,512,2.547,513,4.356,514,2.547,515,2.547,516,4.592,517,3.824,518,2.174,519,2.547,520,2.547,521,2.547,522,2.66,523,2.174,524,2.547,525,2.547,526,2.174,527,2.547,528,2.174,529,2.547,530,2.547,531,2.547,532,2.547,533,4.592,534,2.547,535,2.547,536,2.547,537,2.547,538,2.547,539,2.547,540,2.547,541,2.547,542,2.174,543,2.547]],["title/modules/ExamModule.html",[140,1.694,216,2.258]],["body/modules/ExamModule.html",[3,0.232,4,0.209,5,0.209,22,0.022,23,1.385,37,0.801,41,0.638,49,0.232,50,0.009,74,0.013,75,0.013,96,2.608,98,0.893,130,1.917,140,2.387,142,1.628,143,1.628,144,1.897,145,1.897,146,1.628,147,3.182,148,1.897,152,2.722,153,1.897,154,1.628,160,2.072,174,2.971,175,2.29,216,4.336,217,3.538,359,1.185,363,2.18,378,1.258,391,1.52,403,1.628,404,3.538,421,1.897,425,1.897,427,2.581,428,2.581,494,2.971,496,3.474,522,3.538,523,2.581,544,2.581,545,2.581,546,3.025,547,3.538,548,3.538,549,3.025,550,3.025,551,3.025,552,3.025,553,4.33,554,4.338,555,2.971,556,2.29,557,2.971,558,1.897,559,2.971,560,2.581,561,3.025,562,3.025,563,3.025,564,3.025]],["title/injectables/ExamService.html",[39,0.951,522,2.086]],["body/injectables/ExamService.html",[3,0.145,4,0.131,5,0.131,8,0.159,9,1,10,2.259,12,2.101,14,1.339,19,0.788,21,1.661,22,0.022,23,1.189,24,0.519,25,1.405,30,1.356,35,0.889,37,0.691,39,0.801,41,0.398,49,0.145,50,0.005,52,1.661,54,0.716,60,2.389,61,2.111,64,1.487,70,0.97,74,0.009,75,0.009,98,0.557,101,0.698,179,3.239,181,0.888,183,2.7,187,3.091,195,1.094,196,1.293,254,2.338,273,1.293,274,1.631,275,1.016,276,1.184,281,1.184,292,0.834,316,1.293,359,1.864,362,1.907,377,2.942,378,1.26,391,0.948,404,2.942,407,2.872,414,1.429,415,3.257,416,3.476,418,2.975,419,1.429,420,1.016,421,1.184,429,1.293,451,2.381,470,1.9,498,2.586,499,2.293,500,2.293,503,2.586,508,3.6,513,4.333,522,1.755,547,3.091,548,3.091,553,3.239,556,1.429,557,1.293,558,1.184,565,1.611,566,1.887,567,3.795,568,3.239,569,1.887,570,1.887,571,1.887,572,2.586,573,1.887,574,2.586,575,1.887,576,1.611,577,1.887,578,4.343,579,3.795,580,3.029,581,3.239,582,2.586,583,3.029,584,1.887,585,1.887,586,1.887,587,1.887,588,1.429,589,1.887,590,1.887,591,1.611,592,1.887,593,1.887,594,1.887,595,1.887,596,4.343,597,3.707,598,1.611,599,2.381,600,3.795,601,1.887,602,1.887,603,2.586,604,1.887,605,1.887,606,1.887,607,1.887,608,3.029,609,1.887]],["title/classes/GenerateTokenProvider.html",[50,0.01,162,2.258]],["body/classes/GenerateTokenProvider.html",[3,0.277,4,0.25,5,0.25,8,0.305,9,1.622,10,2.064,12,2.171,14,2.171,15,3.085,16,5.515,17,4.765,18,5.113,19,0.814,21,1.95,22,0.022,23,1.228,24,0.609,25,1.451,30,1.129,35,0.868,37,0.705,38,2.476,41,0.762,42,2.476,43,2.737,44,3.085,45,2.268,49,0.277,50,0.01,52,1.716,53,3.085,63,5.113,64,1.417,70,0.807,74,0.014,75,0.014,84,3.085,85,1.193,162,3.083,183,2.467,254,1.946,610,4.765,611,3.085,612,4.914,613,3.615,614,4.914,615,5.99,616,3.615,617,4.914,618,3.615,619,3.615,620,3.615,621,3.615,622,3.615,623,3.615]],["title/classes/GlobalHttpExceptionFilter.html",[50,0.01,624,2.725]],["body/classes/GlobalHttpExceptionFilter.html",[3,0.274,4,0.247,5,0.247,8,0.302,9,1.608,19,0.591,21,1.247,22,0.022,23,0.892,24,0.389,25,1.054,30,1.114,35,0.555,37,0.574,41,0.752,46,2.239,49,0.274,50,0.01,51,3.688,54,1.474,68,3.208,69,2.448,70,0.797,74,0.014,75,0.014,85,1.178,292,2.633,493,3.046,518,3.046,624,3.688,625,4.158,626,4.158,627,3.046,628,5.546,629,4.872,630,5.546,631,5.959,632,3.569,633,5.546,634,5.546,635,4.872,636,3.046,637,3.569,638,3.569,639,3.569,640,4.872,641,3.569,642,3.569,643,5.546,644,3.569,645,3.569,646,3.569,647,3.046,648,3.569,649,3.569,650,3.569,651,3.569,652,3.569,653,3.569,654,3.569]],["title/interfaces/IMcqQuestion.html",[76,1.694,655,2.465]],["body/interfaces/IMcqQuestion.html",[3,0.308,4,0.278,5,0.278,8,0.339,22,0.021,24,0.726,35,1.135,49,0.404,54,0.948,74,0.016,75,0.016,76,1.888,78,2.518,82,1.393,655,4.029,656,2.749,657,2.749,658,5.537,659,4.911,660,5.537,661,4.07,662,5.537,663,3.26,664,2.749,665,2.749]],["title/interfaces/IOeQuestion.html",[76,1.694,666,2.465]],["body/interfaces/IOeQuestion.html",[3,0.378,4,0.341,5,0.341,8,0.416,22,0.021,24,0.537,35,1.005,49,0.46,54,1.163,74,0.018,75,0.018,76,2.316,78,3.088,82,1.585,657,3.372,663,3.467,665,3.372,666,4.429,667,3.372,668,3.372]],["title/interfaces/IStudent.html",[76,1.694,669,2.465]],["body/interfaces/IStudent.html",[3,0.362,4,0.326,5,0.326,8,0.398,22,0.021,24,0.637,35,1.08,49,0.448,54,1.115,74,0.017,75,0.017,76,2.22,78,2.959,82,1.544,665,3.231,669,4.346,670,3.571,671,5.16,672,5.818,673,3.231]],["title/classes/LoginDto.html",[50,0.01,251,2.258]],["body/classes/LoginDto.html",[3,0.305,4,0.275,5,0.275,8,0.335,19,0.867,22,0.021,24,0.571,35,0.967,37,0.468,49,0.305,50,0.015,74,0.015,75,0.015,82,1.383,83,3.391,85,1.311,87,4.43,88,1.828,251,3.283,292,2.312,331,3.389,335,3.389,336,5.31,339,4.466,340,4.466,341,4.466,342,5.666,343,4.466,344,3.584,345,4.466,346,4.466,348,4.466,349,3.672,350,3.672,351,3.389,352,3.006,353,2.301,355,3.389,356,3.389,674,3.389,675,3.971,676,5.233,677,5.233,678,3.971]],["title/classes/Mcq.html",[50,0.01,378,1.497]],["body/classes/Mcq.html",[3,0.363,4,0.328,5,0.328,8,0.4,19,1.053,22,0.021,24,0.693,35,1.081,49,0.363,50,0.014,74,0.017,75,0.017,82,1.548,85,1.564,378,2.435,661,3.988,663,3.195,679,4.043,680,4.813,681,4.737,682,4.737,683,4.737]],["title/classes/McqQuestion.html",[50,0.01,391,1.809]],["body/classes/McqQuestion.html",[3,0.272,4,0.245,5,0.245,8,0.3,19,0.916,22,0.022,24,0.679,35,1.022,36,2.429,37,0.571,49,0.424,50,0.01,54,0.838,70,0.792,71,2.692,74,0.014,75,0.014,82,1.282,85,1.171,88,1.931,89,3.322,90,3.672,95,3.443,96,2.283,97,2.055,98,1.048,99,2.611,101,1.312,107,2.055,108,2.055,109,2.055,110,2.055,111,2.055,112,2.811,113,2.055,114,2.811,115,1.782,116,4.07,391,2.437,478,2.685,555,2.429,661,3.468,663,2.778,680,4.185,684,4.07,685,2.225,686,3.547,687,3.547,688,3.027,689,2.429,690,3.027]],["title/classes/OeQuestion.html",[50,0.01,403,1.938]],["body/classes/OeQuestion.html",[3,0.32,4,0.289,5,0.289,8,0.353,19,0.692,22,0.022,24,0.59,35,0.841,37,0.637,49,0.46,50,0.012,54,0.987,70,0.932,71,2.119,74,0.016,75,0.016,82,1.429,85,1.379,88,1.459,95,3.475,96,2.545,97,2.42,98,1.233,99,2.912,101,1.544,107,2.42,108,2.42,109,2.42,110,2.42,111,2.42,112,3.134,113,2.42,114,3.134,115,2.099,403,2.912,559,2.86,663,3.014,685,2.62,688,3.565,691,3.704,692,2.86,693,3.565]],["title/classes/Student.html",[50,0.01,450,1.809]],["body/classes/Student.html",[3,0.291,4,0.263,5,0.263,8,0.484,19,0.842,22,0.022,24,0.624,35,0.95,37,0.598,49,0.439,50,0.011,54,0.897,70,0.848,71,2.727,74,0.015,75,0.015,82,1.343,85,1.254,88,1.774,89,3.479,90,3.845,95,3.317,96,2.39,97,2.2,98,1.121,99,2.735,101,1.404,107,2.2,108,2.2,109,2.2,110,2.2,111,2.2,112,2.943,113,2.2,114,2.943,115,1.908,116,3.479,450,2.552,671,4.333,694,2.601,695,4.885,696,3.797,697,3.797,698,2.601,699,2.601,700,3.241]],["title/controllers/StudentController.html",[128,1.497,701,2.465]],["body/controllers/StudentController.html",[3,0.402,4,0.363,5,0.363,22,0.021,37,0.617,41,1.105,49,0.402,50,0.015,74,0.018,75,0.018,128,2.18,130,2.317,132,3.591,450,2.634,701,4.266,702,4.475,703,5.243]],["title/modules/StudentModule.html",[140,1.694,217,2.086]],["body/modules/StudentModule.html",[3,0.303,4,0.273,5,0.273,22,0.022,23,0.986,37,0.76,41,0.831,49,0.303,50,0.011,74,0.015,75,0.015,96,1.856,98,1.165,130,2.301,140,2.745,142,2.123,143,2.123,144,2.474,145,2.474,146,2.123,147,3.659,148,3.659,152,3.268,153,2.474,154,2.123,160,2.701,174,2.701,175,2.985,217,3.915,410,4.12,450,1.981,699,3.567,701,3.995,704,3.365,705,3.365,706,3.365,707,3.943,708,3.943,709,3.943,710,3.365,711,3.943]],["title/injectables/StudentService.html",[39,0.951,410,2.086]],["body/injectables/StudentService.html",[3,0.208,4,0.187,5,0.187,8,0.229,9,1.321,10,1.76,12,1.768,14,1.768,19,0.663,21,1.397,22,0.022,23,1,24,0.436,25,1.181,30,0.845,31,2.51,35,0.421,37,0.692,39,1.057,41,0.57,49,0.208,50,0.008,52,1.397,54,1.326,56,2.309,60,1.273,61,1.125,62,1.568,64,2.302,68,1.457,69,1.36,70,0.604,71,1.06,74,0.012,75,0.012,98,0.799,101,1.001,103,3.028,181,1.273,183,2.103,187,3.047,195,1.568,294,1.853,409,3.812,410,2.318,415,3.26,416,2.758,423,2.74,431,2.74,432,1.853,433,1.853,434,2.309,435,4.062,441,2.309,442,2.309,445,1.853,447,2.048,448,2.048,450,2.642,451,1.697,452,2.048,458,2.048,460,1.853,464,1.853,467,1.853,468,1.853,591,2.309,599,1.697,669,1.853,673,2.74,695,3.414,698,1.853,710,2.309,712,2.309,713,4.759,714,2.706,715,2.706,716,4,717,2.706,718,2.706,719,2.51,720,1.697,721,2.048,722,2.706,723,2.706,724,4.759,725,2.706,726,4,727,2.706,728,2.706,729,2.706,730,2.706,731,2.706,732,4,733,2.706,734,2.706,735,2.706,736,2.706,737,2.706,738,2.706,739,2.706,740,2.706,741,2.048,742,2.048]],["title/classes/UpdateMcqExamParamDto.html",[50,0.01,507,2.465]],["body/classes/UpdateMcqExamParamDto.html",[3,0.363,4,0.328,5,0.328,8,0.4,19,0.785,22,0.021,24,0.517,35,0.91,37,0.558,49,0.363,50,0.017,74,0.017,75,0.017,82,1.548,85,1.564,88,1.655,349,3.674,350,3.674,353,2.745,359,2.295,362,3.195,369,3.586,378,2.435,507,4.011,743,4.999,744,4.043,745,4.737]],["title/injectables/UpdateMcqExamProvider.html",[39,0.951,547,2.086]],["body/injectables/UpdateMcqExamProvider.html",[3,0.17,4,0.153,5,0.153,8,0.187,9,1.136,10,1.558,12,2.404,14,1.52,19,0.698,21,1.472,22,0.022,23,1.053,24,0.46,25,1.245,30,1.074,35,0.655,37,0.709,39,0.909,41,0.467,49,0.17,50,0.006,52,1.472,54,1.341,60,2.235,61,1.975,62,1.285,64,2.224,68,1.194,69,1.114,70,0.768,71,0.869,74,0.01,75,0.01,98,0.655,101,0.82,103,1.678,181,1.043,183,1.862,187,3.289,195,1.285,254,1.194,263,1.114,273,1.519,274,1.852,275,1.194,276,1.391,281,1.391,292,0.98,359,2.015,362,1.114,363,2.118,375,1.194,378,2.137,383,1.285,391,1.114,406,1.519,409,3.561,416,2.442,418,2.356,420,1.194,421,1.391,423,2.356,429,1.519,431,2.356,432,1.519,433,1.519,439,1.519,445,2.887,447,1.678,448,1.678,451,1.391,452,1.678,455,1.892,458,1.678,460,1.519,462,1.678,464,1.519,467,1.519,468,1.519,470,1.391,499,2.604,508,3.595,547,1.993,556,1.678,557,1.519,568,2.936,572,2.936,576,1.892,588,1.678,599,1.391,655,3.253,656,1.519,661,2.158,663,1.728,664,2.356,680,1.678,689,1.519,719,2.158,720,1.391,721,1.678,741,1.678,742,1.678,746,3.595,747,3.44,748,2.217,749,2.217,750,3.44,751,2.217,752,3.44,753,2.217,754,1.892,755,1.892,756,1.892,757,1.892,758,1.678,759,2.217,760,2.217,761,1.892,762,2.217,763,1.892,764,2.217,765,1.892,766,2.217,767,1.892,768,2.217,769,1.892,770,1.892,771,2.217,772,2.217,773,2.217,774,2.217,775,2.217,776,2.217,777,2.217,778,2.217,779,2.217,780,2.217,781,2.217]],["title/injectables/UpdateOeExamProvider.html",[39,0.951,548,2.086]],["body/injectables/UpdateOeExamProvider.html",[3,0.184,4,0.166,5,0.166,8,0.203,9,1.207,10,1.638,12,1.957,14,1.616,19,0.606,21,1.277,22,0.022,23,0.914,24,0.399,25,1.08,30,0.75,35,0.689,37,0.726,39,0.967,41,0.506,49,0.184,50,0.007,52,1.547,54,1.259,60,2.331,61,2.059,62,1.391,64,2.288,68,1.293,69,1.206,70,0.536,74,0.011,75,0.011,98,0.709,101,0.888,181,1.13,183,1.957,187,3.383,195,1.391,254,1.293,263,1.206,273,1.644,274,1.969,275,1.293,276,1.506,281,1.506,292,1.061,316,1.644,359,2.201,362,1.838,363,2.226,375,1.293,383,1.391,403,1.293,406,1.644,409,3.663,416,3.254,418,2.505,420,1.293,421,1.506,423,2.505,429,1.644,431,3.034,432,1.644,433,1.644,439,1.644,444,2.049,445,1.644,451,1.506,460,1.644,462,1.817,464,1.644,467,1.644,468,1.644,470,1.506,500,3.353,548,2.119,557,1.644,558,3.107,560,2.049,574,2.049,588,1.817,597,3.781,599,1.506,663,1.206,666,1.644,667,1.644,668,2.505,692,1.644,719,1.506,720,1.506,721,1.817,741,1.817,742,1.817,746,3.353,754,2.049,755,2.049,756,2.049,757,2.049,758,1.817,761,2.049,763,2.049,765,2.049,767,2.049,769,2.049,770,2.049,782,2.401,783,2.401,784,3.657,785,4.43,786,2.401,787,2.401,788,2.401,789,2.401,790,2.401,791,2.401,792,2.401,793,2.401,794,2.401,795,2.401,796,2.401,797,2.401,798,2.401,799,2.401,800,2.401,801,2.401,802,2.401]],["title/coverage.html",[803,3.709]],["body/coverage.html",[0,2.34,1,1.214,5,0.134,6,1.652,7,1.652,22,0.021,24,0.588,39,1.479,47,1.465,50,0.018,61,0.805,74,0.009,75,0.009,76,2.074,77,1.326,79,1.652,80,1.664,81,1.652,86,2.643,106,1.326,117,1.326,120,3.294,128,2.003,129,1.326,131,1.652,136,1.042,146,1.042,151,1.122,156,1.326,162,1.214,172,1.326,182,1.652,191,1.326,205,1.326,206,1.652,209,1.122,218,1.465,230,1.465,243,1.652,247,1.652,248,1.326,251,1.214,269,1.652,274,1.042,275,1.042,295,1.652,306,1.465,329,1.652,330,1.652,357,1.326,358,2.34,359,1.512,360,1.652,363,0.973,377,1.122,378,1.832,379,1.652,391,0.973,403,1.042,404,1.122,405,1.652,406,2.643,410,1.122,420,1.042,425,1.214,426,1.326,439,4.989,450,0.973,469,2.643,484,2.643,485,2.643,494,1.326,496,1.326,497,1.652,507,1.326,522,1.122,547,1.122,548,1.122,555,1.326,558,1.214,559,1.326,565,1.652,610,1.652,611,1.652,624,1.465,625,1.652,626,1.652,627,1.652,655,1.326,656,2.117,657,3.018,664,1.326,666,1.326,667,2.117,668,1.326,669,1.326,670,2.34,673,1.326,674,1.652,679,1.652,684,2.643,685,3.221,689,1.326,691,2.643,692,1.326,694,2.643,698,1.326,699,1.326,701,1.326,702,1.652,712,1.652,719,1.214,720,1.214,743,1.652,744,1.652,746,2.34,803,1.465,804,1.465,805,1.936,806,1.936,807,6.858,808,5.39,809,2.639,810,6.331,811,1.652,812,1.652,813,1.652,814,1.652,815,5.598,816,5.598,817,3.86,818,5.135,819,3.86,820,3.092,821,1.652,822,1.652,823,1.652,824,1.936,825,1.936]],["title/dependencies.html",[143,2.329,826,2.571]],["body/dependencies.html",[22,0.022,41,0.962,42,3.126,45,2.864,46,2.864,50,0.016,74,0.017,75,0.017,98,1.348,101,1.688,102,3.455,105,3.896,143,2.457,171,3.455,304,3.896,353,2.645,526,3.896,581,3.896,827,6.252,828,4.565,829,4.565,830,4.565,831,4.565,832,4.565,833,4.565,834,4.565,835,4.565,836,4.565,837,4.565,838,4.565,839,4.565,840,4.565,841,4.565,842,4.565,843,4.565]],["title/miscellaneous/enumerations.html",[844,1.514,845,3.692]],["body/miscellaneous/enumerations.html",[8,0.404,22,0.02,74,0.017,75,0.017,261,3.693,371,4.032,378,1.986,383,3.411,391,2.4,403,2.572,528,4.077,558,2.997,844,2.4,845,4.077,846,4.777,847,6.661,848,4.457,849,5.887,850,4.777,851,4.777,852,5.887,853,5.887,854,5.685,855,5.887]],["title/miscellaneous/functions.html",[844,1.514,856,3.692]],["body/miscellaneous/functions.html",[8,0.394,21,2.025,22,0.021,23,1.449,24,0.508,25,1.712,30,1.455,35,0.901,74,0.017,75,0.017,146,3.397,201,3.976,274,3.121,275,2.508,292,2.561,294,3.97,599,2.923,719,3.636,720,2.923,821,3.976,822,4.947,823,4.947,844,2.341,856,3.976,857,4.659,858,4.659,859,4.659,860,4.659,861,5.797,862,4.659]],["title/index.html",[8,0.254,863,2.571,864,2.571]],["body/index.html",[4,0.214,22,0.021,74,0.013,75,0.013,154,3.017,321,2.645,470,1.944,598,2.645,603,3.768,647,2.645,758,3.342,803,2.346,804,2.346,865,3.099,866,3.099,867,5.142,868,3.099,869,3.099,870,3.099,871,3.099,872,3.099,873,2.645,874,5.142,875,3.099,876,3.099,877,3.099,878,5.604,879,3.099,880,5.142,881,6.335,882,3.099,883,6.335,884,3.099,885,3.099,886,3.099,887,3.099,888,3.099,889,3.099,890,5.142,891,3.099,892,4.415,893,3.099,894,3.099,895,3.099,896,5.604,897,3.099,898,3.099,899,3.099,900,3.099,901,3.099,902,5.604,903,4.415,904,3.099,905,5.142,906,4.783,907,3.099,908,3.099,909,3.099,910,3.099,911,3.099,912,3.099,913,5.142,914,3.099,915,3.099,916,3.099,917,4.415,918,3.099,919,3.099,920,3.099,921,5.142,922,3.099,923,3.099,924,3.099,925,3.099,926,3.099,927,3.099,928,4.415,929,3.099,930,3.099,931,3.099,932,3.099,933,3.099,934,4.415,935,3.099,936,3.099,937,3.099,938,3.768,939,4.415,940,3.099,941,3.099,942,3.099,943,3.099,944,3.099,945,3.099,946,3.099,947,3.099,948,3.099,949,3.099,950,3.099,951,2.645,952,3.099,953,3.099,954,3.099,955,3.099,956,3.099,957,3.099,958,2.123]],["title/license.html",[863,2.571,864,2.571,958,2.063]],["body/license.html",[22,0.015,46,2.44,74,0.015,75,0.015,154,2.094,409,2.44,582,3.319,659,2.944,804,2.944,938,3.319,958,2.663,959,5.793,960,3.889,961,3.889,962,3.889,963,5.161,964,3.889,965,3.889,966,3.889,967,3.889,968,3.889,969,3.889,970,5.161,971,6.922,972,3.889,973,3.889,974,5.793,975,3.889,976,5.161,977,3.889,978,3.889,979,5.161,980,3.889,981,3.889,982,3.889,983,3.889,984,3.889,985,3.889,986,3.889,987,5.161,988,3.889,989,3.889,990,3.889,991,3.889,992,3.889,993,3.889,994,3.889,995,5.161,996,5.161,997,3.889,998,3.889,999,3.889,1000,3.889,1001,3.889,1002,3.889,1003,3.889,1004,3.889,1005,3.889,1006,3.889,1007,3.889,1008,3.889,1009,3.889,1010,3.889,1011,3.889,1012,3.889,1013,3.889,1014,3.889,1015,3.889,1016,3.889,1017,3.889,1018,3.889,1019,3.889,1020,3.889,1021,3.889,1022,3.889,1023,3.889,1024,3.889]],["title/modules.html",[142,2.638]],["body/modules.html",[22,0.018,74,0.018,75,0.018,141,3.244,142,2.784,212,3.541,216,3.244,217,2.996,906,5.84,1025,6.843,1026,6.843,1027,6.843]],["title/overview.html",[1028,4.182]],["body/overview.html",[2,2.763,22,0.021,74,0.015,75,0.015,78,2.29,85,1.205,130,1.613,136,3.02,140,1.718,141,4.157,142,1.965,143,1.965,144,2.29,145,2.29,146,1.965,147,2.29,148,2.29,149,3.115,150,3.115,151,3.251,152,3.103,153,2.29,154,1.965,181,1.718,209,3.251,212,4.732,213,3.115,214,3.115,215,3.115,216,4.436,217,3.84,404,3.251,410,3.84,522,3.251,542,3.115,544,3.115,545,3.115,547,3.251,548,3.251,704,3.115,705,3.115,706,3.115,1028,3.115,1029,4.946,1030,3.65,1031,3.65,1032,3.65]],["title/properties.html",[82,1.143,826,2.571]],["body/properties.html",[22,0.021,74,0.019,75,0.019,82,1.432,873,4.625,951,4.625,958,3.711,1033,5.419,1034,5.419,1035,5.419]],["title/miscellaneous/typealiases.html",[844,1.514,1036,4.326]],["body/miscellaneous/typealiases.html",[8,0.402,22,0.017,24,0.519,74,0.017,75,0.017,86,3.258,99,3.747,106,4.022,420,3.161,426,4.022,469,3.258,484,3.258,485,4.022,684,3.258,685,4.173,689,4.022,691,3.258,692,4.022,694,3.258,698,4.022,844,2.39,848,3.601,1037,4.757,1038,4.06,1039,4.06,1040,4.06,1041,4.06,1042,4.06]],["title/miscellaneous/variables.html",[844,1.514,1043,3.692]],["body/miscellaneous/variables.html",[8,0.253,22,0.022,24,0.638,27,2.271,33,2.561,35,0.67,47,3.265,54,1.019,67,2.561,70,0.67,74,0.013,75,0.013,77,2.954,86,2.055,117,2.954,118,2.561,199,3.823,218,2.271,230,3.265,231,2.561,248,2.954,261,2.706,306,3.265,311,3.682,320,5.891,363,2.167,469,2.055,483,2.561,484,2.055,485,2.954,494,2.954,495,2.561,555,2.954,559,2.954,636,2.561,656,2.055,657,3.782,658,2.561,659,2.271,660,2.561,661,1.882,662,2.561,663,2.167,664,2.954,665,2.055,667,2.055,668,2.954,670,2.271,671,2.271,672,2.561,673,2.954,684,2.055,685,3.464,690,2.561,691,2.055,693,2.561,694,2.055,699,2.954,700,2.561,809,2.561,811,2.561,812,3.682,813,3.682,814,2.561,844,1.508,848,2.271,854,5.891,1038,2.561,1039,2.561,1040,3.682,1041,3.682,1042,2.561,1043,2.561,1044,3.001,1045,3.001,1046,4.314,1047,3.001,1048,3.001,1049,3.001,1050,4.314,1051,3.001,1052,3.001,1053,3.001]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":439,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1034,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["0.18.5",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["17.13.3",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":542,"title":{},"body":{"controllers/ExamController.html":{},"overview.html":{}}}],["2025",{"_index":960,"title":{},"body":{"license.html":{}}}],["4",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1030,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1031,"title":{},"body":{"overview.html":{}}}],["8.1.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["8.13.2",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["_id",{"_index":591,"title":{},"body":{"injectables/ExamService.html":{},"injectables/StudentService.html":{}}}],["above",{"_index":994,"title":{},"body":{"license.html":{}}}],["access",{"_index":305,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["accesstoken",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["action",{"_index":1019,"title":{},"body":{"license.html":{}}}],["activeadmin",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeadmindata",{"_index":77,"title":{"interfaces/ActiveAdminData.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin",{"_index":80,"title":{"classes/Admin.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["admin.controller",{"_index":157,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.decorator.ts",{"_index":812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin.dto",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["admin.dto.ts:13",{"_index":334,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:18",{"_index":332,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:27",{"_index":347,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.name",{"_index":176,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["admincontroller",{"_index":129,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["admindocument",{"_index":106,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["adminid",{"_index":617,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["adminmodel",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminmodule",{"_index":141,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminschema",{"_index":117,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminschema.pre('save",{"_index":119,"title":{},"body":{"classes/Admin.html":{}}}],["adminservice",{"_index":136,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["affected",{"_index":730,"title":{},"body":{"injectables/StudentService.html":{}}}],["affectedmatricnos",{"_index":732,"title":{},"body":{"injectables/StudentService.html":{}}}],["affectedstudents",{"_index":735,"title":{},"body":{"injectables/StudentService.html":{}}}],["affectedstudents.map((s",{"_index":739,"title":{},"body":{"injectables/StudentService.html":{}}}],["alias",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":583,"title":{},"body":{"injectables/ExamService.html":{}}}],["amazing",{"_index":944,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":985,"title":{},"body":{"license.html":{}}}],["answer",{"_index":661,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":170,"title":{},"body":{"modules/AdminModule.html":{}}}],["appconfig",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":205,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":917,"title":{},"body":{"index.html":{}}}],["application/pdf",{"_index":602,"title":{},"body":{"injectables/ExamService.html":{}}}],["application/vnd.openxmlformats",{"_index":578,"title":{},"body":{"injectables/ExamService.html":{}}}],["applications",{"_index":872,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":212,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":209,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":631,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["arising",{"_index":1023,"title":{},"body":{"license.html":{}}}],["array",{"_index":317,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["array.isarray(exceptionresponse?.message",{"_index":649,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["assigment.schema",{"_index":428,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{}}}],["assigment.schema.ts",{"_index":485,"title":{},"body":{"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["assigment.schema.ts:23",{"_index":487,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:26",{"_index":490,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:29",{"_index":488,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assigment.schema.ts:32",{"_index":486,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["assignment.dto",{"_index":424,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["assignment.dto.ts",{"_index":360,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"coverage.html":{}}}],["assignment.dto.ts:11",{"_index":374,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:15",{"_index":372,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:18",{"_index":373,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:21",{"_index":368,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assignment.dto.ts:7",{"_index":370,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["assistant",{"_index":801,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["assistantid",{"_index":802,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["associated",{"_index":972,"title":{},"body":{"license.html":{}}}],["async",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["auth",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["auth/auth.controller",{"_index":158,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/config/jwt.config",{"_index":166,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/guards/access",{"_index":168,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/guards/authentication.guard",{"_index":173,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/providers/auth.service",{"_index":159,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/providers/generate",{"_index":163,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth_type_key",{"_index":306,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":156,"title":{"controllers/AuthController.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["authenticationguard",{"_index":172,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":315,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["author",{"_index":951,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":1012,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":151,"title":{"injectables/AuthService.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtype",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ExamController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":307,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":310,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguidemap",{"_index":296,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":311,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":318,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["await",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["b",{"_index":658,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":945,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":418,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["badrequestexception('error",{"_index":465,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["badrequestexception('exam",{"_index":757,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["badrequestexception('no",{"_index":440,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["badrequestexception('only",{"_index":580,"title":{},"body":{"injectables/ExamService.html":{}}}],["badrequestexception('question",{"_index":792,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["badrequestexception('questions",{"_index":760,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["bcrypt",{"_index":102,"title":{},"body":{"classes/Admin.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt(10",{"_index":123,"title":{},"body":{"classes/Admin.html":{}}}],["bcrypt.hash(this.password",{"_index":125,"title":{},"body":{"classes/Admin.html":{}}}],["bearer",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["board",{"_index":937,"title":{},"body":{"index.html":{}}}],["body",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1025,"title":{},"body":{"modules.html":{}}}],["building",{"_index":868,"title":{},"body":{"index.html":{}}}],["c",{"_index":659,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/CreateExamProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["catch((err",{"_index":327,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["catch(exception",{"_index":629,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["channel",{"_index":908,"title":{},"body":{"index.html":{}}}],["character",{"_index":346,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["characters",{"_index":341,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["charge",{"_index":967,"title":{},"body":{"license.html":{}}}],["check",{"_index":896,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1015,"title":{},"body":{"license.html":{}}}],["class",{"_index":50,"title":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{}},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["cluster_adminmodule",{"_index":149,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":150,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_exammodule",{"_index":544,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_exammodule_imports",{"_index":546,"title":{},"body":{"modules/ExamModule.html":{}}}],["cluster_exammodule_providers",{"_index":545,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_studentmodule",{"_index":704,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_exports",{"_index":705,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_providers",{"_index":706,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["collapsemcqlist",{"_index":771,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["collapsemcqlist.map((item",{"_index":779,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["come",{"_index":899,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":993,"title":{},"body":{"license.html":{}}}],["config/app.config",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["config/environment.validation",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["configmodule",{"_index":167,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":177,"title":{},"body":{"modules/AdminModule.html":{}}}],["configmodule.forroot",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.uri",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["connection",{"_index":409,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"license.html":{}}}],["console.error(error",{"_index":463,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["console.log(env",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(insertedquestionids",{"_index":799,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["const",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/variables.html":{}}}],["constants/auth.constants",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["constructor(adminmodel",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(connection",{"_index":408,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["constructor(createexamprovider",{"_index":566,"title":{},"body":{"injectables/ExamService.html":{}}}],["constructor(jwtservice",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["constructor(mcqquestionmodel",{"_index":748,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["constructor(oequestionmodel",{"_index":782,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["constructor(reflector",{"_index":299,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(studentmodel",{"_index":714,"title":{},"body":{"injectables/StudentService.html":{}}}],["context",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":314,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":313,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["contract",{"_index":1020,"title":{},"body":{"license.html":{}}}],["controller",{"_index":128,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('exam",{"_index":529,"title":{},"body":{"controllers/ExamController.html":{}}}],["controller('student",{"_index":703,"title":{},"body":{"controllers/StudentController.html":{}}}],["controllers",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["copies",{"_index":987,"title":{},"body":{"license.html":{}}}],["copy",{"_index":970,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":959,"title":{},"body":{"license.html":{}}}],["correct",{"_index":660,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["coursecode",{"_index":380,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["coursename",{"_index":381,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["courses",{"_index":915,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":803,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":316,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["createadmin",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(createadmindto",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmindto",{"_index":191,"title":{"classes/CreateAdminDto.html":{}},"body":{"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["created",{"_index":461,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["createexam",{"_index":407,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["createexam(createexamdto",{"_index":414,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["createexamassignmentdto",{"_index":357,"title":{"classes/CreateExamAssignmentDto.html":{}},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"coverage.html":{}}}],["createexamdto",{"_index":377,"title":{"classes/CreateExamDto.html":{}},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"coverage.html":{}}}],["createexamdto.examtype",{"_index":454,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["createexamprovider",{"_index":404,"title":{"injectables/CreateExamProvider.html":{}},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"coverage.html":{},"overview.html":{}}}],["createparamdecorator",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":466,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["credentials",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":636,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":638,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":662,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1016,"title":{},"body":{"license.html":{}}}],["data",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"miscellaneous/functions.html":{}}}],["data.interface.ts",{"_index":81,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{}}}],["database",{"_index":436,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["databaseconfig",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":366,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["deal",{"_index":973,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1024,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["decorators",{"_index":88,"title":{},"body":{"classes/Admin.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"classes/LoginDto.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["decorators/auth.decorator",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":910,"title":{},"body":{"index.html":{}}}],["default",{"_index":320,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":298,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["delete",{"_index":115,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["delete('mcq/:examid",{"_index":537,"title":{},"body":{"controllers/ExamController.html":{}}}],["deleted",{"_index":595,"title":{},"body":{"injectables/ExamService.html":{}}}],["deletemcqexam",{"_index":498,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["deletemcqexam(@param('examid",{"_index":538,"title":{},"body":{"controllers/ExamController.html":{}}}],["deletemcqexam(examid",{"_index":503,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["dependencies",{"_index":143,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":873,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":884,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":923,"title":{},"body":{"index.html":{}}}],["discord",{"_index":907,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":983,"title":{},"body":{"license.html":{}}}],["dive",{"_index":909,"title":{},"body":{"index.html":{}}}],["doc",{"_index":111,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["document",{"_index":795,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["documentation",{"_index":804,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["docx",{"_index":606,"title":{},"body":{"injectables/ExamService.html":{}}}],["dtos/create",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["dtos/login.dto",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/update",{"_index":520,"title":{},"body":{"controllers/ExamController.html":{}}}],["duration",{"_index":382,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["e2e",{"_index":893,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":869,"title":{},"body":{"index.html":{}}}],["eight",{"_index":340,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["email",{"_index":83,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["empty",{"_index":761,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["endtime",{"_index":361,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["enterprise",{"_index":927,"title":{},"body":{"index.html":{}}}],["enum",{"_index":480,"title":{},"body":{"classes/Exam.html":{}}}],["enumerations",{"_index":845,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/auth",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["enums/exam",{"_index":375,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["env",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["environmentvalidation",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":328,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["error",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["error.message",{"_index":741,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["event",{"_index":1011,"title":{},"body":{"license.html":{}}}],["exam",{"_index":359,"title":{"classes/Exam.html":{}},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["exam._id",{"_index":449,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam._id.tostring",{"_index":453,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.controller",{"_index":550,"title":{},"body":{"modules/ExamModule.html":{}}}],["exam.dto",{"_index":419,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["exam.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateExamDto.html":{},"coverage.html":{}}}],["exam.dto.ts:14",{"_index":387,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:19",{"_index":386,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:24",{"_index":389,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:29",{"_index":395,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:35",{"_index":393,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.examtype",{"_index":756,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exam.name",{"_index":561,"title":{},"body":{"modules/ExamModule.html":{}}}],["exam.provider",{"_index":553,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{}}}],["exam.provider.ts",{"_index":406,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["exam.provider.ts:17",{"_index":413,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.provider.ts:22",{"_index":783,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["exam.provider.ts:23",{"_index":749,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.provider.ts:32",{"_index":417,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["exam.provider.ts:34",{"_index":786,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["exam.provider.ts:35",{"_index":753,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.provider.ts:84",{"_index":751,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.questions",{"_index":592,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.questions.push(...insertedquestionids",{"_index":767,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exam.questions?.length",{"_index":589,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.save",{"_index":444,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exam.save({session",{"_index":768,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["exam.schema",{"_index":492,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["exam/exam.module",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["examassignment",{"_index":425,"title":{"classes/ExamAssignment.html":{}},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examassignment.name",{"_index":562,"title":{},"body":{"modules/ExamModule.html":{}}}],["examassignmentdocument",{"_index":426,"title":{},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["examassignmentmodel",{"_index":412,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examassignmentschema",{"_index":494,"title":{},"body":{"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examcontroller",{"_index":496,"title":{"controllers/ExamController.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examdocument",{"_index":420,"title":{},"body":{"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["examid",{"_index":362,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exammodel",{"_index":567,"title":{},"body":{"injectables/ExamService.html":{}}}],["exammodule",{"_index":216,"title":{"modules/ExamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules.html":{},"overview.html":{}}}],["example",{"_index":880,"title":{},"body":{"index.html":{}}}],["examschema",{"_index":363,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"modules/ExamModule.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examschemaenum",{"_index":371,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"miscellaneous/enumerations.html":{}}}],["examschemaenum.mcqexam",{"_index":456,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examschemaenum.theoryexam",{"_index":457,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["examservice",{"_index":522,"title":{"injectables/ExamService.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"coverage.html":{},"overview.html":{}}}],["examtype",{"_index":383,"title":{},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/enumerations.html":{}}}],["examtype.mcq",{"_index":455,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["examtype.oe",{"_index":788,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["exception",{"_index":633,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":627,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":632,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":644,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":641,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exception.message",{"_index":645,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":628,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse",{"_index":643,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse.message[0",{"_index":650,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exceptionresponse?.message",{"_index":651,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["exclude",{"_index":104,"title":{},"body":{"classes/Admin.html":{}}}],["executioncontext",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["expectedkeys",{"_index":861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["experience",{"_index":912,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":622,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["export",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["express",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/ExamController.html":{},"classes/GlobalHttpExceptionFilter.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":416,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["extract",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/StudentService.html":{}}}],["extractrequestfromheader",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(request",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":742,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["false",{"_index":493,"title":{},"body":{"classes/ExamAssignment.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["fetch",{"_index":729,"title":{},"body":{"injectables/StudentService.html":{}}}],["few",{"_index":897,"title":{},"body":{"index.html":{}}}],["field",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":524,"title":{},"body":{"controllers/ExamController.html":{}}}],["files",{"_index":582,"title":{},"body":{"injectables/ExamService.html":{},"license.html":{}}}],["filesinterceptor",{"_index":525,"title":{},"body":{"controllers/ExamController.html":{}}}],["filter",{"_index":448,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["filter((student",{"_index":725,"title":{},"body":{"injectables/StudentService.html":{}}}],["finally",{"_index":467,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["find",{"_index":737,"title":{},"body":{"injectables/StudentService.html":{}}}],["finduserbyemail",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["finduserbyemail(email",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{}}}],["fire",{"_index":323,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["fitness",{"_index":1007,"title":{},"body":{"license.html":{}}}],["follow",{"_index":930,"title":{},"body":{"index.html":{}}}],["following",{"_index":992,"title":{},"body":{"license.html":{}}}],["format",{"_index":608,"title":{},"body":{"injectables/ExamService.html":{}}}],["found",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["framework",{"_index":867,"title":{},"body":{"index.html":{}}}],["free",{"_index":966,"title":{},"body":{"license.html":{}}}],["full",{"_index":926,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":671,"title":{},"body":{"interfaces/IStudent.html":{},"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":120,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{}}}],["functions",{"_index":856,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":990,"title":{},"body":{"license.html":{}}}],["generate",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokenprovider",{"_index":162,"title":{"classes/GenerateTokenProvider.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{},"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["gethello",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":863,"title":{"index.html":{},"license.html":{}},"body":{}}],["globalhttpexceptionfilter",{"_index":624,"title":{"classes/GlobalHttpExceptionFilter.html":{}},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["granted",{"_index":965,"title":{},"body":{"license.html":{}}}],["graph",{"_index":918,"title":{},"body":{"index.html":{}}}],["grow",{"_index":941,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["guide",{"_index":605,"title":{},"body":{"injectables/ExamService.html":{}}}],["hands",{"_index":911,"title":{},"body":{"index.html":{}}}],["handy",{"_index":900,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":127,"title":{},"body":{"classes/Admin.html":{}}}],["header",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["hello",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":924,"title":{},"body":{"index.html":{}}}],["here",{"_index":949,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":964,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1013,"title":{},"body":{"license.html":{}}}],["host",{"_index":630,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":637,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["http",{"_index":626,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["httpcode",{"_index":519,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.created",{"_index":530,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.created)@auth(authtype.none)@post()@useinterceptors(undefined",{"_index":501,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok",{"_index":533,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@delete('mcq/:examid",{"_index":504,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@patch('mcq/:examid')@useinterceptors(undefined",{"_index":509,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpcode(httpstatus.ok)@patch('oe/:examid')@useinterceptors(undefined",{"_index":514,"title":{},"body":{"controllers/ExamController.html":{}}}],["httpexception",{"_index":634,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":955,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":518,"title":{},"body":{"controllers/ExamController.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":642,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["hydrateddocument",{"_index":99,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":731,"title":{},"body":{"injectables/StudentService.html":{}}}],["imcqquestion",{"_index":655,"title":{"interfaces/IMcqQuestion.html":{}},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{}}}],["imcqquestionexpectedkeys",{"_index":664,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"classes/GlobalHttpExceptionFilter.html":{}}}],["implied",{"_index":1003,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["imports",{"_index":174,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["included",{"_index":997,"title":{},"body":{"license.html":{}}}],["including",{"_index":976,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["inject",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/CreateExamProvider.html":{},"classes/GenerateTokenProvider.html":{}}}],["inject(jwtconfig.key",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"overview.html":{}}}],["injectconnection",{"_index":423,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel(admin.name",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel(exam.name",{"_index":429,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel(examassignment.name",{"_index":430,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["injectmodel(mcqquestion.name",{"_index":576,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["injectmodel(oequestion.name",{"_index":787,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["injectmodel(student.name",{"_index":723,"title":{},"body":{"injectables/StudentService.html":{}}}],["insert",{"_index":434,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["insertedquestionids",{"_index":765,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["insertedstudentids",{"_index":724,"title":{},"body":{"injectables/StudentService.html":{}}}],["insertone",{"_index":794,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["insertstudents",{"_index":713,"title":{},"body":{"injectables/StudentService.html":{}}}],["insertstudents(tutoriallist",{"_index":717,"title":{},"body":{"injectables/StudentService.html":{}}}],["installcompile",{"_index":882,"title":{},"body":{"index.html":{}}}],["instance",{"_index":324,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instance.canactivate(context",{"_index":326,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["instanceof",{"_index":640,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["interact",{"_index":919,"title":{},"body":{"index.html":{}}}],["interface",{"_index":76,"title":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"coverage.html":{}}}],["interfaces",{"_index":78,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"overview.html":{}}}],["internal",{"_index":646,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["internalservererrorexception",{"_index":103,"title":{},"body":{"classes/Admin.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["internalservererrorexception('error",{"_index":126,"title":{},"body":{"classes/Admin.html":{}}}],["ioeexpectedkeys",{"_index":668,"title":{},"body":{"interfaces/IOeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ioequestion",{"_index":666,"title":{"interfaces/IOeQuestion.html":{}},"body":{"interfaces/IOeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["isdate",{"_index":367,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{}}}],["isemail",{"_index":348,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isnotempty()@isstring",{"_index":331,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["isenum",{"_index":396,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isenum(examtype",{"_index":390,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isglobal",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":397,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isint()@isnotempty()@min(1",{"_index":394,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isint()@isnotempty()@min(10",{"_index":388,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isnotempty",{"_index":349,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["ispasswordvalid",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":350,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["isstring()@isnotempty",{"_index":369,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/UpdateMcqExamParamDto.html":{}}}],["isstring()@isnotempty()@minlength(3",{"_index":333,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["isstring()@isnotempty()@minlength(6",{"_index":385,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":335,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["istudent",{"_index":669,"title":{"interfaces/IStudent.html":{}},"body":{"interfaces/IStudent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["istudentexpectedkeys",{"_index":673,"title":{},"body":{"interfaces/IStudent.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":781,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["item.question",{"_index":780,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["job",{"_index":934,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":936,"title":{},"body":{"index.html":{}}}],["joi",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":947,"title":{},"body":{"index.html":{}}}],["jwtconfig",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"classes/GenerateTokenProvider.html":{}}}],["jwtconfiguration",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["jwtmodule",{"_index":165,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":178,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtservice",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["kamil",{"_index":952,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":665,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1002,"title":{},"body":{"license.html":{}}}],["learn",{"_index":904,"title":{},"body":{"index.html":{}}}],["legend",{"_index":144,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["letter",{"_index":343,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["liability",{"_index":1017,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1014,"title":{},"body":{"license.html":{}}}],["license",{"_index":958,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":939,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":977,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1004,"title":{},"body":{"license.html":{}}}],["linkedin",{"_index":932,"title":{},"body":{"index.html":{}}}],["list",{"_index":442,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["load",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":251,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":933,"title":{},"body":{"index.html":{}}}],["loop",{"_index":321,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["map((student",{"_index":727,"title":{},"body":{"injectables/StudentService.html":{}}}],["marking",{"_index":604,"title":{},"body":{"injectables/ExamService.html":{}}}],["markingguide",{"_index":785,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["matches",{"_index":351,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["matches(/^(?=.*[a",{"_index":356,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["matching",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matric",{"_index":672,"title":{},"body":{"interfaces/IStudent.html":{},"miscellaneous/variables.html":{}}}],["matricno",{"_index":695,"title":{},"body":{"classes/Student.html":{},"injectables/StudentService.html":{}}}],["mcq",{"_index":378,"title":{"classes/Mcq.html":{}},"body":{"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/Mcq.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mcq.a",{"_index":774,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.b",{"_index":775,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.c",{"_index":776,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.d",{"_index":777,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq.question",{"_index":773,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcq['correct",{"_index":778,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqexam",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mcqexammodel",{"_index":411,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["mcqlist",{"_index":752,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqlist.length",{"_index":759,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqlist.map((mcq",{"_index":772,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["mcqquestion",{"_index":391,"title":{"classes/McqQuestion.html":{}},"body":{"classes/CreateExamDto.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mcqquestion.name",{"_index":563,"title":{},"body":{"modules/ExamModule.html":{}}}],["mcqquestiondocument",{"_index":689,"title":{},"body":{"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mcqquestionmodel",{"_index":568,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["mcqquestionschema",{"_index":555,"title":{},"body":{"modules/ExamModule.html":{},"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mcqtemplate",{"_index":508,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["mcqtemplate.mimetype",{"_index":585,"title":{},"body":{"injectables/ExamService.html":{}}}],["merchantability",{"_index":1006,"title":{},"body":{"license.html":{}}}],["merge",{"_index":981,"title":{},"body":{"license.html":{}}}],["message",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/LoginDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":9,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["mguide",{"_index":596,"title":{},"body":{"injectables/ExamService.html":{}}}],["min",{"_index":398,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["min(1",{"_index":402,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["min(10",{"_index":400,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["minimum",{"_index":339,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["minlength",{"_index":352,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{}}}],["minlength(3",{"_index":354,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["minlength(6",{"_index":399,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["minlength(8",{"_index":355,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["minutes",{"_index":401,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["miscellaneous",{"_index":844,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":938,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":758,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"index.html":{}}}],["model",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["modify",{"_index":980,"title":{},"body":{"license.html":{}}}],["module",{"_index":140,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["modules",{"_index":142,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":101,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"injectables/ExamService.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":481,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAssignment.html":{}}}],["mongoose.types.objectid",{"_index":477,"title":{},"body":{"classes/Exam.html":{}}}],["mongoosemodule",{"_index":160,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["mongoosemodule.forfeature",{"_index":175,"title":{},"body":{"modules/AdminModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":905,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":953,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":598,"title":{},"body":{"injectables/ExamService.html":{},"index.html":{}}}],["nest",{"_index":874,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":957,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":902,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/GenerateTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":171,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AdminModule.html":{},"classes/GenerateTokenProvider.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":98,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":526,"title":{},"body":{"controllers/ExamController.html":{},"dependencies.html":{}}}],["new",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["newadmin",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{}}}],["newadmin.save",{"_index":204,"title":{},"body":{"injectables/AdminService.html":{}}}],["node.js",{"_index":866,"title":{},"body":{"index.html":{}}}],["none",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":1010,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["notfoundexception('exam",{"_index":588,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["notfoundexception('user",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["notice",{"_index":995,"title":{},"body":{"license.html":{}}}],["npm",{"_index":881,"title":{},"body":{"index.html":{}}}],["null",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":344,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/LoginDto.html":{}}}],["object.values(result.insertedids",{"_index":798,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["object.values(result.upsertedids",{"_index":766,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["observable",{"_index":303,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["obtaining",{"_index":969,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":652,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["oe",{"_index":558,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["oeq.question",{"_index":796,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oeqlist",{"_index":789,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oeqlist.length",{"_index":791,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oeqlist.map((oeq",{"_index":793,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oequestion",{"_index":403,"title":{"classes/OeQuestion.html":{}},"body":{"classes/CreateExamDto.html":{},"modules/ExamModule.html":{},"classes/OeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["oequestion'})@isnotempty",{"_index":392,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["oequestion.name",{"_index":564,"title":{},"body":{"modules/ExamModule.html":{}}}],["oequestiondocument",{"_index":692,"title":{},"body":{"classes/OeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["oequestionmodel",{"_index":784,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["oequestionschema",{"_index":559,"title":{},"body":{"modules/ExamModule.html":{},"classes/OeQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oetemplate",{"_index":597,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["offer",{"_index":935,"title":{},"body":{"index.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":579,"title":{},"body":{"injectables/ExamService.html":{}}}],["officedocument.wordprocessingml.document",{"_index":601,"title":{},"body":{"injectables/ExamService.html":{}}}],["official",{"_index":913,"title":{},"body":{"index.html":{}}}],["ojuri",{"_index":962,"title":{},"body":{"license.html":{}}}],["oluwafemi",{"_index":961,"title":{},"body":{"license.html":{}}}],["one",{"_index":342,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["open",{"_index":940,"title":{},"body":{"index.html":{}}}],["operations",{"_index":445,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["optional",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":680,"title":{},"body":{"classes/Mcq.html":{},"classes/McqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["otherwise",{"_index":1022,"title":{},"body":{"license.html":{}}}],["out",{"_index":154,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1028,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":826,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ExamController.html":{}}}],["param.dto",{"_index":521,"title":{},"body":{"controllers/ExamController.html":{}}}],["param.dto.ts",{"_index":744,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:6",{"_index":745,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":721,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["parser.ts",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsetemplate",{"_index":719,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsetemplate(oetemplate",{"_index":790,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["parsetemplate(template",{"_index":860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["part",{"_index":925,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1008,"title":{},"body":{"license.html":{}}}],["password",{"_index":87,"title":{},"body":{"classes/Admin.html":{},"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["patch",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ExamController.html":{}}}],["patch('mcq/:examid",{"_index":534,"title":{},"body":{"controllers/ExamController.html":{}}}],["patch('oe/:examid",{"_index":540,"title":{},"body":{"controllers/ExamController.html":{}}}],["payload",{"_index":63,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/GenerateTokenProvider.html":{}}}],["pdf",{"_index":607,"title":{},"body":{"injectables/ExamService.html":{}}}],["permission",{"_index":963,"title":{},"body":{"license.html":{}}}],["permit",{"_index":988,"title":{},"body":{"license.html":{}}}],["person",{"_index":968,"title":{},"body":{"license.html":{}}}],["persons",{"_index":989,"title":{},"body":{"license.html":{}}}],["please",{"_index":603,"title":{},"body":{"injectables/ExamService.html":{},"index.html":{}}}],["portions",{"_index":999,"title":{},"body":{"license.html":{}}}],["post",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["post()@auth(authtype.none)@useinterceptors(classserializerinterceptor",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ExamController.html":{},"controllers/StudentController.html":{}}}],["preparelistforbulkwrite",{"_index":747,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["preparelistforbulkwrite(mcqlist",{"_index":750,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["private",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["process.env.node_env",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":888,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":865,"title":{},"body":{"index.html":{}}}],["project",{"_index":878,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/StudentService.html":{}}}],["promise.resolve",{"_index":325,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["prop",{"_index":95,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["prop({enum",{"_index":474,"title":{},"body":{"classes/Exam.html":{}}}],["prop({required",{"_index":89,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["prop({type",{"_index":478,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{}}}],["properties",{"_index":82,"title":{"properties.html":{}},"body":{"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"classes/UpdateMcqExamParamDto.html":{},"properties.html":{}}}],["provide",{"_index":179,"title":{},"body":{"modules/AdminModule.html":{},"injectables/ExamService.html":{}}}],["provided",{"_index":1000,"title":{},"body":{"license.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["providers/admin.service",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["providers/auth.service",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["providers/create",{"_index":552,"title":{},"body":{"modules/ExamModule.html":{}}}],["providers/exam.service",{"_index":523,"title":{},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{}}}],["providers/student.service",{"_index":709,"title":{},"body":{"modules/StudentModule.html":{}}}],["providers/update",{"_index":554,"title":{},"body":{"modules/ExamModule.html":{}}}],["public",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["publish",{"_index":982,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1009,"title":{},"body":{"license.html":{}}}],["question",{"_index":663,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/variables.html":{}}}],["question.interface",{"_index":754,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["question.interface.ts",{"_index":657,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["question.schema",{"_index":557,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["question.schema.ts",{"_index":685,"title":{},"body":{"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.schema.ts:19",{"_index":688,"title":{},"body":{"classes/McqQuestion.html":{},"classes/OeQuestion.html":{}}}],["question.schema.ts:22",{"_index":687,"title":{},"body":{"classes/McqQuestion.html":{}}}],["question.schema.ts:25",{"_index":686,"title":{},"body":{"classes/McqQuestion.html":{}}}],["questioncount",{"_index":384,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["questions",{"_index":470,"title":{},"body":{"classes/Exam.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"index.html":{}}}],["read",{"_index":948,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["real",{"_index":920,"title":{},"body":{"index.html":{}}}],["record",{"_index":308,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["ref",{"_index":489,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["reflect",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":300,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["refpath",{"_index":482,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAssignment.html":{}}}],["related",{"_index":594,"title":{},"body":{"injectables/ExamService.html":{}}}],["repository",{"_index":877,"title":{},"body":{"index.html":{}}}],["request",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request[request_user_key",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":116,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["reset",{"_index":153,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["resources",{"_index":898,"title":{},"body":{"index.html":{}}}],["response",{"_index":635,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":653,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["restriction",{"_index":975,"title":{},"body":{"license.html":{}}}],["result",{"_index":763,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["results",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":112,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["ret._id",{"_index":114,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["ret.id",{"_index":113,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["return",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":978,"title":{},"body":{"license.html":{}}}],["run",{"_index":883,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":304,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["s._id.tostring",{"_index":740,"title":{},"body":{"injectables/StudentService.html":{}}}],["s['matric",{"_index":734,"title":{},"body":{"injectables/StudentService.html":{}}}],["salt",{"_index":122,"title":{},"body":{"classes/Admin.html":{}}}],["save",{"_index":770,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["scalable",{"_index":870,"title":{},"body":{"index.html":{}}}],["schema",{"_index":96,"title":{},"body":{"classes/Admin.html":{},"modules/AdminModule.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"modules/ExamModule.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"modules/StudentModule.html":{}}}],["schema.enum",{"_index":376,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["schema.enum.ts",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schemafactory",{"_index":97,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["schemafactory.createforclass(admin",{"_index":118,"title":{},"body":{"classes/Admin.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(exam",{"_index":483,"title":{},"body":{"classes/Exam.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(examassignment",{"_index":495,"title":{},"body":{"classes/ExamAssignment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mcqquestion",{"_index":690,"title":{},"body":{"classes/McqQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(oequestion",{"_index":693,"title":{},"body":{"classes/OeQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":700,"title":{},"body":{"classes/Student.html":{},"miscellaneous/variables.html":{}}}],["schemas/admin.schema",{"_index":161,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["schemas/exam",{"_index":427,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{}}}],["schemas/exam.schema",{"_index":421,"title":{},"body":{"injectables/CreateExamProvider.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["schemas/mcq/mcq",{"_index":556,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["schemas/oe/oe",{"_index":560,"title":{},"body":{"modules/ExamModule.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["schemas/student.schema",{"_index":710,"title":{},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["secret",{"_index":620,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["sell",{"_index":986,"title":{},"body":{"license.html":{}}}],["server",{"_index":647,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"index.html":{}}}],["session",{"_index":431,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session(session",{"_index":738,"title":{},"body":{"injectables/StudentService.html":{}}}],["session.aborttransaction",{"_index":464,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session.committransaction",{"_index":460,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session.endsession",{"_index":468,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["session.starttransaction",{"_index":433,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["set",{"_index":452,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["setmetadata(auth_type_key",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":879,"title":{},"body":{"index.html":{}}}],["shall",{"_index":996,"title":{},"body":{"license.html":{}}}],["side",{"_index":871,"title":{},"body":{"index.html":{}}}],["signtoken",{"_index":612,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["signtoken(adminid",{"_index":614,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["software",{"_index":971,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"index.html":{}}}],["special",{"_index":345,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["sponsors",{"_index":943,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../admin.schema.ts",{"_index":1038,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constants.ts",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exam",{"_index":848,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../exam.schema.ts",{"_index":1039,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mcq",{"_index":1040,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../oe",{"_index":1041,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../response",{"_index":859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../student.interface.ts",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../student.schema.ts",{"_index":1042,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../template",{"_index":858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/admin/admin.controller.ts",{"_index":131,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.module.ts",{"_index":155,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/auth/auth.controller.ts",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/admin/auth/auth.controller.ts:14",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/admin/auth/constants/auth.constants.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/decorators/active",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/decorators/auth.decorator",{"_index":527,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/admin/auth/decorators/auth.decorator.ts",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/auth/dtos/login.dto.ts",{"_index":674,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/admin/auth/dtos/login.dto.ts:13",{"_index":675,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/admin/auth/dtos/login.dto.ts:22",{"_index":678,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/admin/auth/enums/auth",{"_index":528,"title":{},"body":{"controllers/ExamController.html":{},"miscellaneous/enumerations.html":{}}}],["src/admin/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/admin/auth/guards/authentication.guard.ts",{"_index":295,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/admin/auth/guards/authentication.guard.ts:23",{"_index":301,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/admin/auth/guards/authentication.guard.ts:30",{"_index":302,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/admin/auth/interfaces/active",{"_index":79,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"coverage.html":{}}}],["src/admin/auth/providers/auth.service.ts",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/admin/auth/providers/auth.service.ts:13",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/auth/providers/auth.service.ts:20",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/auth/providers/generate",{"_index":610,"title":{},"body":{"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["src/admin/dtos/create",{"_index":329,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["src/admin/providers/admin.service",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/admin/providers/admin.service.ts",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/providers/admin.service.ts:14",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/providers/admin.service.ts:23",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/providers/admin.service.ts:8",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/schemas/admin.schema.ts",{"_index":86,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/admin/schemas/admin.schema.ts:22",{"_index":92,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/schemas/admin.schema.ts:25",{"_index":91,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/schemas/admin.schema.ts:29",{"_index":94,"title":{},"body":{"classes/Admin.html":{}}}],["src/app.controller.ts",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["src/exam/dtos/create",{"_index":358,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"coverage.html":{}}}],["src/exam/dtos/mcq.dto.ts",{"_index":679,"title":{},"body":{"classes/Mcq.html":{},"coverage.html":{}}}],["src/exam/dtos/mcq.dto.ts:2",{"_index":683,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/mcq.dto.ts:3",{"_index":682,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/mcq.dto.ts:4",{"_index":681,"title":{},"body":{"classes/Mcq.html":{}}}],["src/exam/dtos/update",{"_index":743,"title":{},"body":{"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["src/exam/enums/exam",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/exam/exam.controller.ts",{"_index":497,"title":{},"body":{"controllers/ExamController.html":{},"coverage.html":{}}}],["src/exam/exam.controller.ts:29",{"_index":502,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:39",{"_index":510,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:48",{"_index":505,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.controller.ts:55",{"_index":515,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/exam.module.ts",{"_index":549,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/exam/providers/create",{"_index":405,"title":{},"body":{"injectables/CreateExamProvider.html":{},"coverage.html":{}}}],["src/exam/providers/exam.service.ts",{"_index":565,"title":{},"body":{"injectables/ExamService.html":{},"coverage.html":{}}}],["src/exam/providers/exam.service.ts:17",{"_index":569,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:30",{"_index":570,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:45",{"_index":573,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:57",{"_index":571,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/exam.service.ts:73",{"_index":575,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/providers/update",{"_index":746,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{}}}],["src/exam/schemas/exam",{"_index":484,"title":{},"body":{"classes/ExamAssignment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/exam.schema.ts",{"_index":469,"title":{},"body":{"classes/Exam.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/exam.schema.ts:20",{"_index":472,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:23",{"_index":471,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:26",{"_index":473,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:29",{"_index":475,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:32",{"_index":476,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/exam.schema.ts:37",{"_index":479,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/schemas/mcq/mcq",{"_index":684,"title":{},"body":{"classes/McqQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/exam/schemas/oe/oe",{"_index":691,"title":{},"body":{"classes/OeQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/filters/global",{"_index":625,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/student/providers/student.service",{"_index":422,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["src/student/providers/student.service.ts",{"_index":712,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/student/providers/student.service.ts:12",{"_index":715,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/providers/student.service.ts:20",{"_index":718,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/schemas/student.schema",{"_index":491,"title":{},"body":{"classes/ExamAssignment.html":{}}}],["src/student/schemas/student.schema.ts",{"_index":694,"title":{},"body":{"classes/Student.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/student/schemas/student.schema.ts:20",{"_index":696,"title":{},"body":{"classes/Student.html":{}}}],["src/student/schemas/student.schema.ts:23",{"_index":697,"title":{},"body":{"classes/Student.html":{}}}],["src/student/student.controller.ts",{"_index":702,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student.module",{"_index":551,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/student/student.module.ts",{"_index":707,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/utils/interfaces/mcq",{"_index":656,"title":{},"body":{"interfaces/IMcqQuestion.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/interfaces/oe",{"_index":667,"title":{},"body":{"interfaces/IOeQuestion.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/interfaces/student.interface",{"_index":722,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/utils/interfaces/student.interface.ts",{"_index":670,"title":{},"body":{"interfaces/IStudent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/response",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/template",{"_index":720,"title":{},"body":{"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":885,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":887,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":889,"title":{},"body":{"index.html":{}}}],["started",{"_index":864,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":876,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":364,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"classes/ExamAssignment.html":{}}}],["statements",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":297,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["status",{"_index":639,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["stay",{"_index":928,"title":{},"body":{"index.html":{}}}],["string",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":450,"title":{"classes/Student.html":{}},"body":{"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{},"classes/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["student.controller",{"_index":708,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.name",{"_index":711,"title":{},"body":{"modules/StudentModule.html":{}}}],["student/student.module",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["student['matric",{"_index":726,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentcontroller",{"_index":701,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentdocument",{"_index":698,"title":{},"body":{"classes/Student.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["studentid",{"_index":365,"title":{},"body":{"classes/CreateExamAssignmentDto.html":{},"injectables/CreateExamProvider.html":{},"classes/ExamAssignment.html":{}}}],["studentmodel",{"_index":716,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentmodule",{"_index":217,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["students",{"_index":435,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["students.length",{"_index":438,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["students.map((s",{"_index":733,"title":{},"body":{"injectables/StudentService.html":{}}}],["students.map((student",{"_index":446,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["studentschema",{"_index":699,"title":{},"body":{"classes/Student.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentservice",{"_index":410,"title":{"injectables/StudentService.html":{}},"body":{"injectables/CreateExamProvider.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["sub",{"_index":84,"title":{},"body":{"interfaces/ActiveAdminData.html":{},"classes/GenerateTokenProvider.html":{}}}],["subject",{"_index":991,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":984,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":998,"title":{},"body":{"license.html":{}}}],["success",{"_index":654,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["successful",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":462,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["successresponse",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["successresponse(__namedparameters",{"_index":862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["support",{"_index":906,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["t",{"_index":615,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["table",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":599,"title":{},"body":{"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"miscellaneous/functions.html":{}}}],["template.mimetype",{"_index":600,"title":{},"body":{"injectables/ExamService.html":{}}}],["templates",{"_index":513,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["test",{"_index":892,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":895,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":894,"title":{},"body":{"index.html":{}}}],["tests",{"_index":890,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":942,"title":{},"body":{"index.html":{}}}],["theoryexam",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.accesstokenguard",{"_index":309,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.adminmodel(createadmindto",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findone",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.finduserbyemail(logindto.email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appservice.gethello",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authtypeguidemap[type]).flat",{"_index":319,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.connection.startsession",{"_index":432,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["this.createexamprovider.createexam(createexamdto",{"_index":584,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.examassignmentmodel.bulkwrite(operations",{"_index":459,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.exammodel.findbyid(examid",{"_index":587,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.exammodel.findbyidanddelete(examid",{"_index":593,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.examschema.findbyid(examid",{"_index":755,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["this.examservice.createexam(createexamdto",{"_index":532,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.deletemcqexam(examid",{"_index":539,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.updatemcqexam(updateexamparamdto.examid",{"_index":536,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.updateoeexam(updateexamparamdto.examid",{"_index":543,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.extractrequestfromheader(request",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.generatetokenprovider.signtoken(user._id.tohexstring",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ismodified('password",{"_index":121,"title":{},"body":{"classes/Admin.html":{}}}],["this.jwtconfiguration",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":623,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.secret",{"_index":621,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":619,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["this.jwtservice.verifyasync",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.mcqexammodel.create(createexamdto",{"_index":443,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.mcqquestionmodel.bulkwrite(operations",{"_index":764,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.mcqquestionmodel.deletemany",{"_index":590,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.oequestionmodel.bulkwrite(operations",{"_index":797,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["this.password",{"_index":124,"title":{},"body":{"classes/Admin.html":{}}}],["this.preparelistforbulkwrite(mcqlist",{"_index":762,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{}}}],["this.reflector.getallandoverride(auth_type_key",{"_index":312,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.studentmodel",{"_index":736,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentmodel.bulkwrite(operations",{"_index":728,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentservice.insertstudents(tutoriallist",{"_index":437,"title":{},"body":{"injectables/CreateExamProvider.html":{}}}],["this.updatemcqexamprovider.updatemcqexam(examid",{"_index":586,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.updateoeexamprovider.updateoeexam(examid",{"_index":609,"title":{},"body":{"injectables/ExamService.html":{}}}],["through",{"_index":322,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["throw",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["time",{"_index":921,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":107,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["todo",{"_index":800,"title":{},"body":{"injectables/UpdateOeExamProvider.html":{}}}],["tojson",{"_index":108,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["token",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard",{"_index":169,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:15",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:29",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:53",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":164,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthService.html":{}}}],["token.provider.ts",{"_index":611,"title":{},"body":{"classes/GenerateTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:14",{"_index":616,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["token.provider.ts:6",{"_index":613,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["tort",{"_index":1021,"title":{},"body":{"license.html":{}}}],["touch",{"_index":950,"title":{},"body":{"index.html":{}}}],["transform",{"_index":110,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["transformer",{"_index":105,"title":{},"body":{"classes/Admin.html":{},"dependencies.html":{}}}],["true",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["true})@exclude",{"_index":93,"title":{},"body":{"classes/Admin.html":{}}}],["try",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Admin.html":{},"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["tutorial",{"_index":441,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{}}}],["tutoriallist",{"_index":415,"title":{},"body":{"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{}}}],["tutoriallist.mimetype",{"_index":577,"title":{},"body":{"injectables/ExamService.html":{}}}],["twitter",{"_index":956,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveAdminData.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"classes/GlobalHttpExceptionFilter.html":{},"interfaces/IMcqQuestion.html":{},"interfaces/IOeQuestion.html":{},"interfaces/IStudent.html":{},"classes/LoginDto.html":{},"classes/Mcq.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UpdateMcqExamParamDto.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateExamDto.html":{},"injectables/CreateExamProvider.html":{},"classes/Exam.html":{},"controllers/ExamController.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["type.enum.ts",{"_index":847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1036,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":648,"title":{},"body":{"classes/GlobalHttpExceptionFilter.html":{}}}],["types",{"_index":100,"title":{},"body":{"classes/Admin.html":{}}}],["typescript",{"_index":875,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{}}}],["unique",{"_index":90,"title":{},"body":{"classes/Admin.html":{},"classes/McqQuestion.html":{},"classes/Student.html":{}}}],["unit",{"_index":891,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateExamProvider.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/GenerateTokenProvider.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["unlicensed",{"_index":1035,"title":{},"body":{"properties.html":{}}}],["update",{"_index":451,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updated",{"_index":769,"title":{},"body":{"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updateexamparamdto",{"_index":511,"title":{},"body":{"controllers/ExamController.html":{}}}],["updatemcqexam",{"_index":499,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updatemcqexam(examid",{"_index":572,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updatemcqexam(updateexamparamdto",{"_index":506,"title":{},"body":{"controllers/ExamController.html":{}}}],["updatemcqexamparamdto",{"_index":507,"title":{"classes/UpdateMcqExamParamDto.html":{}},"body":{"controllers/ExamController.html":{},"classes/UpdateMcqExamParamDto.html":{},"coverage.html":{}}}],["updatemcqexamprovider",{"_index":547,"title":{"injectables/UpdateMcqExamProvider.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updateoeexam",{"_index":500,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updateoeexam(examid",{"_index":574,"title":{},"body":{"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["updateoeexam(updateexamparamdto",{"_index":512,"title":{},"body":{"controllers/ExamController.html":{}}}],["updateoeexamprovider",{"_index":548,"title":{"injectables/UpdateOeExamProvider.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/UpdateOeExamProvider.html":{},"coverage.html":{},"overview.html":{}}}],["updateone",{"_index":447,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["updates",{"_index":929,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":516,"title":{},"body":{"controllers/ExamController.html":{}}}],["uploadedfiles",{"_index":517,"title":{},"body":{"controllers/ExamController.html":{}}}],["upsert",{"_index":458,"title":{},"body":{"injectables/CreateExamProvider.html":{},"injectables/StudentService.html":{},"injectables/UpdateMcqExamProvider.html":{}}}],["uri",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":979,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":180,"title":{},"body":{"modules/AdminModule.html":{}}}],["usefactory",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExamController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('mcqlist",{"_index":535,"title":{},"body":{"controllers/ExamController.html":{}}}],["useinterceptors(fileinterceptor('tutoriallist",{"_index":531,"title":{},"body":{"controllers/ExamController.html":{}}}],["useinterceptors(filesinterceptor('templates",{"_index":541,"title":{},"body":{"controllers/ExamController.html":{}}}],["user",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.[field",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":922,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":353,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateExamAssignmentDto.html":{},"classes/CreateExamDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMcqExamParamDto.html":{},"dependencies.html":{}}}],["value",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1043,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1033,"title":{},"body":{"properties.html":{}}}],["video",{"_index":914,"title":{},"body":{"index.html":{}}}],["virtuals",{"_index":109,"title":{},"body":{"classes/Admin.html":{},"classes/Exam.html":{},"classes/ExamAssignment.html":{},"classes/McqQuestion.html":{},"classes/OeQuestion.html":{},"classes/Student.html":{}}}],["visit",{"_index":903,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":916,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1005,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1001,"title":{},"body":{"license.html":{}}}],["watch",{"_index":886,"title":{},"body":{"index.html":{}}}],["website",{"_index":954,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1018,"title":{},"body":{"license.html":{}}}],["without",{"_index":974,"title":{},"body":{"license.html":{}}}],["working",{"_index":901,"title":{},"body":{"index.html":{}}}],["world",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["writer",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateExamProvider.html":{},"injectables/ExamService.html":{},"injectables/UpdateMcqExamProvider.html":{},"injectables/UpdateOeExamProvider.html":{}}}],["writer.ts",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["x",{"_index":931,"title":{},"body":{"index.html":{}}}],["xlsx",{"_index":581,"title":{},"body":{"injectables/ExamService.html":{},"dependencies.html":{}}}],["yes",{"_index":618,"title":{},"body":{"classes/GenerateTokenProvider.html":{}}}],["you'd",{"_index":946,"title":{},"body":{"index.html":{}}}],["z\\d@$!%*#?&.]{8",{"_index":677,"title":{},"body":{"classes/LoginDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":338,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&.])[a",{"_index":676,"title":{},"body":{"classes/LoginDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":337,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["za",{"_index":336,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/LoginDto.html":{}}}],["zoom",{"_index":152,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/auth/guards/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/guards/access-token.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/access-token.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/access-token.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { Request } from 'express';\nimport { REQUEST_USER_KEY } from '../constants/auth.constants';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    /**\n     * Inject jwtService\n     */\n    private readonly jwtService: JwtService,\n\n    /**\n     * Inject jwtConfig\n     */\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n\n    // Extract the token from the header\n    const token = this.extractRequestFromHeader(request);\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    \n    try {\n      const payload = await this.jwtService.verifyAsync(\n        token,\n        this.jwtConfiguration,\n      );\n      request[REQUEST_USER_KEY] = payload;\n      \n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n\n    return true;\n  }\n\n  private extractRequestFromHeader(request: Request): string | undefined {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveAdminData.html":{"url":"interfaces/ActiveAdminData.html","title":"interface - ActiveAdminData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveAdminData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/interfaces/active-admin-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveAdminData {\n    sub: string;\n    name: string;\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/schemas/admin.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/schemas/admin.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, Types } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { InternalServerErrorException } from '@nestjs/common';\nimport { Exclude } from 'class-transformer';\n\nexport type AdminDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Admin {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  @Exclude()\n  password: string;\n}\n\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\nAdminSchema.pre('save', async function () {\n  if (!this.isModified('password')) {\n    return;\n  }\n\n  try {\n    const salt = await bcrypt.genSalt(10);\n    this.password = await bcrypt.hash(this.password, salt);\n  } catch (error) {\n    throw new InternalServerErrorException('Error hashing password');\n  }\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Delete, Param, Patch, Post } from '@nestjs/common';\nimport { AdminService } from './providers/admin.service';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AuthController } from './auth/auth.controller';\nimport { AuthService } from './auth/providers/auth.service';\nimport { AdminService } from './providers/admin.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Admin, AdminSchema } from './schemas/admin.schema';\nimport { GenerateTokenProvider } from './auth/providers/generate-token.provider';\nimport { JwtModule } from '@nestjs/jwt';\nimport jwtConfig from './auth/config/jwt.config';\nimport { ConfigModule } from '@nestjs/config';\nimport { AccessTokenGuard } from './auth/guards/access-token.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthenticationGuard } from './auth/guards/authentication.guard';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Admin.name,\n        schema: AdminSchema,\n      },\n    ]),\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  controllers: [AdminController, AuthController],\n  providers: [\n    AuthService,\n    AdminService,\n    GenerateTokenProvider,\n    AccessTokenGuard,\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n  ],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/providers/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAdmin\n                            \n                            \n                                    Public\n                                    Async\n                                findUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/admin/providers/admin.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAdmin(createAdminDto: CreateAdminDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/providers/admin.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAdminDto\n                                            \n                                                            CreateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/providers/admin.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Admin, AdminDocument } from '../schemas/admin.schema';\nimport { Model } from 'mongoose';\nimport { CreateAdminDto } from '../dtos/create-admin.dto';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    @InjectModel(Admin.name)\n    private readonly adminModel: Model,\n  ) {}\n\n  public async findUserByEmail(email: string): Promise {\n    let user = await this.adminModel.findOne({ email });\n    if (!user) {\n      return null;\n    }\n\n    return user;\n  }\n\n  public async createAdmin(createAdminDto: CreateAdminDto): Promise {\n    const newAdmin = new this.adminModel(createAdminDto);\n    return await newAdmin.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            ExamModule\n                        \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AdminModule } from './admin/admin.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ExamModule } from './exam/exam.module';\nimport { StudentModule } from './student/student.module';\nimport environmentValidation from './config/environment.validation';\nimport appConfig from './config/app.config';\nimport databaseConfig from './config/database.config';\n\nconst ENV = process.env.NODE_ENV;\nconsole.log(ENV);\n\n@Module({\n  imports: [\n    AdminModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      validationSchema: environmentValidation,\n      load: [appConfig, databaseConfig],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('database.uri'),\n      }),\n    }),\n    ExamModule,\n    StudentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Auth(AuthType.None)@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/admin/auth/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { LoginDto } from './dtos/login.dto';\nimport { Auth } from './decorators/auth.decorator';\nimport { AuthType } from './enums/auth-type.enum';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService){}\n\n    @Post()\n    @Auth(AuthType.None)\n    @UseInterceptors(ClassSerializerInterceptor)\n    public async login(@Body() loginDto: LoginDto) {\n        return await this.authService.login(loginDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, generateTokenProvider: GenerateTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/providers/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateTokenProvider\n                                                  \n                                                        \n                                                                        GenerateTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/providers/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { successResponse } from 'src/utils/response-writer';\nimport * as bcrypt from 'bcrypt';\nimport { AdminService } from 'src/admin/providers/admin.service';\nimport { GenerateTokenProvider } from './generate-token.provider';\nimport { LoginDto } from '../dtos/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly adminService: AdminService,\n\n    private readonly generateTokenProvider: GenerateTokenProvider,\n  ) {}\n\n  public async login(loginDto: LoginDto): Promise {\n    let user = await this.adminService.findUserByEmail(loginDto.email);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    let isPasswordValid = await bcrypt.compare(\n      loginDto.password,\n      user.password,\n    );\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const accessToken = await this.generateTokenProvider.signToken(user._id.toHexString(), {\n      email: user.email,\n      name: user.name,\n    });\n\n    return successResponse({\n      message: 'Login successful',\n      data: { accessToken },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/auth/guards/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuideMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/guards/authentication.guard.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/guards/authentication.guard.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthType } from '../enums/auth-type.enum';\nimport { AccessTokenGuard } from './access-token.guard';\nimport { Reflector } from '@nestjs/core';\nimport { AUTH_TYPE_KEY } from '../constants/auth.constants';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  private readonly authTypeGuideMap: Record = {\n    [AuthType.Bearer]: this.accessTokenGuard,\n    [AuthType.None]: { canActivate: () => true },\n  };\n\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    // get authTypes from reflector\n    const authTypes = this.reflector.getAllAndOverride(AUTH_TYPE_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]) ?? [AuthenticationGuard.defaultAuthType];\n\n    // create array of all the guards\n    const guards = authTypes.map((type) => this.authTypeGuideMap[type]).flat();\n\n    // Default error\n    const error = new UnauthorizedException();\n\n    // loop through guards, fire canActivate\n    for (const instance of guards) {\n      const canActivate = await Promise.resolve(\n        instance.canActivate(context),\n      ).catch((err) => {\n        err;\n      });\n      if (canActivate) {\n        return true;\n      }\n    }\n\n    throw error;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminDto.html":{"url":"classes/CreateAdminDto.html","title":"class - CreateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dtos/create-admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dtos/create-admin.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateAdminDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  name: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamAssignmentDto.html":{"url":"classes/CreateExamAssignmentDto.html","title":"class - CreateExamAssignmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamAssignmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-exam-assignment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                    \n                                examId\n                            \n                            \n                                    \n                                    \n                                examSchema\n                            \n                            \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                    \n                                studentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examSchemaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-exam-assignment.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsNotEmpty, IsString } from \"class-validator\";\nimport { examSchemaEnum } from \"../enums/exam-schema.enum\";\n\nexport class CreateExamAssignmentDto {\n    @IsString()\n    @IsNotEmpty()\n    examId: string;\n\n    @IsString()\n    @IsNotEmpty()\n    studentId: string;\n\n    @IsString()\n    @IsNotEmpty()\n    examSchema: examSchemaEnum;\n\n    @IsDate()\n    startTime?: Date;\n\n    @IsDate()\n    endTime?: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamDto.html":{"url":"classes/CreateExamDto.html","title":"class - CreateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-mcq-exam.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                courseCode\n                            \n                            \n                                    \n                                    \n                                courseName\n                            \n                            \n                                    \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                examType\n                            \n                            \n                                    \n                                    \n                                    \n                                questionCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        courseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(examType, {message: 'examType must be either McqQuestion or OeQuestion'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        questionCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/create-mcq-exam.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsString,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { examType } from '../enums/exam-type.enum';\n\nexport class CreateExamDto {\n  @IsString()\n  @IsNotEmpty()\n  courseName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  courseCode: string;\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(10)\n  duration: number; // in minutes\n\n  @IsInt()\n  @IsNotEmpty()\n  @Min(1)\n  questionCount: number;\n\n  @IsEnum(examType, {\n    message: 'examType must be either McqQuestion or OeQuestion',\n  })\n  @IsNotEmpty()\n  examType: examType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateExamProvider.html":{"url":"injectables/CreateExamProvider.html","title":"injectable - CreateExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/create-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, studentService: StudentService, mcqExamModel: Model, examAssignmentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/create-exam.provider.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqExamModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examAssignmentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/create-exam.provider.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { CreateExamDto } from '../dtos/create-mcq-exam.dto';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { StudentService } from 'src/student/providers/student.service';\nimport { Connection, Model } from 'mongoose';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { CreateExamAssignmentDto } from '../dtos/create-exam-assignment.dto';\nimport { examType } from '../enums/exam-type.enum';\nimport { examSchemaEnum } from '../enums/exam-schema.enum';\nimport {\n  ExamAssignment,\n  ExamAssignmentDocument,\n} from '../schemas/exam-assigment.schema';\nimport { successResponse } from 'src/utils/response-writer';\n\n@Injectable()\nexport class CreateExamProvider {\n  constructor(\n    @InjectConnection()\n    private readonly connection: Connection,\n\n    @Inject()\n    private readonly studentService: StudentService,\n\n    @InjectModel(Exam.name)\n    private readonly mcqExamModel: Model,\n\n    @InjectModel(ExamAssignment.name)\n    private readonly examAssignmentModel: Model,\n  ) {}\n\n  public async createExam(\n    createExamDto: CreateExamDto,\n    tutorialList: Express.Multer.File,\n  ) {\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    // Insert the students into the database\n    const students = await this.studentService.insertStudents(tutorialList);\n\n    if (!students || students.length === 0) {\n      throw new BadRequestException('No students found in the tutorial list');\n    }\n\n    try {\n      // Create the exam in the database\n      const exam = await this.mcqExamModel.create(createExamDto);\n      await exam.save({ session });\n\n      const operations = students.map((student) => ({\n        updateOne: {\n          filter: { examId: exam._id, studentId: student },\n          update: {\n            $set: {\n              examId: exam._id.toString(),\n              studentId: student,\n              examSchema:\n                createExamDto.examType == examType.MCQ\n                  ? examSchemaEnum.McqExam\n                  : examSchemaEnum.TheoryExam,\n            } as CreateExamAssignmentDto,\n          },\n          upsert: true,\n        },\n      }));\n\n      await this.examAssignmentModel.bulkWrite(operations, { session });\n      await session.commitTransaction();\n\n      return successResponse({\n        message: 'Exam created successfully',\n        data: { exam },\n      });\n    } catch (error) {\n      console.error(error);\n      session.abortTransaction();\n      throw new BadRequestException('Error creating exam');\n    } finally {\n      session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exam.html":{"url":"classes/Exam.html","title":"class - Exam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/exam.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                courseCode\n                            \n                            \n                                    \n                                courseName\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                examType\n                            \n                            \n                                    \n                                questionCount\n                            \n                            \n                                    \n                                    Optional\n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         examType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: examType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        questionCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { examType } from '../enums/exam-type.enum';\n\nexport type ExamDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Exam {\n  @Prop({ required: true })\n  courseName: string;\n\n  @Prop({ required: true })\n  courseCode: string;\n\n  @Prop({ required: true })\n  duration: number;\n\n  @Prop({ enum: examType })\n  examType: examType;\n\n  @Prop({ required: true })\n  questionCount: number;\n\n  @Prop({\n    type: [{ type: mongoose.Schema.Types.ObjectId, refPath: 'examType' }],\n  })\n  questions?: mongoose.Types.ObjectId[];\n}\n\nexport const ExamSchema = SchemaFactory.createForClass(Exam);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAssignment.html":{"url":"classes/ExamAssignment.html","title":"class - ExamAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/exam-assigment.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                examId\n                            \n                            \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                studentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exam\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, refPath: 'Exam', index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Student', index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/exam-assigment.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Student } from 'src/student/schemas/student.schema';\nimport { examSchemaEnum } from '../enums/exam-schema.enum';\nimport { Exam } from './exam.schema';\n\nexport type ExamAssignmentDocument = HydratedDocument;\n\n@Schema({\n  timestamps: false,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class ExamAssignment {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, refPath: 'Exam', index: true })\n  examId: Exam;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Student', index: true })\n  studentId: Student;\n\n  @Prop()\n  startTime?: Date;\n\n  @Prop()\n  endTime?: Date;\n}\n\nexport const ExamAssignmentSchema = SchemaFactory.createForClass(ExamAssignment)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExamController.html":{"url":"controllers/ExamController.html","title":"controller - ExamController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/exam.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exam\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createExam\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteMcqExam\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.CREATED)@Auth(AuthType.None)@Post()@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMcqExam(examId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Delete('mcq/:examId')\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(updateExamParamDto: UpdateMcqExamParamDto, mcqTemplate: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Patch('mcq/:examId')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateExamParamDto\n                                            \n                                                            UpdateMcqExamParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(updateExamParamDto: UpdateMcqExamParamDto, templates: Express.Multer.File[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Patch('oe/:examId')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/exam/exam.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateExamParamDto\n                                            \n                                                            UpdateMcqExamParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                templates\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Patch,\n  Delete,\n  Param,\n  UseInterceptors,\n  UploadedFile,\n  UploadedFiles,\n  Body,\n  HttpStatus,\n  HttpCode,\n} from '@nestjs/common';\nimport { CreateExamDto } from './dtos/create-mcq-exam.dto';\nimport { UpdateMcqExamParamDto } from './dtos/update-mcq-exam-param.dto';\nimport { ExamService } from './providers/exam.service';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { Auth } from 'src/admin/auth/decorators/auth.decorator';\nimport { AuthType } from 'src/admin/auth/enums/auth-type.enum';\n\n@Controller('exam')\nexport class ExamController {\n  constructor(private readonly examService: ExamService) {}\n\n  @HttpCode(HttpStatus.CREATED)\n  @Auth(AuthType.None)\n  @Post()\n  @UseInterceptors(FileInterceptor('tutorialList'))\n  public async createExam(\n    @Body() createExamDto: CreateExamDto,\n    @UploadedFile() tutorialList: Express.Multer.File,\n  ) {\n    return this.examService.createExam(createExamDto, tutorialList);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Patch('mcq/:examId')\n  @UseInterceptors(FileInterceptor('mcqList'))\n  public async updateMcqExam(\n    @Param() updateExamParamDto: UpdateMcqExamParamDto,\n    @UploadedFile() mcqTemplate: Express.Multer.File,\n  ) {\n    return this.examService.updateMcqExam(updateExamParamDto.examId, mcqTemplate);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Delete('mcq/:examId')\n  public async deleteMcqExam(@Param('examId') examId: string) {\n    return this.examService.deleteMcqExam(examId)\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Patch('oe/:examId')\n  @UseInterceptors(FilesInterceptor('templates', 2))\n  public async updateOeExam(\n    @Param() updateExamParamDto: UpdateMcqExamParamDto,\n    @UploadedFiles() templates: Express.Multer.File[],\n  ) {\n    return this.examService.updateOeExam(updateExamParamDto.examId, templates);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExamModule.html":{"url":"modules/ExamModule.html","title":"module - ExamModule","body":"\n                   \n\n\n\n\n    Modules\n    ExamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_ExamModule_imports\n\n\n\n\nStudentModule\n\nStudentModule\n\n\n\nExamModule\n\nExamModule\n\nExamModule -->\n\nStudentModule->ExamModule\n\n\n\n\n\nCreateExamProvider\n\nCreateExamProvider\n\nExamModule -->\n\nCreateExamProvider->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nUpdateMcqExamProvider\n\nUpdateMcqExamProvider\n\nExamModule -->\n\nUpdateMcqExamProvider->ExamModule\n\n\n\n\n\nUpdateOeExamProvider\n\nUpdateOeExamProvider\n\nExamModule -->\n\nUpdateOeExamProvider->ExamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/exam/exam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateExamProvider\n                        \n                        \n                            ExamService\n                        \n                        \n                            UpdateMcqExamProvider\n                        \n                        \n                            UpdateOeExamProvider\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExamController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExamController } from './exam.controller';\nimport { ExamService } from './providers/exam.service';\nimport { StudentModule } from 'src/student/student.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Exam, ExamSchema } from './schemas/exam.schema';\nimport { ExamAssignment, ExamAssignmentSchema } from './schemas/exam-assigment.schema';\nimport { CreateExamProvider } from './providers/create-exam.provider';\nimport { UpdateMcqExamProvider } from './providers/update-mcq-exam.provider';\nimport { McqQuestion, McqQuestionSchema } from './schemas/mcq/mcq-question.schema';\nimport { UpdateOeExamProvider } from './providers/update-oe-exam.provider';\nimport { OeQuestion, OeQuestionSchema } from './schemas/oe/oe-question.schema';\n\n@Module({\n  controllers: [ExamController],\n  providers: [ExamService, CreateExamProvider, UpdateMcqExamProvider, UpdateOeExamProvider],\n  imports: [\n    StudentModule,\n    MongooseModule.forFeature([\n      {\n        name: Exam.name,\n        schema: ExamSchema,\n      },\n      {\n        name: ExamAssignment.name,\n        schema: ExamAssignmentSchema,\n      },\n      {\n        name: McqQuestion.name,\n        schema: McqQuestionSchema\n      },\n      {\n        name: OeQuestion.name,\n        schema: OeQuestionSchema\n      }\n    ]),\n  ],\n})\nexport class ExamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamService.html":{"url":"injectables/ExamService.html","title":"injectable - ExamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/exam.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createExam\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMcqExam\n                            \n                            \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                            \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createExamProvider: CreateExamProvider, updateMcqExamProvider: UpdateMcqExamProvider, updateOeExamProvider: UpdateOeExamProvider, examModel: Model, mcqQuestionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/exam.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createExamProvider\n                                                  \n                                                        \n                                                                        CreateExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateMcqExamProvider\n                                                  \n                                                        \n                                                                        UpdateMcqExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateOeExamProvider\n                                                  \n                                                        \n                                                                        UpdateOeExamProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mcqQuestionModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createExam(createExamDto: CreateExamDto, tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExamDto\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMcqExam(examId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(examId: string, mcqTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(examId: string, templates: Express.Multer.File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/exam.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                templates\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateExamDto } from '../dtos/create-mcq-exam.dto';\nimport { CreateExamProvider } from './create-exam.provider';\nimport { UpdateMcqExamProvider } from './update-mcq-exam.provider';\nimport { Model } from 'mongoose';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { successResponse } from 'src/utils/response-writer';\nimport { McqQuestion } from '../schemas/mcq/mcq-question.schema';\nimport { UpdateOeExamProvider } from './update-oe-exam.provider';\n\n@Injectable()\nexport class ExamService {\n  constructor(\n    private readonly createExamProvider: CreateExamProvider,\n    private readonly updateMcqExamProvider: UpdateMcqExamProvider,\n    private readonly updateOeExamProvider: UpdateOeExamProvider,\n\n    @InjectModel(Exam.name)\n    private readonly examModel: Model,\n\n    @InjectModel(McqQuestion.name)\n    private readonly mcqQuestionModel: Model,\n  ) {}\n\n  public async createExam(\n    createExamDto: CreateExamDto,\n    tutorialList: Express.Multer.File,\n  ) {\n    if (\n      !tutorialList ||\n      tutorialList.mimetype !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      throw new BadRequestException('Only .xlsx files are allowed');\n    }\n\n    return this.createExamProvider.createExam(createExamDto, tutorialList);\n  }\n\n  public async updateMcqExam(examId: string, mcqTemplate: Express.Multer.File) {\n    if (\n      !mcqTemplate ||\n      mcqTemplate.mimetype !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      throw new BadRequestException('Only .xlsx files are allowed');\n    }\n\n    return this.updateMcqExamProvider.updateMcqExam(examId, mcqTemplate);\n  }\n\n  public async deleteMcqExam(examId: string) {\n    const exam = await this.examModel.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    if (exam.questions?.length) {\n      await this.mcqQuestionModel.deleteMany({ _id: { $in: exam.questions } });\n    }\n\n    await this.examModel.findByIdAndDelete(examId);\n\n    return successResponse({ message: 'Exam and related questions deleted' });\n  }\n\n  public async updateOeExam(examId: string, templates: Express.Multer.File[]) {\n    let mGuide: Express.Multer.File;\n    let oeTemplate: Express.Multer.File;\n\n    if (!templates) {\n      throw new BadRequestException(\n        'You need to provide the templates to update exam',\n      );\n    }\n\n    for (const template of templates) {\n      if (\n        template.mimetype ===\n          'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||\n        template.mimetype === 'application/pdf'\n      ) {\n        mGuide = template;\n      } else if (\n        template.mimetype ===\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      ) {\n        oeTemplate = template;\n      }\n    }\n\n    if (!mGuide) {\n      throw new BadRequestException(\n        'Please provide the marking guide in .docx or .pdf format',\n      );\n    }\n\n    if (!oeTemplate) {\n      throw new BadRequestException(\n        'Please provide the questions in .xlsx format',\n      );\n    }\n\n    return this.updateOeExamProvider.updateOeExam(examId, mGuide, oeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateTokenProvider.html":{"url":"classes/GenerateTokenProvider.html","title":"class - GenerateTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/providers/generate-token.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth/providers/generate-token.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    signToken(adminId: string, payload?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/auth/providers/generate-token.provider.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                adminId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from '../config/jwt.config';\nimport { Inject } from '@nestjs/common';\n\nexport class GenerateTokenProvider {\n  constructor(\n    private readonly jwtService: JwtService,\n\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n  ) {}\n\n  public async signToken(adminId: string, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: adminId,\n        ...payload,\n      },\n      {\n        secret: this.jwtConfiguration.secret,\n        expiresIn: this.jwtConfiguration.accessTokenTtl,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalHttpExceptionFilter.html":{"url":"classes/GlobalHttpExceptionFilter.html","title":"class - GlobalHttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalHttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/global-http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/filters/global-http-exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class GlobalHttpExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const exceptionResponse: any =\n      exception instanceof HttpException\n        ? exception.getResponse()\n        : { message: exception.message || 'Internal server error' };\n\n    const message =\n      typeof exceptionResponse === 'string'\n        ? exceptionResponse\n        : Array.isArray(exceptionResponse?.message)\n          ? exceptionResponse.message[0]\n          : exceptionResponse?.message || 'An error occurred';\n\n    return response.status(status).json({ success: false, message: message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMcqQuestion.html":{"url":"interfaces/IMcqQuestion.html","title":"interface - IMcqQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMcqQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/mcq-question.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            A\n                                        \n                                \n                                \n                                        \n                                            B\n                                        \n                                \n                                \n                                        \n                                            C\n                                        \n                                \n                                \n                                        \n                                            Correct Answer\n                                        \n                                \n                                \n                                        \n                                            D\n                                        \n                                \n                                \n                                        \n                                            Question\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        A\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        A:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        B\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        B:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        C\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        C:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Correct Answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Correct Answer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        D\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        D:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMcqQuestion {\n    Question: string;\n    A: string;\n    B: string;\n    C: string;\n    D: string;\n    'Correct Answer': string;\n}\n\nexport const iMcqQuestionExpectedKeys : (keyof IMcqQuestion)[] = [\n    \"Question\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"Correct Answer\"\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOeQuestion.html":{"url":"interfaces/IOeQuestion.html","title":"interface - IOeQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOeQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/oe-question.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Question\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IOeQuestion {\n    Question: String;\n}\n\nexport const iOeExpectedKeys : (keyof IOeQuestion)[] = [\"Question\"]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStudent.html":{"url":"interfaces/IStudent.html","title":"interface - IStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interfaces/student.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FullName\n                                        \n                                \n                                \n                                        \n                                            Matric No\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Matric No\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Matric No:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IStudent {\n  'FullName': string;\n  'Matric No': string;\n}\n\nexport const iStudentExpectedKeys: (keyof IStudent)[] = [\n  'FullName',\n  'Matric No',\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/auth/dtos/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&.])[A-Za-z\\d@$!%*#?&.]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/auth/dtos/login.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n  \n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&.])[A-Za-z\\d@$!%*#?&.]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mcq.html":{"url":"classes/Mcq.html","title":"class - Mcq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mcq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/mcq.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                options\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/mcq.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mcq {\n  question: string;\n  options: string[];\n  answer: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/McqQuestion.html":{"url":"classes/McqQuestion.html","title":"class - McqQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  McqQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/mcq/mcq-question.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answer\n                            \n                            \n                                    \n                                options\n                            \n                            \n                                    \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq/mcq-question.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq/mcq-question.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/mcq/mcq-question.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type McqQuestionDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class McqQuestion {\n  @Prop({ required: true, unique: true })\n  question: string;\n\n  @Prop({ type: [String], required: true  })\n  options: string[];\n\n  @Prop({ required: true })\n  answer: string;\n}\n\nexport const McqQuestionSchema = SchemaFactory.createForClass(McqQuestion);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OeQuestion.html":{"url":"classes/OeQuestion.html","title":"class - OeQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OeQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/schemas/oe/oe-question.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/schemas/oe/oe-question.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type OeQuestionDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class OeQuestion {\n    @Prop()\n    question: string\n}\n\nexport const OeQuestionSchema = SchemaFactory.createForClass(OeQuestion)\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/schemas/student.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                matricNo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/schemas/student.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        matricNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, index: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/schemas/student.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\n\nexport type StudentDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      return ret;\n    },\n  },\n})\nexport class Student {\n  @Prop({ required: true })\n  fullName: string;\n\n  @Prop({ required: true, index: true, unique: true })\n  matricNo: string;\n}\n\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('student')\nexport class StudentController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nStudentService \n\nStudentService \n\n\n\nStudentModule\n\nStudentModule\n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StudentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentController } from './student.controller';\nimport { StudentService } from './providers/student.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Student, StudentSchema } from './schemas/student.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Student.name,\n        schema: StudentSchema,\n      },\n    ]),\n  ],\n  controllers: [StudentController],\n  providers: [StudentService],\n  exports: [StudentService]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/providers/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                insertStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/student/providers/student.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        insertStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertStudents(tutorialList: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/providers/student.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tutorialList\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Student, StudentDocument } from '../schemas/student.schema';\nimport { Connection, Model } from 'mongoose';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport {\n  iStudentExpectedKeys,\n  IStudent,\n} from 'src/utils/interfaces/student.interface';\n\n@Injectable()\nexport class StudentService {\n  constructor(\n    @InjectModel(Student.name)\n    private readonly studentModel: Model,\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async insertStudents(\n    tutorialList: Express.Multer.File,\n  ): Promise {\n    let insertedStudentIds: string[] = [];\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      // Extract student data from the tutorial list template\n      const students = parseTemplate(\n        tutorialList,\n        iStudentExpectedKeys,\n      );\n\n      const operations = students\n        .filter((student) => student['Matric No'])\n        .map((student) => ({\n          updateOne: {\n            filter: { matricNo: student['Matric No'] },\n            update: { $set: student },\n            upsert: true,\n          },\n        }));\n\n      await this.studentModel.bulkWrite(operations, { session });\n\n      // Fetch all affected student IDs\n      const affectedMatricNos = students.map((s) => s['Matric No']);\n      const affectedStudents = await this.studentModel\n        .find({ matricNo: { $in: affectedMatricNos } }, '_id')\n        .session(session);\n\n      insertedStudentIds = affectedStudents.map((s) => s._id.toString());\n\n      await session.commitTransaction();\n\n      return insertedStudentIds;\n    } catch (error) {\n      await session.abortTransaction();\n      throw new InternalServerErrorException(\n        error.message || 'Failed to insert students',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMcqExamParamDto.html":{"url":"classes/UpdateMcqExamParamDto.html","title":"class - UpdateMcqExamParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMcqExamParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/update-mcq-exam-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                examId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        examId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exam/dtos/update-mcq-exam-param.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class UpdateMcqExamParamDto {\n    @IsString()\n    @IsNotEmpty()\n    examId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateMcqExamProvider.html":{"url":"injectables/UpdateMcqExamProvider.html","title":"injectable - UpdateMcqExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateMcqExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/update-mcq-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                prepareListForBulkWrite\n                            \n                            \n                                    Public\n                                    Async\n                                updateMcqExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mcqQuestionModel: Model, examSchema: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/update-mcq-exam.provider.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mcqQuestionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examSchema\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareListForBulkWrite\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareListForBulkWrite(mcqList: IMcqQuestion[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-mcq-exam.provider.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mcqList\n                                            \n                                                            IMcqQuestion[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateMcqExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMcqExam(examId: string, mcqTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-mcq-exam.provider.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mcqTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport {\n  IMcqQuestion,\n  iMcqQuestionExpectedKeys,\n} from 'src/utils/interfaces/mcq-question.interface';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport { Connection, Model } from 'mongoose';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport {\n  McqQuestion,\n  McqQuestionDocument,\n} from '../schemas/mcq/mcq-question.schema';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { successResponse } from 'src/utils/response-writer';\nimport { examType } from '../enums/exam-type.enum';\n\n@Injectable()\nexport class UpdateMcqExamProvider {\n  constructor(\n    @InjectModel(McqQuestion.name)\n    private readonly mcqQuestionModel: Model,\n\n    @InjectModel(Exam.name)\n    private readonly examSchema: Model,\n\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async updateMcqExam(examId: string, mcqTemplate: Express.Multer.File) {\n\n    const exam = await this.examSchema.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    if (exam.examType !== examType.MCQ) {\n      throw new BadRequestException('Exam mode is not MCQ')\n    }\n\n    const mcqList = parseTemplate(\n      mcqTemplate,\n      iMcqQuestionExpectedKeys,\n    );\n\n    if (mcqList.length === 0) {\n      throw new BadRequestException('Questions template is empty');\n    }\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      const operations = this.prepareListForBulkWrite(mcqList);\n\n      let result = await this.mcqQuestionModel.bulkWrite(operations, {\n        session,\n      });\n\n      const insertedQuestionIds = Object.values(result.upsertedIds || {});\n\n      exam.questions.push(...insertedQuestionIds)\n      await exam.save({session})\n\n      await session.commitTransaction();\n\n      return successResponse({ message: 'Exam updated successfully.' });\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException(\n        error.message || 'Failed to save exam questions',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n\n  private prepareListForBulkWrite(mcqList: IMcqQuestion[]) {\n    const collapseMcqList = mcqList.map((mcq) => ({\n      question: mcq.Question,\n      options: [mcq.A, mcq.B, mcq.C, mcq.D],\n      answer: mcq['Correct Answer'],\n    }));\n\n    const operations = collapseMcqList.map((item) => ({\n      updateOne: {\n        filter: { question: item.question },\n        update: { $set: item },\n        upsert: true,\n      },\n    }));\n    return operations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateOeExamProvider.html":{"url":"injectables/UpdateOeExamProvider.html","title":"injectable - UpdateOeExamProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateOeExamProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/update-oe-exam.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                updateOeExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oeQuestionModel: Model, examSchema: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/update-oe-exam.provider.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oeQuestionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examSchema\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOeExam\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOeExam(examId: string, markingGuide: Express.Multer.File, oeTemplate: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exam/providers/update-oe-exam.provider.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                markingGuide\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oeTemplate\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Exam, ExamDocument } from '../schemas/exam.schema';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport {\n  OeQuestion,\n  OeQuestionDocument,\n} from '../schemas/oe/oe-question.schema';\nimport { Connection, Model } from 'mongoose';\nimport { parseTemplate } from 'src/utils/template-parser';\nimport {\n  iOeExpectedKeys,\n  IOeQuestion,\n} from 'src/utils/interfaces/oe-question.interface';\nimport { successResponse } from 'src/utils/response-writer';\nimport { examType } from '../enums/exam-type.enum';\n\n@Injectable()\nexport class UpdateOeExamProvider {\n  constructor(\n    @InjectModel(OeQuestion.name)\n    private readonly oeQuestionModel: Model,\n\n    @InjectModel(Exam.name)\n    private readonly examSchema: Model,\n\n    @InjectConnection()\n    private readonly connection: Connection,\n  ) {}\n\n  public async updateOeExam(\n    examId: string,\n    markingGuide: Express.Multer.File,\n    oeTemplate: Express.Multer.File,\n  ) {\n    const exam = await this.examSchema.findById(examId);\n\n    if (!exam) {\n      throw new NotFoundException('Exam not found');\n    }\n\n    if (exam.examType !== examType.OE) {\n      throw new BadRequestException('Exam mode is not OE');\n    }\n\n    const oeqList = parseTemplate(oeTemplate, iOeExpectedKeys);\n\n    if (oeqList.length === 0) {\n      throw new BadRequestException('Question template is empty');\n    }\n\n    const session = await this.connection.startSession();\n    session.startTransaction();\n\n    try {\n      const operations = oeqList.map((oeq) => ({\n        insertOne: { document: { question: oeq.Question } },\n      }));\n\n      let result = await this.oeQuestionModel.bulkWrite(operations, {\n        session,\n      });\n\n      const insertedQuestionIds = Object.values(result.insertedIds || {});\n      console.log(insertedQuestionIds)\n\n      // TODO: Create Assistant and update exam with assistantId\n\n      exam.questions.push(...insertedQuestionIds);\n      await exam.save({ session });\n\n      await session.commitTransaction();\n\n      return successResponse({ message: 'Exam updated successfully' });\n    } catch (error) {\n      await session.abortTransaction();\n      throw new BadRequestException(\n        error.message || 'Failed to save exam questions',\n      );\n    } finally {\n      await session.endSession();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/admin/auth/constants/auth.constants.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/constants/auth.constants.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/decorators/active-admin.decorator.ts\n            \n            variable\n            ActiveAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/auth/decorators/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth/guards/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/auth/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/auth/interfaces/active-admin-data.interface.ts\n            \n            interface\n            ActiveAdminData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth/providers/generate-token.provider.ts\n            \n            class\n            GenerateTokenProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/dtos/create-admin.dto.ts\n            \n            class\n            CreateAdminDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/providers/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/schemas/admin.schema.ts\n            \n            class\n            Admin\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/admin/schemas/admin.schema.ts\n            \n            variable\n            AdminSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/admin/schemas/admin.schema.ts\n            \n            type alias\n            AdminDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-exam-assignment.dto.ts\n            \n            class\n            CreateExamAssignmentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-mcq-exam.dto.ts\n            \n            class\n            CreateExamDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/dtos/mcq.dto.ts\n            \n            class\n            Mcq\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/dtos/update-mcq-exam-param.dto.ts\n            \n            class\n            UpdateMcqExamParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/exam.controller.ts\n            \n            controller\n            ExamController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/exam/providers/create-exam.provider.ts\n            \n            injectable\n            CreateExamProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/providers/exam.service.ts\n            \n            injectable\n            ExamService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/exam/providers/update-mcq-exam.provider.ts\n            \n            injectable\n            UpdateMcqExamProvider\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/providers/update-oe-exam.provider.ts\n            \n            injectable\n            UpdateOeExamProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/schemas/exam-assigment.schema.ts\n            \n            class\n            ExamAssignment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam-assigment.schema.ts\n            \n            variable\n            ExamAssignmentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam-assigment.schema.ts\n            \n            type alias\n            ExamAssignmentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/exam.schema.ts\n            \n            class\n            Exam\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam.schema.ts\n            \n            variable\n            ExamSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/exam.schema.ts\n            \n            type alias\n            ExamDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/mcq/mcq-question.schema.ts\n            \n            class\n            McqQuestion\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq/mcq-question.schema.ts\n            \n            variable\n            McqQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/mcq/mcq-question.schema.ts\n            \n            type alias\n            McqQuestionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/schemas/oe/oe-question.schema.ts\n            \n            class\n            OeQuestion\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/exam/schemas/oe/oe-question.schema.ts\n            \n            variable\n            OeQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/exam/schemas/oe/oe-question.schema.ts\n            \n            type alias\n            OeQuestionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/global-http-exception.filter.ts\n            \n            class\n            GlobalHttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/providers/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/schemas/student.schema.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/student/schemas/student.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/student/schemas/student.schema.ts\n            \n            type alias\n            StudentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/mcq-question.interface.ts\n            \n            interface\n            IMcqQuestion\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/mcq-question.interface.ts\n            \n            variable\n            iMcqQuestionExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/oe-question.interface.ts\n            \n            interface\n            IOeQuestion\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/oe-question.interface.ts\n            \n            variable\n            iOeExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/interfaces/student.interface.ts\n            \n            interface\n            IStudent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/utils/interfaces/student.interface.ts\n            \n            variable\n            iStudentExpectedKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/response-writer.ts\n            \n            function\n            successResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/template-parser.ts\n            \n            function\n            parseTemplate\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            helmet : ^8.1.0\n        \n            joi : ^17.13.3\n        \n            mongoose : ^8.13.2\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            xlsx : ^0.18.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                        \n                            examSchemaEnum   (src/.../exam-schema.enum.ts)\n                        \n                        \n                            examType   (src/.../exam-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-schema.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        examSchemaEnum\n                    \n                \n                        \n                            \n                                 McqExam\n                            \n                        \n                        \n                            \n                                Value : McqExam\n                            \n                        \n                        \n                            \n                                 TheoryExam\n                            \n                        \n                        \n                            \n                                Value : TheoryExam\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        examType\n                    \n                \n                        \n                            \n                                 MCQ\n                            \n                        \n                        \n                            \n                                Value : McqQuestion\n                            \n                        \n                        \n                            \n                                 OE\n                            \n                        \n                        \n                            \n                                Value : OeQuestion\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            parseTemplate   (src/.../template-parser.ts)\n                        \n                        \n                            successResponse   (src/.../response-writer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/template-parser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseTemplate\n                        \n                    \n                \n            \n            \n                \nparseTemplate(template, expectedKeys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                template\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expectedKeys\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [] | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/response-writer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        successResponse\n                        \n                    \n                \n            \n            \n                \nsuccessResponse(__namedParameters: {message: string, data: any})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Oluwafemi Ojuri\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nExamModule -->\n\nStudentModule->ExamModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nStudentService \n\nStudentService \n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCreateExamProvider\n\nCreateExamProvider\n\nExamModule -->\n\nCreateExamProvider->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nUpdateMcqExamProvider\n\nUpdateMcqExamProvider\n\nExamModule -->\n\nUpdateMcqExamProvider->ExamModule\n\n\n\n\n\nUpdateOeExamProvider\n\nUpdateOeExamProvider\n\nExamModule -->\n\nUpdateOeExamProvider->ExamModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AdminDocument   (src/.../admin.schema.ts)\n                        \n                        \n                            ExamAssignmentDocument   (src/.../exam-assigment.schema.ts)\n                        \n                        \n                            ExamDocument   (src/.../exam.schema.ts)\n                        \n                        \n                            McqQuestionDocument   (src/.../mcq-question.schema.ts)\n                        \n                        \n                            OeQuestionDocument   (src/.../oe-question.schema.ts)\n                        \n                        \n                            StudentDocument   (src/.../student.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/schemas/admin.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AdminDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/exam-assigment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ExamAssignmentDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/exam.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ExamDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/mcq/mcq-question.schema.ts\n    \n    \n        \n            \n                \n                    \n                    McqQuestionDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/exam/schemas/oe/oe-question.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OeQuestionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/student/schemas/student.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StudentDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveAdmin   (src/.../active-admin.decorator.ts)\n                        \n                        \n                            AdminSchema   (src/.../admin.schema.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            ExamAssignmentSchema   (src/.../exam-assigment.schema.ts)\n                        \n                        \n                            ExamSchema   (src/.../exam.schema.ts)\n                        \n                        \n                            iMcqQuestionExpectedKeys   (src/.../mcq-question.interface.ts)\n                        \n                        \n                            iOeExpectedKeys   (src/.../oe-question.interface.ts)\n                        \n                        \n                            iStudentExpectedKeys   (src/.../student.interface.ts)\n                        \n                        \n                            McqQuestionSchema   (src/.../mcq-question.schema.ts)\n                        \n                        \n                            OeQuestionSchema   (src/.../oe-question.schema.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../auth.constants.ts)\n                        \n                        \n                            StudentSchema   (src/.../student.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth/decorators/active-admin.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveAdminData, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveAdminData = request[REQUEST_USER_KEY];\n\n    return field ? user?.[field] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/admin/schemas/admin.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdminSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Admin)\n                    \n                \n\n\n        \n    \n\n    src/admin/auth/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) => SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n\n    src/admin/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/exam-assigment.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExamAssignmentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ExamAssignment)\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/exam.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExamSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Exam)\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/mcq-question.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iMcqQuestionExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"Question\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"Correct Answer\"\n]\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/oe-question.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iOeExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"Question\"]\n                    \n                \n\n\n        \n    \n\n    src/utils/interfaces/student.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iStudentExpectedKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'FullName',\n  'Matric No',\n]\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/mcq/mcq-question.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        McqQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(McqQuestion)\n                    \n                \n\n\n        \n    \n\n    src/exam/schemas/oe/oe-question.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OeQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(OeQuestion)\n                    \n                \n\n\n        \n    \n\n    src/student/schemas/student.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Student)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
